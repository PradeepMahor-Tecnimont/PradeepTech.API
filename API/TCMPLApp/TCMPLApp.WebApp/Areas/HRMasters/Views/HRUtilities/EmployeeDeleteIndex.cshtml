@model TCMPLApp.WebApp.Models.EmployeeDeleteIndexViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@{
    ViewData["Title"] = "Employee delete request list";
    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@Html.AntiForgeryToken()

@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="HRMasters">HR Masters</a></li>
        <li class="breadcrumb-item"><a asp-action="UtilityIndex" asp-controller="Home" asp-area="HRMasters">Utilities</a></li>
        <li class="breadcrumb-item active" aria-current="page">Employee delete request list</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />    
}

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Employee delete request list</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar"> 
            <a title="Create request" class="btn btn-outline-primary btn-sm border border-white" 
                href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("EmployeeDeleteRequest", "HRUtilities", new { Area = "HRMasters" })'
               data-statichtmlsourcedivid=""
               data-modaltitle="Create request"
               data-modalheader="Create request">
                <i class="fas fa-plus"></i> Create
            </a>            
        </div>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbEmployeeDelete" class="table table-striped table-bordered table-responsive-lg">
            <thead class="bg-info text-white">
                <tr>                    
                    <th class="text-center">@Html.DisplayNameFor(model => model.Empno)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.Name)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.Createdon)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.Createdbyname)</th>                    
                    <th class="text-center">@Html.DisplayNameFor(model => model.Isapproved)</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>                
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/lib/moment.js/moment.js" asp-append-version="true"></script>
    <script>   
        $(document).ready(function () {
            loadEmployeedeleteDataTable();
        });

        function localScript() {

        };

        let pvvUrlloadEmployeeDeleteList = "@Url.Action("GetEmployeeDeleteList", "HRUtilities")";

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                let datatableColumns = [
                    { 'data': "empno", 'className': "text-center" },
                    { 'data': "name", 'className': "text-left" },                    
                    {
                        'data': "createdon",
                        'render': function (data) {
                            if (data != null) {
                                return moment(data).format('DD-MMM-YYYY');
                            }
                            return null;
                        },
                        'className': "text-center"
                    },
                    { 'data': "createdbyname", 'className': "text-left" },
                    {
                        'data': "isapproved",
                        'render': function (data) {
                            if (data == 1) {
                                return 'Yes';
                            } else {
                                return '';
                            }
                        },
                        'className': "text-center"
                    }, 
                    {
                        'data': null,
                        'className': "td-icon",
                        'render': function (data, type, row) {
                            if (data.createdby != @currentUserIdentity.EmpNo) {
                                return ' <button class="btn btn-outline-danger btn-sm border-none sweet-multiple"  ' +
                                    ' onclick="showDeleteConfirmationPopup(event,this);" ' +
                                ' data-url="@Url.Action("EmployeeDeleteRequestApprove", "HRUtilities", new { Area = "HRMasters" })" ' +
                                ' data-id="' + data.keyid + '"' +
                                    ' data-redirecturl="@Url.Action("EmployeeDeleteIndex", "HRUtilities", new { Area = "HRMasters" })"' +
                                    ' data-modaltitle="Please Confirm!" ' +
                                    ' data-confirmationtext="Do you really want to delete employee  - ' + data.empno + ' ?" ' +
                                    ' data-confirmationtype="warning" ' +
                                    ' data-confirmbuttontext="Action"  ' +
                                    ' title="Delete employee" ' +
                                    ' title="Delete employee" > ' +
                                    ' <i class="fas fa-user-alt" aria-hidden="true"></i> ' +
                                    ' </button> ';
                            }
                            else {
                                return ' <button class="btn btn-outline- btn-sm border-none sweet-multiple"><i class="fas fa-ban theme-white" title="You can not approve" aria-hidden="true"></i> </button> ';
                            }
                        },
                        'className': "td-icon",
                    },
                    {
                        'data': null,
                        'className': "td-icon",
                        'render': function (data, type, row) {                            
                            return ' <button class="btn btn-outline-danger btn-sm border-none " ' +
                                ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                ' data-jqueryselector = "showconfirmationmodal" ' +
                                ' data-url="@Url.Action("EmployeeDeleteRequestDelete", "HRUtilities", new { Area = "HRMasters" })"' +
                                ' data-id="' + data.keyid + '"' +
                                ' data-redirecturl="@Url.Action("EmployeeDeleteIndex", "HRUtilities", new { Area = "HRMasters" })" ' +
                                ' data-modaltitle="Please Confirm!" ' +
                                ' data-confirmationtext=\'Do you want to delete request for employee "' + data.empno + '" ?\' ' +
                                ' data-confirmationtype="warning" ' +
                                ' title="Delete request" ' +
                                ' data-confirmbuttontext="Delete request" > ' +
                                ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                ' </button>';                            
                        },
                        'className': "td-icon",                    
                    }
                ];


            </text>
        }

        function loadEmployeedeleteDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbEmployeeDelete",
                pColumns: datatableColumns,
                pUrl: pvvUrlloadEmployeeDeleteList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null                   
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };        

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

        $('#buttonSearch').on('click', function () {
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadEmployeedeleteDataTable();
                notify('success', data.response, 'Success');
            }
        };


        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');
            loadEmployeedeleteDataTable();
            hideLoader();
        }

    </script>
}