@model TCMPLApp.WebApp.Models.ProspectiveEmployeesViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()


@{
    ViewData["Title"] = "Prospective Employees";
}

@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="HRMasters">HR Masters</a></li>
        <li class="breadcrumb-item active" aria-current="page">Prospective Employees</li>
    </ol>
}
@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}
@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.StartDate" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.EndDate" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.OfficeLocationCode" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.Costcode" />

<form asp-controller="HRMIS"
      asp-action="ProspectiveEmployeesDetailsGet"
      id="formProspectiveEmployeesDetailsGet">

    <input type="hidden" asp-for="KeyId" name="id" id="KeyId" />
</form>


<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Prospective Employees</p>
    </div>
    <div class="d-flex flex-row">
        @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.HRMasters.HRMastersHelper.ActionHRMISProspectiveUpdate))
        {
            <a title="New Prospective Employees" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("ProspectiveEmployeesCreate", "HRMIS", new { Area = "HRMasters" })'
               data-statichtmlsourcedivid=""
               data-modaltitle="New Prospective Employees"
               data-modalheader="New Prospective Employees">
                <i class="fas fa-plus"></i> Create
            </a>
        }
        @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.HRMasters.HRMastersHelper.ActionHRMISProspectiveReadAll))
        {
            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("ProspectiveEmployeesFilterGet", "HRMIS", new { Area = "HRMasters" })'
               data-modaltitle="Filters - Prospective Employees"
               data-modalheader="Filters - Prospective Employees">
                <i class="fas fa-filter"></i>&nbsp;Filters
            </a>

            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-actionid="ProspectiveEmployeesIndex"
               data-url='@Url.Action("ResetFilter", "HRMIS", new { Area = "HRMasters" })'
               href="#"
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>

            <a style="float:right"
               class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
               href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("HRMISExcelDownload", "HRMIS", new { typeId = @ViewBag.XLDownloadType })'>
                <i class="fas fa-file-excel green-color"></i>&nbsp;Export
            </a>

        }
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbProspectiveEmployees" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(m => m.Dept )</th>
                    <th>@Html.DisplayNameFor(m => m.EmpName )</th>
                    <th>@Html.DisplayNameFor(m => m.OfficeLocation )</th>
                    <th>@Html.DisplayNameFor(m => m.ProposedDoj )</th>
                    <th>@Html.DisplayNameFor(m => m.RevisedDoj )</th>
                    <th>@Html.DisplayNameFor(m => m.JoinStatus )</th>
                    <th>@Html.DisplayNameFor(m => m.TcmplEmp )</th>
                    @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.HRMasters.HRMastersHelper.ActionHRMISProspectiveUpdate))
                    {

                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                    }
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/HRMasters.js" asp-append-version="true"></script>
    <script>

        $(document).ready(function () {
            loadProspectiveEmployeesDataTable();

        });

        function localScript() {
            initSelect2();
            initDatePicker();

            $('#btnExportExcel').off('click').on('click', function () {
                event.preventDefault();
                event.stopPropagation();
                var url = '@Url.Action("HRMISExcelDownload", "HRMIS", new {Area = "HRMasters" })';
                exportExcel(url);
            });


        };

        let vVUloadProspectiveEmployeesList = "@Url.Action("GetListsProspectiveEmployees", "HRMIS")";

        function loadProspectiveEmployeesDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbProspectiveEmployees",
                pColumns: datatableColumns,
                pUrl: vVUloadProspectiveEmployeesList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    startDate: $('#FilterDataModel_StartDate').val() ? $('#FilterDataModel_StartDate').val() : null,
                    endDate: $('#FilterDataModel_EndDate').val() ? $('#FilterDataModel_EndDate').val() : null,
                    officeLocationCode: $('#FilterDataModel_OfficeLocationCode').val() ? $('#FilterDataModel_OfficeLocationCode').val() : null,
                    costcode: $('#FilterDataModel_Costcode').val() ? $('#FilterDataModel_Costcode').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                @*{
            data: null,
            render: function (data, type, row) {
            return data.empno + " - " + data.empName
            },
            },*@
                    { data: "dept" },
                    { data: "empName" },
                    { data: "officeLocation" },
                    {
                        data: "proposedDoj",
                        width: '10.0rem',
                        render: function (data, type, row) {
                            if (data)
                                return moment(data).format("DD-MMM-YYYY");
                            else
                                return '';
                        }
                    },

                    {
                        data: "revisedDoj",
                        width: '10.0rem',
                        render: function (data, type, row) {
                            if (data)
                                return moment(data).format("DD-MMM-YYYY");
                            else
                                return '';
                        }
                    },
                    { data: "joinStatus" },
                    { data: "tcmplEmp" }

                ];


            </text>
        };

        @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.HRMasters.HRMastersHelper.ActionHRMISProspectiveUpdate))
        {
            <text>
                datatableColumns.push(
                    {
                        data: null,
                        render: function (data, type, row) {
                            var temp = "'" + data.keyId + "'";
                            return '<a class="btn btn-outline-primary btn-sm border-none" href="#" onclick="GotoDetails(' + temp + ')" title="Detail"><i class="fas fa-edit"></i></a>';

                            //return '<button title="Edit" class="btn btn-outline-primary btn-sm border-none" ' +
                            //    ' data-jqueryselector="openmodal" ' +
                            //    ' data-modalcontainer="modalcontainer" ' +
                            //    ' data-url="@Url.Action("ProspectiveEmployeesEdit", "HRMIS", new { Area = "HRMasters" })" ' +
                            //    ' data-modalpopupwidth="rightw35" ' +
                            //    ' data-id="' + row.keyId + '"' +
                            //    ' data-modaltitle="Edit Prospective Employees" ' +
                            //    ' data-modalheader="Edit Prospective Employees"> ' +
                            //    ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                            //    ' </button>'

                        },
                        className: "td-icon",
                    },
                    {
                        'data': null,
                        render: function (data, type, row) {
                            return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                ' data-jqueryselector = "showconfirmationmodal" ' +
                                ' data-url="@Url.Action("ProspectiveEmployeesDelete", "HRMIS", new { Area = "HRMasters" })"' +
                                ' data-id="' + data.keyId + '"' +
                                ' data-PostDeleteReLoadDataTables="OK" ' +
                                ' data-modaltitle="Please Confirm!" ' +
                                ' data-confirmationtext="Do you want to Delete Prospective Employees ' + data.empName + ' " ' +
                                ' data-confirmationtype="warning" ' +
                                ' title="Delete Prospective Employees" ' +
                                ' data-confirmbuttontext="Delete Prospective Employees" > ' +
                                ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                ' </button>';
                        },
                        'className': "td-icon text-center  align-middle",
                    }

                );
            </text>
        };

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadProspectiveEmployeesDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadProspectiveEmployeesDataTable();
            }
        });

        function GotoDetails(id) {

            $('#KeyId').val(id);
            var frm = $('#formProspectiveEmployeesDetailsGet');
            frm.submit();
        }

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadProspectiveEmployeesDataTable();
                notify('success', data.response, 'Success');
            }
        };
        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');


            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_EndDate").val(data.endDate);
            $("#FilterDataModel_OfficeLocationCode").val(data.OfficeLocationCode);
            $("#FilterDataModel_Costcode").val(data.costcode);

            loadProspectiveEmployeesDataTable();
            hideLoader();
        }
        function initDatePicker() {


            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                nowButton: true
            });

            $('#proposedDoj').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#ProposedDoj").val(date.format('DD-MMM-YYYY'));
            });

            $('#revisedDoj').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#RevisedDoj").val(date.format('DD-MMM-YYYY'));
            });


            $('#startDateXl').datepicker({
                format: "dd-MM-yyyy",
                autoclose: true
            }).on('change', function (e, date) {

                var fvDate = $(this).val()

                $("#StartDate").val(fvDate)

                $(this).datepicker('hide')
            })

            $('#endDateXl').datepicker({
                format: "dd-MM-yyyy",
                autoclose: true
            }).on('change', function (e, date) {

                var fvDate = $(this).val()
                $("#EndDate").val(fvDate)

                $(this).datepicker('hide')

            });

            $('#startDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#StartDate").val(date.format('DD-MMM-YYYY'));

                var vStartDate = moment(date);
                var futureMonthEnd = moment(vStartDate).endOf('month');

                $('#endDateFilter').bootstrapMaterialDatePicker('setDate', futureMonthEnd);
                $('#endDateFilter').val(moment(futureMonthEnd).format('DD-MMM-YYYY'));
                $("#EndDate").val(moment(futureMonthEnd).format('DD-MMM-YYYY'));
            });

            $('#endDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#EndDate").val(date.format('DD-MMM-YYYY'));
            });



        }
        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadProspectiveEmployeesDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        }
    </script>
}