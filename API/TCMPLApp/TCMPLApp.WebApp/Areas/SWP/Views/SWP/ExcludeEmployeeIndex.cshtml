@model TCMPLApp.WebApp.Models.ExcludeEmployeeViewModel;
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    UserIdentity currentUserIdentity = CurrentUserIdentity;
    //const string actionName = "ExcludeEmployeeIndex";
    //const string controllerName = "SWP";
}

@section BreadCrumbs
{
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SWP">Smart work planning</a></li>
    <li class="breadcrumb-item active" aria-current="page">Exclude employee</li>
</ol>
}

@section styles
{
<link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />

<!-- DataTable -->
    @*<link rel="stylesheet" href="~/assets/plugins/data-tables/css/datatables.min.css" asp-append-version="true">*@
<!-- Material Datepicker css -->
<link rel="stylesheet" href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Exclude employee";
}


 
<input readonly type="hidden" asp-for="@Model.FilterDataModel.IsActive" />

<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Exclude employee</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">

            <a title="" class="btn btn-outline-primary btn-sm border-none" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw50"
               data-url='@Url.Action("ExcludeEmployeeCreate", "SWP", new { Area = "SWP" })'
               data-modaltitle="Create Exclude employee"
               data-modalheader="Create Exclude employee">
                <i class="fas fa-plus"></i> Exclude employee
            </a>
            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("ExcludeEmployeeFilterGet", "SWP", new { Area = "SWP" })'
               data-modaltitle="Filters - Exclude employee"
               data-modalheader="Filters - Exclude employee">
                <i class="fas fa-filter"></i>&nbsp;Filters
            </a>
             <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
                   data-actionid="ExcludeEmployeeIndex"
                   data-url='@Url.Action("ResetFilter", "SWP", new { Area = "SWP" })'
                   href="#"
                   onclick="resetFilter(event, this);"
                   style="display: none;">
                    <i class="fas fa-filter"></i> Reset
                </a>

                   <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
               href='@Url.Action("ExcelDownloadExcludeEmployee", "SWP", new { Area = "SWP" })'>
                <i class="fas fa-file-excel green-color"></i>&nbsp;Export
            </a>
        </div>
    </div>

    <div class="m-1"></div>

    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch"
                   placeholder="Search employee no or name...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">

                    <th>@Html.DisplayNameFor(model => model.Empno)</th>
                    <th>@Html.DisplayNameFor(model => model.EmployeeName)</th>
                    <th>@Html.DisplayNameFor(model => model.StartDate)</th>
                    <th>@Html.DisplayNameFor(model => model.EndDate)</th>
                    <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                    <th>@Html.DisplayNameFor(model => model.ModifiedBy)</th>
                    <th>@Html.DisplayNameFor(model => model.ModifiedOn)</th>
                    <th></th>
                </tr>
            </thead>
        </table> 
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script src="~/lib/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js" asp-append-version="true"></script>
<script src="~/js/site-rap.js" asp-append-version="true"></script>
<script type="text/javascript">

            function localScript() {
                initSelect2();
                initDatePicker();
              }

          function initDatePicker() {
                
            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0, 
                time: false,
                useCurrent: false
            });
            
            $("#startDate").on("change", function (event, date) {
                if (!date) {
                    $("#StartDate").val('');
                    $("#endDate").val('');
                    $("#endDate").trigger('change');
                    return;
              }
                else
                {
                    $("#StartDate").val(date.format("DD-MMM-YYYY"));
                    $('#endDate').bootstrapMaterialDatePicker('setMinDate', date);
                }
            });

             $("#endDate").on("change", function (event, date) {
                if (!date) {
                    $("#StartDate").val('');
                    $("#endDate").val('');
                    $("#endDate").trigger('change');
                    return;
              }
                else
                {
                    $("#EndDate").val(date.format("DD-MMM-YYYY"));
                }
            });
             if($('#StartDate').val()){
                   $('#startDate').val($('#StartDate').val());
                   $('#endDate').bootstrapMaterialDatePicker('setMinDate', $('#StartDate').val());
             }
              if($('#EndDate').val()){
                   $('#endDate').val($('#EndDate').val());
             }
          
            }

            $(document).ready(function () {

                    localLoadDataTable();

            });

            function localLoadDataTable() {
                var table = $('#tbGrid').DataTable({
                    drawCallback: function (settings) {
                        loadScript();
                    },
                    destroy: true,
                    pageLength: 25,
                    lengthMenu: [25,50],
                    processing: true,
                    responsive: true,
                    autoWidth: false,
                    serverSide: true,
                    stateSave: true,
                    info: false,
                    filter: false,
                    layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                  @if ((bool)@Context.Items["isMobile"] == false)
                    {
                       <text>
                        ordering: false,
                        //order: [1, "asc"],
                        columns: [
                            { data: "empno" },
                            { data: "employeeName" },
                            { data: "startDate" },
                            { data: "endDate" },
                            //{ data: "isActive" },
                            {
                                    data: null,
                                    width: '3.0rem',
                                    render: function (data, type, row) {
                                        if (data.isActive == 1 || data.isActive == '1' ) {
                                            return ' <i class="	fas fa-check f-20 deepskyblueColor "   aria-hidden="true"></i> ';

                                        } else {
                                            return ' ';

                                        }
                                    },
                                    class: ' text-center  align-middle'
                             },
                            { data: "modifiedBy" },
                            { data: "modifiedOn" }, 
                            {
                                data: null,
                                render: function (data, type, row) {

                                        return '<button class="btn btn-outline-primary btn-sm border-none" ' +
                                            ' data-jqueryselector="openmodal" ' +
                                            ' data-modalcontainer="modalcontainer" ' +
                                            ' data-url="@Url.Action("ExcludeEmployeeUpdate", "SWP", new { Area = "SWP" })"' +
                                            ' data-modalpopupwidth="rightw50" ' +
                                            ' data-id="' + data.keyId + '"' +
                                            ' data-modaltitle="Edit Exclude employee" ' +
                                            ' data-modalheader="Edit Exclude employee" ' +
                                            ' > ' +
                                            ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                            ' </button>' 
                                },
                                'className': "td-icon",
                            }
                        ],
                    </text>
                    }
                    else
                    {
                        <text>
                            ordering: false,
                            columns: [
                                {
                                    data: null,
                                    render: function (data, type, row) {
                                        var item = '<div class="card">';
                                        item += '<div class="card-mobiledatatable">';

                                        item += '</div></div>';
                                        return item
                                    },
                                    sortable: false,
                                    searchable: false,
                                    className: "datatable-td-mobile"
                                }
                            ],
                        </text>
                    }
                    ajax: {
                        headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                        url: '@Url.Action("GetListsExcludeEmployee", "SWP", new {Area = "SWP"})',
                        type: 'GET',
                        cache: true,
                        dataType: "json",
                        data: function (d) {
                            d.columns = null;
                            d.order = null;
                            d.search = null;
                            d.isActive = $("#FilterDataModel_IsActive").val();
                            d.genericSearch = $('#GenericSearch').val();
                            d.businessEntityId = null; // $('#FilterDataModel_BusinessEntityId').val();
                            d.startDateTime = null; // $('#FilterDataModel_StartDateTime').val();
                            d.endDateTime = null; // $('#FilterDataModel_EndDateTime').val();
                            d.statusTypeId = null; // $('#FilterDataModel_StatusTypeId').val();
                            //d.companyCode =  $('#FilterDataModel_CompanyCode').val();
                            //d.vendor =  $('#FilterDataModel_Vendor').val();
                            //d.currency =  $('#FilterDataModel_Currency').val();
                            //d.projno =  $('#FilterDataModel_Projno').val();
                            //d.isActive = $('#FilterDataModel_IsActive').val();
                            //d.endDate = $('#FilterDataModel_EndDate').val();
                            },
                            error: function (request, status, error) {
                                notify('error', request.responseText, 'danger');
                            }
                        }
                });
            }



    $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                var dataTable = $('#tbGrid').DataTable();
                if ($("#GenericSearch").length) {
                        dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

        $('#buttonSearch').on('click', function () {
            var dataTable = $('#tbGrid').DataTable();
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

     function PostSaveReLoadDataTable(data) {
        if (data.success) {
            localLoadDataTable();
                $("#modalcontainer").modal('hide');


            hideLoader();
            notify('success', data.response, 'Success');
            }
        };

     function PostFilterReLoadDataTable(data) {
        if (data.success)
        {
            $("#FilterDataModel_IsActive").val(data.isActive);
            localLoadDataTable();
            $("#modalcontainer").modal('hide');
            hideLoader();
            notify('success', data.response, 'Success');
           }
        };



</script>
}