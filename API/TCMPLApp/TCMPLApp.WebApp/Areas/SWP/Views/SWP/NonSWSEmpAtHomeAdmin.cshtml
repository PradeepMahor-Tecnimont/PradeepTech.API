@model TCMPLApp.WebApp.Models.NonSWSEmpAtHomeViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    //const intBankCreateEditDeleteId = 175;

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section styles
{

<link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Non-eligible users working from home";

}

@section BreadCrumbs
{
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SWP">Smart work planning</a></li>
    <li class="breadcrumb-item active">Non-eligible users working from home</li>
</ol>
}

<div style="display:none">
    <input type="hidden" asp-for="@Model.FilterDataModel.IsActive" />
</div>

<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Non-eligible users working from home</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            @*            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
                data-jqueryselector="openmodal"
                data-modalcontainer="modalcontainer"
                data-modalpopupwidth="rightw35"
                data-url='@Url.Action("BankFilterGet", "Masters", new { Area = "LC" })'
                data-modaltitle="Filters - Bank"
                data-modalheader="Filters - Bank">
                <i class="fas fa-filter"></i>&nbsp;Filters
                </a>
                <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
                data-actionid="BankIndex"
                data-url='@Url.Action("ResetFilter", "Masters", new { Area = "LC" })'
                href="#"
                onclick="resetFilter(event, this);"
                style="display: none;">
                <i class="fas fa-filter"></i> Reset
                </a>
                <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
                data-jqueryselector="openmodal"
                data-modalcontainer="modalcontainer"
                data-modalpopupwidth="rightw35"
                data-url='@Url.Action("GetExcelSWPDMSUserHomePC", "SWP", new { Area = "SWP" })'
                data-modaltitle="Filters - Assign work space"
                data-modalheader="Filters - Assign work space">
                <i class="fas fa-file-excel green-color"></i>&nbsp;Export
                </a>
            *@
            <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
               href='@Url.Action("GetExcelNonSWSEmpAtHomeAdmin", "SWP", new { Area = "SWP" })'>
                <i class="fas fa-file-excel green-color"></i>&nbsp;Export
            </a>
        </div>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">

        <table id="tbGrid" class="table table-striped table-bordered table-responsive ">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th>@Html.DisplayNameFor(model => model.Empno)</th>
                    <th>@Html.DisplayNameFor(model => model.EmployeeName)</th>
                    <th>@Html.DisplayNameFor(model => model.Parent)</th>
                    <th>@Html.DisplayNameFor(model => model.Emptype)</th>
                    <th>@Html.DisplayNameFor(model => model.EmpGrade)</th>
                    <th>@Html.DisplayNameFor(model => model.EmpEmail)</th>
                    <th>@Html.DisplayNameFor(model => model.Deskid)</th>

                    <th>@Html.DisplayNameFor(model => model.IsSwpEligible)</th>
                    <th>@Html.DisplayNameFor(model => model.IsLaptopUser)</th>
                    <th>@Html.DisplayNameFor(model => model.PrimaryWorkspace)</th>
                    <th>@Html.DisplayNameFor(model => model.PresentCount)</th>
                    <th></th>

                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script type="text/javascript">
    function localScript() {

        initSelect2();

    }


    $(document).ready(function () {
        localLoadDataTable();
    });
    function localLoadDataTable() {

        $('#tbGrid').DataTable().destroy();

        $('#tbGrid tbody').empty();


        var table = $('#tbGrid').DataTable({
            drawCallback: function (settings) {
                loadScript();
            },
            ordering: true,
            order: [[1,"asc"]],
            destroy: true,
            pageLength: 25,
            lengthMenu: [25,50],
            processing: true,
            serverSide: true,
            stateSave: true,
            info: false,
            filter: false,
            layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
          @if ((bool)@Context.Items["isMobile"] == false)
            {
                <text>
                        columnDefs: [
                            { orderable: false, targets: "_all" }
                        ],
                        columns: [
                        { data: "empno" },
                        {data: "employeeName"},
                        {data: "parent"},
                        {data: "emptype"},
                        {data: "empGrade"},
                        {data: "empEmail"},
                        {data: "deskid"},
                        {data: "swpEligible"},
                        {data: "laptopUser"},
                        {data: "primaryWorkspace"},
                        {data: "presentCount"},
                         {
                            data: null,
                            render: function (data, type, row) {
                                return '';
                                },
                            className: "td-icon"
                        }
                    ],
                </text>
            }
            else
            {
                <text>
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row) {
                                var item = '<div class="card">';
                                item += '<div class="card-mobiledatatable">';

                                item += '</div></div>';
                                return item
                            },
                            sortable: false,
                            searchable: false,
                            className: "datatable-td-mobile"
                        }
                    ],
                </text>
            }
            ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetListNonSWSEmpAtHomeAdmin", "SWP")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    d.search = null;
                    d.genericSearch = null; // $('#FilterDataModel_GenericSearch').val();
                    d.businessEntityId = null; // $('#FilterDataModel_BusinessEntityId').val();
                    d.startDateTime = null; // $('#FilterDataModel_StartDateTime').val();
                    d.endDateTime = null; // $('#FilterDataModel_EndDateTime').val();
                    d.statusTypeId = null; // $('#FilterDataModel_StatusTypeId').val();
                    d.isActive = $('#FilterDataModel_IsActive').val();
                    //d.endDate = $('#FilterDataModel_EndDate').val();
                    },
                    error: function (request, status, error) {
                        showError(request);
                    }
                }
        });

        //dataTableSearch();
    }

</script>
}  