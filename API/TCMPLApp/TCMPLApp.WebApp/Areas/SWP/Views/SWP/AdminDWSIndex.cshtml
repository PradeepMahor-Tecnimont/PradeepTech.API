@model TCMPLApp.WebApp.Models.PrimaryWorkSpaceViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    //const int CoreOnDutyCreateEditDeleteId = 174;

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section BreadCrumbs
{
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SWP">Smart work planning</a></li>
    <li class="breadcrumb-item active">Deputation workspace employee list</li>
</ol>
}

@section styles
{

<link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Deputation workspace employee list";

}
<div style="display:none">


</div>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Deputation workspace - current status</p>
    </div>
    <div class="d-flex flex-row">
@*            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("AdminPWSFilterGet", "SWP", new { Area = "SWP" })'
               data-modaltitle="Filters - Assign work space"
               data-modalheader="Filters - Assign work space">
                <i class="fas fa-filter"></i>&nbsp;Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-actionid="AdminPWSPlanning"
               data-url='@Url.Action("ResetFilter", "SWP", new { Area = "SWP" })'
               href="#"
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>
*@
            <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
               href='@Url.Action("ExcelDownloadAdminDWS", "SWP", new { Area = "SWP" })'>
                <i class="fas fa-file-excel green-color"></i>&nbsp;Export
            </a>


       
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">

@*        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
*@
        <table id="tbDataGrid" class="table table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th >@Html.DisplayNameFor(model => model.Empno)</th>
                    <th >@Html.DisplayNameFor(model => model.EmployeeName)</th>
                    <th >@Html.DisplayNameFor(model => model.Emptype)</th>
                    <th >@Html.DisplayNameFor(model => model.EmpGrade)</th>
                    <th >@Html.DisplayNameFor(model => model.IsSwpEligibleDesc)</th>
                    <th >@Html.DisplayNameFor(model => model.IsLaptopUserText)</th>
                    <th >@Html.DisplayNameFor(model => model.IsDualMonitorUserText)</th>
                    <th >@Html.DisplayNameFor(model => model.WorkArea)</th>
                    <th >@Html.DisplayNameFor(model => model.Parent)</th>
                    <th >@Html.DisplayNameFor(model => model.Assign)</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script type="text/javascript">


    function localScript() {

        initSelect2();

     }

    function localLoadDataTable() {


        $('#tbDataGrid').DataTable().destroy();

        $('#tbDataGrid tbody').empty();
        var canEdit = @( currentUserIdentity.ProfileActions.Any(pa=> pa.ActionId == TCMPLApp.Domain.Models.SWP.SWPHelper.ActionPrimaryWsAdminEdit) ? "true" : "false" )
        var table = $('#tbDataGrid').DataTable({
            drawCallback: function (settings) {
                loadScript();
            },
            order: [[1, "asc"]],
            responsive: true,
            autoWidth: false,
            pageLength: 25,
            lengthMenu: [25, 50, 100, 200],
            processing: true,
            serverSide: true,
            stateSave: false,
            info: false,
            filter: false,
            layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
            columnDefs: [
                //{ orderable: false, targets: [0,1,2,3,4,5,6,7,8,9,10,11] }
                { orderable: false, targets: '_all' }
            ],
          @if ((bool)@Context.Items["isMobile"] == false)
          {
                <text>
                    columns: [
                        { data: "empno",  width: '3.0rem'  },
                        { data: "employeeName",  width: '10.0rem' },
                        { data: "emptype", width: '1.0rem'  },
                        { data: "empGrade", width: '3.0rem' },
                        { data: "isSwpEligibleDesc", width: '3.0rem' },
                        { data: "isLaptopUserText", width: '3.0rem'  },
                        { data: "isDualMonitorUserText", width: '3.0rem'  },
                        { data: "workArea", width: '3.0rem'  },
                        { data: "parent", width: '3.0rem'  },
                        { data: "assign", width: '3.0rem' }
                    ],
                </text>
            }
            else
            {
                <text>
                    ordering: false,
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row) {
                                var item = '<div class="card">';
                                item += '<div class="card-mobiledatatable">';
                                item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.EmployeeName)' + '</dt><dd class="col-lg-8">' + data.empName + '</dd></dl>';
                                item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.Parent)' + '</dt><dd class="col-lg-8">' + data.parent + '</dd></dl>';
                                item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.Office)' + '</dt><dd class="col-lg-8">' + data.approveYes + '</dd></dl>';
                                item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.SmartWorkspace)' + '</dt><dd class="col-lg-8">' + data.approveNo + '</dd></dl>';
                                item += '</div></div>';
                                return item
                            },
                            sortable: false,
                            searchable: false,
                            className: "datatable-td-mobile"
                        }
                    ],
                </text>
            }
            ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetListAdminEmployeeDWS", "SWP")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    d.search = null;
                   },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
        });

    }

    $(document).ready(function () {
        localLoadDataTable();

        //loadPrimaryWorkSpaceHeaderStatus();

    });



        function exportDWSCurrent() {
            let assignCodes = $("#excelDownloadPrimaryWorkspaceSet select[id=Assign]").val();
            $.ajax({
                headers: { "RequestVerificationToken": $('#excelDownloadPrimaryWorkspaceSet input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("ExcelDownloadPrimaryWorkspaceCurrent", "SWP", new {Area = "SWP" })',
                type: "POST",
                data: {
                    assign: assignCodes
                },
                cache: false,
                xhr: function () {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 2) {
                            if (xhr.status == 200) {
                                xhr.responseType = "blob";
                            }
                        }
                    };
                    return xhr;
                },
                beforeSend: function () {
                    showLoader();
                },

                success: function (blob, status, xhr) {

                    var filename = "";
                    var disposition = xhr.getResponseHeader('Content-Disposition');
                    if (disposition && disposition.indexOf('attachment') !== -1) {
                        var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                        var matches = filenameRegex.exec(disposition);
                        if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                    }
                    var link = document.createElement('a');
                    var url = window.URL.createObjectURL(blob);

                    link.href = window.URL.createObjectURL(blob);
                    link.download = filename;
                    link.click();
                    link.remove();
                    window.URL.revokeObjectURL(url);
                    hideLoader();
                    toastr.success("File downloaded successfully.");
                },
                error: function (xhr) {
                    showError(xhr);
                    hideLoader();
                }
            });
        }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                var dataTable = $('#tbDataGrid').DataTable();
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

        $('#buttonSearch').on('click', function () {
            var dataTable = $('#tbDataGrid').DataTable();
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

</script>
}