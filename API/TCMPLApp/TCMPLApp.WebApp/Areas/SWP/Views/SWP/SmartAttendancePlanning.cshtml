@model TCMPLApp.WebApp.Models.SWPSmartWorkSpaceViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    //const int CoreOnDutyCreateEditDeleteId = 174;

    UserIdentity currentUserIdentity = CurrentUserIdentity;

}

@section BreadCrumbs
{
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SWP">Smart work planning</a></li>
    <li class="breadcrumb-item active">Smart attendance planning</li>
</ol>
}

@section styles
{
<link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Smart attendance planning";
}

<div id="WeeklyAttendanceWorkSpace" name="WeeklyAttendanceWorkSpace">
    <div style="display:none">
        <input readonly type="hidden" asp-for="@Model.FilterDataModel.Assign" />
        <input readonly type="hidden" asp-for="@Model.FilterDataModel.DeskAssigmentStatus" />

        <input type="hidden" id="FilterDataModel_EmployeeTypeList" name="FilterDataModel_EmployeeTypeList" value='@String.Join(",", (Model.FilterDataModel.EmployeeTypeList != null) ? Model.FilterDataModel.EmployeeTypeList: new string[] { })' />
        <input type="hidden" id="FilterDataModel_GradeList" name="FilterDataModel_GradeList" value='@String.Join(",", (Model.FilterDataModel.GradeList != null) ? Model.FilterDataModel.GradeList: new string[] { })' />

        @Html.TextBoxFor(model => model.FilterDataModel.StartDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })
        @Html.TextBoxFor(model => model.FilterDataModel.EndDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })
    </div>

    <div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
        <div class="app-h4 app-card-header mb-2">
            <p>Weekly attendance planning</p>
        </div>
        <div class="card-toolbar">
            <div role="toolbar">
                <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
                   data-jqueryselector="openmodal"
                   data-modalcontainer="modalcontainer"
                   data-modalpopupwidth="rightw35"
                   data-url='@Url.Action("SmartAttendancePlanningFilterGet", "SWP", new { Area = "SWP" })'
                   data-modaltitle="Filters - Weekly Attendance"
                   data-modalheader="Filters - Weekly Attendance">
                    <i class="fas fa-filter"></i>&nbsp;Filters
                </a>

                <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
                   data-actionid="SmartAttendancePlan"
                   data-url='@Url.Action("ResetFilter", "SWP", new { Area = "SWP" })'
                   href="#"
                   onclick="resetFilter(event, this);"
                   style="display: none;">
                    <i class="fas fa-filter"></i> Reset
                </a>
                <a class="btn btn-outline-primary btn-sm border-white m-l-5 "
                   asp-action="SmartAttendanceIndex"
                   asp-area="SWP"
                   asp-controller="SWP">
                    <i class="fas fa-history"></i>  @localizer[" Goto current status"]
                </a>
                <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
                   data-jqueryselector="openmodal"
                   data-modalcontainer="modalcontainer"
                   data-modalpopupwidth="rightw35"
                   data-url='@Url.Action("ExcelDownloadSWSFilterGet", "SWP", new { Area = "SWP" })'
                   data-modaltitle="Filters - Assign work space"
                   data-modalheader="Filters - Assign work space">
                    <i class="fas fa-file-excel green-color"></i>&nbsp;Export
                </a>
            </div>
        </div>

        <div class="m-1"></div>
        <div class="bg-gray-active rounded ">
            <div class="col-sm-12 p-0 m-0">
                <div class="card">
                    <div class="card-header">
                        <h6 class="w-100"><strong class="text-left" style="float: left;">   Planning of week days    <span class="font-weight-bold text-left " id="planningForWeekDays" style=" margin-top: 20px;">  </span></strong>  <strong class="text-right " style="float: right;"> <span class="font-weight-bold text-right" id="assignInfo"> </span></strong></h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-6 col-6 col-md-3 col-sm-4 col-lg-2 col-xl-2 mt-2 mt-2">
                                <div class="card card-tile m-0">
                                    <div class="card-block border  rounded-sm  theme-light-cyan" style=" padding: 5px 25px 5px 25px">
                                        <div class="row align-items-center">
                                            <div class="col m-0 p-0">
                                                <h6 class="mb-2 f-w-300"> Total </h6>
                                                <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;"> <span id="totalCount" style="float: right; "></span> </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-2 mt-2">
                                <div class="card card-tile m-0">
                                    <div class="card-block  border  rounded-sm  theme-light-orange" style=" padding: 5px 25px 5px 25px">
                                        <div class="row align-items-center">
                                            <div class="col m-0 p-0">
                                                <h6 class="mb-2 f-w-300"> Monday </h6>
                                                <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;"> <span id="mondayCount" style="float: right; "></span> </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-2 mt-2">
                                <div class="card card-tile m-0">
                                    <div class="card-block border  rounded-sm  theme-light-green" style=" padding: 5px 25px 5px 25px">
                                        <div class="row align-items-center">
                                            <div class="col m-0 p-0">
                                                <h6 class="mb-2 f-w-300">  Tuesday </h6>
                                                <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;"><span id="tuesdayCount" style="float: right; "></span> </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-2 mt-2">
                                <div class="card card-tile m-0">
                                    <div class="card-block border  rounded-sm  theme-light-yellow" style=" padding: 5px 25px 5px 25px">
                                        <div class="row align-items-center">
                                            <div class="col m-0 p-0">
                                                <h6 class="mb-2 f-w-300">  Wednesday </h6>
                                                <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;"><span id="wednesdayCount" style="float: right; "></span> </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-2 mt-2">
                                <div class="card card-tile m-0">
                                    <div class="card-block border  rounded-sm  theme-light-blue" style=" padding: 5px 25px 5px 25px">
                                        <div class="row align-items-center">
                                            <div class="col m-0 p-0">
                                                <h6 class="mb-2 f-w-300"> Thursday   </h6>
                                                <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;"> <span id="thursdayCount" style="float: right; "></span> </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-2 mt-2">
                                <div class="card card-tile m-0">
                                    <div class="card-block border  rounded-sm  theme-light-grey" style=" padding: 5px 25px 5px 25px">
                                        <div class="row align-items-center">
                                            <div class="col m-0 p-0">
                                                <h6 class="mb-2 f-w-300"> Friday </h6>
                                                <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;"> <span id="fridayCount" style="float: right; "></span> </h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="input-group pt-1 pl-1 pr-1 ">
                <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search Empno/Name...">
                <div class="input-group-append">
                    <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
                </div>
            </div>
            <table id="tbDataGrid" class="table table-bordered table-responsive-lg ">
                <thead class="bg-info text-white">
                    <tr role="row">
                        <th>@Html.DisplayNameFor(model => model.Empno)</th>
                        <th>@Html.DisplayNameFor(model => model.EmployeeName)</th>
                        <th>@Html.DisplayNameFor(model => model.Emptype)</th>
                        <th>@Html.DisplayNameFor(model => model.EmpGrade)</th>
                        <th>@Html.DisplayNameFor(model => model.WorkArea)</th>
                        <th>@Html.DisplayNameFor(model => model.Parent)</th>
                        <th>@Html.DisplayNameFor(model => model.Assign)</th>
                        <th class="text-center align-middle">
                            @Html.DisplayNameFor(model => model.Mon)
                            <hr class=" m-1 text-light " />
                            <span class="f-12">@Html.Raw(Model.WeekDays[0].ToString())</span>
                        </th>
                        <th class="text-center align-middle">
                            @Html.DisplayNameFor(model => model.Tue)
                            <hr class=" m-1 text-light " />
                            <span class="f-12">@Html.Raw(Model.WeekDays[1].ToString())</span>
                        </th>
                        <th class="text-center align-middle">
                            @Html.DisplayNameFor(model => model.Wed)
                            <hr class=" m-1 text-light " />
                            <span class="f-12">@Html.Raw(Model.WeekDays[2].ToString())</span>
                        </th>
                        <th class="text-center align-middle">
                            @Html.DisplayNameFor(model => model.Thu)
                            <hr class=" m-1 text-light " />
                            <span class="f-12">@Html.Raw(Model.WeekDays[3].ToString())</span>
                        </th>
                        <th class="text-center align-middle">
                            @Html.DisplayNameFor(model => model.Fri)
                            <hr class=" m-1 text-light " />
                            <span class="f-12">@Html.Raw(Model.WeekDays[4].ToString())</span>
                        </th>
                        <th class="text-center align-middle">
                        </th>
                </thead>
            </table>
            <form style="display:none" id="forPost" name="forPost"
                method="post" enctype="multipart/form-data" 
                asp-controller="SWP"
                asp-action="SmartWeeklyAttendanceCreate">

                <input type="text" id="txtEmpno" name="Empno" />

            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script type="text/javascript">

        function localScript() {

            initSelect2();
          $('#btnexportplanning').off('click').on('click', function () {
              event.preventDefault();
              event.stopPropagation();
              exportSWSPlanning();
          });

        }


        function localLoadDataTable() {
            $('#tbDataGrid').DataTable().destroy();

            $('#tbDataGrid tbody').empty();

            var vEditAllowed = false;

            var table = $('#tbDataGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                ordering: false,
                responsive: true,
                autoWidth: false,
                pageLength: 25,
                lengthMenu: [25, 50, 100, 200],
                processing: true,
                serverSide: true,
                stateSave: false,
                info: false,
                filter: false,
                layout: { topStart: null, bottomStart: 'pageLength', bottomEnd: 'paging' },
                columnDefs: [
                   { orderable: false, targets: 0 }
                ],
              @if ((bool)@Context.Items["isMobile"] == false)
              {
                    <text>
                        ordering: false,
                        columns: [
                            { data: "empno",  width: '3.0rem'  },
                            { data: "employeeName", width: '15.0rem' },
                            { data: "emptype", width: '1.0rem' },
                            { data: "empGrade", width: '3.0rem' },
                            { data: "workArea", width: '3.0rem' },
                            { data: "parent", width: '3.0rem'  },
                            { data: "assign", width: '3.0rem' },
                            {
                                data: null,
                                width: '3.0rem',
                                render: function (data, type, row) {
                                    if (data.mon == 1) {
                                        return ' <i class="	fas fa-user-check f-20 deepskyblueColor "   aria-hidden="true"></i> ';

                                    } else {
                                        return ' <i class="	fas fa-user-times f-20 grayColor "  aria-hidden="true"></i> ';

                                    }
                                },
                                class: ' text-center  align-middle'
                            },
                            {
                                data: null,
                                width: '3.0rem',
                                render: function (data, type, row) {

                                    if (data.tue == 1) {

                                        return ' <i class="	fas fa-user-check f-20 deepskyblueColor "   aria-hidden="true"></i> ';

                                    } else {
                                        return ' <i class="	fas fa-user-times f-20 grayColor "  aria-hidden="true"></i> ';

                                    }
                                },
                                class: ' text-center  align-middle'
                            },
                            {
                                data: null,
                                width: '3.0rem',
                                render: function (data, type, row) {
                                    if (data.wed == 1) {
                                        return ' <i class="	fas fa-user-check f-20 deepskyblueColor "   aria-hidden="true"></i> ';

                                    } else {
                                        return ' <i class="	fas fa-user-times f-20 grayColor "  aria-hidden="true"></i> ';

                                    }
                                },
                                class: ' text-center  align-middle'
                            },
                            {
                                data: null,
                                width: '3.0rem',
                                render: function (data, type, row) {
                                    if (data.thu == 1) {
                                        return ' <i class="	fas fa-user-check f-20 deepskyblueColor "   aria-hidden="true"></i> ';

                                    } else {
                                        return ' <i class="	fas fa-user-times f-20 grayColor "  aria-hidden="true"></i> ';

                                    }
                                },
                                class: ' text-center  align-middle'
                            },
                            {
                                data: null,
                                width: '3.0rem',
                                render: function (data, type, row) {
                                    if (data.fri == 1) {
                                        return ' <i class="	fas fa-user-check f-20 deepskyblueColor "   aria-hidden="true"></i> ';

                                    } else {
                                        return ' <i class="	fas fa-user-times f-20 grayColor "  aria-hidden="true"></i> ';

                                    }
                                },
                                class: ' text-center  align-middle'
                            },

                            {
                            data: null,
                                render: function (data, type, row) {
                                    if (data.editAllowed == 1)
                                        vEditAllowed = true;
                                    if(vEditAllowed) {
                                          return '<a class="btn btn-sm-icon  " onclick="PostPage(\''+data.empno+'\')" ' +
                                             ' href="#"' +
                                             ' > ' +
                                            ' <i class="far fa-list-alt" aria-hidden="true"></i> ' +
                                            ' </a>'
                                    }
                                    else
                                        return ' ';
                                },
                                'className': "td-icon text-center  align-middle",
                            }
                        ],
                    </text>
              }
              else
              {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var item = '<div class="card">';
                                    item += '<div class="card-mobiledatatable">';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.EmployeeName)' + '</dt><dd class="col-lg-8">' + data.empName + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.Parent)' + '</dt><dd class="col-lg-8">' + data.parent + '</dd></dl>';
                                     item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ],
                    </text>
              }
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListSmartAttendancePlanning", "SWP")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.assign = ($('#FilterDataModel_Assign').val());
                        d.grade = $("#FilterDataModel_GradeList").val();
                        d.employeeType = $("#FilterDataModel_EmployeeTypeList").val();
                        d.genericSearch = $('#GenericSearch').val();
                        d.deskAssignmentStatus = $("#FilterDataModel_DeskAssigmentStatus").val();
                        d.startDate = ($('#FilterDataModel_StartDate').val());
                        },
                        error: function (request, status, error) {
                            notify('error', request.responseText, 'danger');
                        }
                    }
            });

        }

        $(document).ready(function () {

            localLoadDataTable();
            loadSmartWorkSpaceHeaderStatus();

        });


        $("#Mon_selectAll").change(function () {
            var isChecked = this.checked;
            $('#tbDataGrid td input:radio[id^="office_"]').prop('checked', isChecked);
        });

        $("#WFH_selectAll").change(function () {
            var isChecked = this.checked;
            $('#tbDataGrid td input:radio[id^="wfh_"]').prop('checked', isChecked);
            $('#ApprlVals').prop('checked', isChecked);
        });

        function PostSaveReLoadDataTable(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                localLoadDataTable();
                loadSmartWorkSpaceHeaderStatus();
                hideLoader();
                notify('success', data.response, 'Success');
            }
        }

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_StartDate").val(data.startDate);

            $("#FilterDataModel_Empno").val(data.empno);
            $("#FilterDataModel_Assign").val(data.assign);

            $("#FilterDataModel_GradeList").val(data.gradeList);
            $("#FilterDataModel_EmployeeTypeList").val(data.employeeTypeList);
            $("#FilterDataModel_DeskAssigmentStatus").val(data.deskAssigmentStatus);

            location.reload(true);

            hideLoader();
        }

    function loadSmartWorkSpaceHeaderStatus() {

             $.ajax({
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("HeaderStatusForSmartWorkSpace", "SWP", new { Area = "SWP" })',
                type: 'GET',
                cache: true,
                dataType: "json",
                beforeSend: function () {
                    showLoader();
                 },
                data: {
                    empno: ($('#FilterDataModel_Empno').val()),
                    startDate:($('#FilterDataModel_StartDate').val()),
                    assign : ($('#FilterDataModel_Assign').val())
                },
                success: function (data) {
                    if (data.error) {
                      }
                       else {
                    console.log(data);
                    $("#planningForWeekDays").text("@Html.Raw(" ( " + Model.WeekDays[0].ToString() + " - " + Model.WeekDays[4].ToString() + " )") ");
                    $("#totalCount").text(data.empCountSmartWorkspace);
                    $("#assignInfo").text("Assign " + data.assignCostcodeDesc);
                    $("#mondayCount").text(data.mondayEmpCount);
                    $("#tuesdayCount").text(data.tuesdayEmpCount);
                    $("#wednesdayCount").text(data.wednesdayEmpCount);
                    $("#thursdayCount").text(data.thursdayEmpCount);
                    $("#fridayCount").text(data.fridayEmpCount);
                 }

                    hideLoader();
                },
                error: function (request, status, error) {
                    notify('error', request.responseText, 'danger');
                    hideLoader();
                }
            });
        }

      function exportSWSPlanning() {
          let assignCodes = $("#excelDownloadSWSFilterSet select[id=Assign]").val();
          $.ajax({
              headers: { "RequestVerificationToken": $('#excelDownloadSWSFilterSet input[name="__RequestVerificationToken"]').val() },
              url: '@Url.Action("ExcelDownloadSWSPlanning", "SWP", new {Area = "SWP" })',
              type: "POST",
              data: {
                  assign: assignCodes
              },
              cache: false,
              xhr: function () {
                  var xhr = new XMLHttpRequest();
                  xhr.onreadystatechange = function () {
                      if (xhr.readyState == 2) {
                          if (xhr.status == 200) {
                              xhr.responseType = "blob";
                          }
                      }
                  };
                  return xhr;
              },
              beforeSend: function () {
                  showLoader();
              },

              success: function (blob, status, xhr) {

                  var filename = "";
                  var disposition = xhr.getResponseHeader('Content-Disposition');
                  if (disposition && disposition.indexOf('attachment') !== -1) {
                      var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                      var matches = filenameRegex.exec(disposition);
                      if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                  }
                  var link = document.createElement('a');
                  var url = window.URL.createObjectURL(blob);

                  link.href = window.URL.createObjectURL(blob);
                  link.download = filename;
                  link.click();
                  link.remove();
                  window.URL.revokeObjectURL(url);
                  hideLoader();
                  toastr.success("File downloaded successfully.");
              },
              error: function (xhr) {
                  showError(xhr);
                  hideLoader();
              }
          });
      }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                var dataTable = $('#tbDataGrid').DataTable();
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });
        $('#buttonSearch').on('click', function () {
            var dataTable = $('#tbDataGrid').DataTable();
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

       function PostPage(empno)
        {
            if (empno == '') {
                return;
            }
            else{
                $("#txtEmpno").val(empno)
                $("#forPost").submit();               
            }
         }

</script>
}