@model TCMPLApp.WebApp.Models.AssetOnHoldTransLogViewModel

@{
    ViewData["Title"] = "AssetOnHold";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
         <li class="breadcrumb-item active" aria-current="page">Asset on hold transaction list</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Asset on hold transaction list</p>
    </div>
    <div class="d-flex flex-row">
        <a name="CurrentStatus" id="CurrentStatus" class="btn btn-outline-primary btn-sm border-white  "
                 href='@Url.Action("AssetOnHoldIndex", "AssetOnHold", new { Area = "DMS" })'>
                <i class="fas fa-list"></i>&nbsp;Goto asset on hold
         </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                     <th>@Html.DisplayNameFor(model => model.Assetid)</th>
                    <th>@Html.DisplayNameFor(model => model.SourceDesk)</th>
                    <th>@Html.DisplayNameFor(model => model.TargetAsset)</th>
                    <th>@Html.DisplayNameFor(model => model.ActionTypeText)</th>
                    <th>@Html.DisplayNameFor(model => model.Remarks)</th>
                    <th>@Html.DisplayNameFor(model => model.ActionDate)</th>
                    <th>@Html.DisplayNameFor(model => model.ActionByEmpno)</th>
                   @* <th>@Html.DisplayNameFor(model => model.SourceEmp)</th>
                    <th>@Html.DisplayNameFor(model => model.AssetIdOld)</th>*@
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            loadDataTable();
        });

        function initDatePicker() {

            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                useCurrent: false,
                nowButton: true
            });

            $("#transDate").on("change", function (event, date) {
                $("#TransDate").val(date.format("DD-MMM-YYYY"));
            });

            if ($('#TransDate').val()) {
                $('#transDate').bootstrapMaterialDatePicker('setDate', new Date($("PoDate").val()));
            }

            if ($("#TransDate").val()) {
                $('#transDate').val(moment($("#TransDate").val(),"DD-MMM-YYYY").format('DD-MMM-YYYY'));
            }

        }

        function localScript() {
            initSelect2();

        }

        function loadDataTable() {
            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                 responsive: true,
                autoWidth: false,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                        ordering: false,
                        columns: [
                            { 'data': "assetid" },
                            { 'data': "sourceDesk" },
                            { 'data': "targetAsset" },
                            { 'data': "actionTypeText" },
                            { 'data': "remarks" },
                            {
                                data: "actionDate",
                                width: '10.0rem',
                                render: function(data, type, row) {
                                    return moment(data).format("DD-MMM-YYYY");
                                }
                            },
                            {
                               'data': null,

                                render: function(data, type, row) {
                                    return data.actionByEmpno +" : "+ data.actionByEmpname ;
                                }
                            }
                            //},
                            // { 'data': "sourceEmp" },
                            //{ 'data': "assetIdOld" }
                        ]
                    </text>
                }
                else
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var item = '<div class="card">';
                                    item += '<div class="card-mobiledatatable">';

                                    item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ]
                    </text>
                },
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsAssetOnHoldTransLog", "AssetOnHold")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = $('#GenericSearch').val();
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        }

        $("#GenericSearch").keypress(function(event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
         });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadDataTable();
                notify('success', data.response, 'Success');
            }
        }


    </script>
}
