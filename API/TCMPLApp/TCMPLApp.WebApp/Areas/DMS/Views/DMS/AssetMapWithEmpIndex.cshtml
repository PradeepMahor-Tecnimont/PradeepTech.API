@model TCMPLApp.WebApp.Models.AssetMapWithEmpViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Asset Map With Employee";

}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
        <li class="breadcrumb-item active" aria-current="page">Asset Map With Employee</li>
    </ol>
}

@section styles
{
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.GroupType" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.AssetType" value="@(string.Join(",", (Model.FilterDataModel.AssetType?? Array.Empty<string>())))" />

<form class="form-filter-datetime"
      id="formAssetMapWithEmpFilterSet"
      asp-area="DMS"
      asp-controller="DMS"
      asp-action="AssetMapWithEmpFilterSet"
      data-ajax="true"
      data-ajax-method="post"
      data-ajax-update="#modal-content"
      data-ajax-begin="onBegin(null)"
      data-ajax-complete="onComplete(null);"
      data-ajax-success="PostFilterReLoadDataTable(data);"
      data-ajax-failure="onError"
      accept-charset="UTF-8">

    <input type="hidden" id="GroupType" name="GroupType" />
</form>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Asset Map With Employee</p>
    </div>
    <div class="d-flex flex-row p-1">
        <span id="filterGet ">
            <i class="fas fa-filter"></i>&nbsp;Filter ::

            @if (!string.IsNullOrEmpty(Model.FilterDataModel.GroupType))
            {
                if (Model.FilterDataModel.GroupType == "Assets")
                {
                    @Html.Raw("Group Type : ") <b>Assets</b>
                    ;
                }
                if (Model.FilterDataModel.GroupType == "Consumables")
                {
                    @Html.Raw("Group Type : ") <b>Consumables</b>
                    ;
                }
                if (Model.FilterDataModel.GroupType == "All")
                {
                    @Html.Raw("Group Type : ") <b>All</b>
                    ;
                }
            }
            
        </span>

    </div>
    <hr />
    <div class="d-flex flex-row">
        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("AssetMapWithEmpFilterGet", "DMS", new { Area = "DMS" })'
           data-modaltitle="Filters - Asset Map With Employee"
           data-modalheader="Filters - Asset Map With Employee">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="AssetMapWithEmpIndex"
           data-url='@Url.Action("ResetFilter", "DMS", new { Area = "DMS" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>
        <button class="btn btn-outline-primary btn-sm border-white " id="t" onclick="AssetMapWithEmpFilter('All')">All</button>
        <button class="btn btn-outline-primary btn-sm  border-white" id="t" onclick="AssetMapWithEmpFilter('Assets')">Assets</button>
        <button class="btn btn-outline-primary btn-sm border-white " id="t" onclick="AssetMapWithEmpFilter('Consumables')">Consumables</button>

        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
           href="#"
           data-jqueryselector="binarydownload"
           data-url="@(Url.Action("AssetMapWithEmpExcelDownload", "DMS", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbAssetMapWithEmp" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(m => m.Empno)</th>
                    <th>@Html.DisplayNameFor(m => m.Name)</th>
                    <th>@Html.DisplayNameFor(m => m.GroupType)</th>
                    <th>@Html.DisplayNameFor(m => m.ItemId)</th>
                    <th>@Html.DisplayNameFor(m => m.AssetType)</th>
                    <th>@Html.DisplayNameFor(m => m.TypeDesc)</th>
                    <th>@Html.DisplayNameFor(m => m.Description)</th>
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        $(document).ready(function () {
            loadAssetMapWithEmpDataTable();

        });

        function localScript() {
            initSelect2();

        };

        let vVUloadAssetMapWithEmpList = "@Url.Action("GetAssetMapWithEmployees", "DMS")";

        function loadAssetMapWithEmpDataTable() {

            genericLoadDataTable({
                pDataTableId: "#tbAssetMapWithEmp",
                pColumns: datatableColumns,
                pUrl: vVUloadAssetMapWithEmpList,
                PStateSave: false,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    groupType: $('#FilterDataModel_GroupType').val() ? $('#FilterDataModel_GroupType').val() : null,
                    assetType: $('#FilterDataModel_AssetType').val() ? $('#FilterDataModel_AssetType').val() : null,

                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });

        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                    { data: "empno" },
                    { data: "name" },
                    { data: "groupType" },
                    { data: "itemId" },
                    { data: "assetType" },
                    { data: "typeDesc" },
                    { data: "description" },

                ];

            </text>
        }

            $("#GenericSearch").keypress(function (event) {
                if (event.keyCode === 13) {
                    if ($("#GenericSearch").length) {
                        loadAssetMapWithEmpDataTable();
                    }
                }
            });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadAssetMapWithEmpDataTable();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadAssetMapWithEmpDataTable();
                notify('success', data.response, 'Success');
            }
        };

        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_GroupType").val(data.groupType);
            $("#FilterDataModel_AssetType").val(data.assetType);

            // loadAssetMapWithEmpDataTable();
            hideLoader();
            location.reload();
        }

        function AssetMapWithEmpFilter(groupType) {
            $("#GroupType").val(groupType);
            var frm = $("#formAssetMapWithEmpFilterSet");
            frm.submit();
            location.reload();
        }
    </script>
}