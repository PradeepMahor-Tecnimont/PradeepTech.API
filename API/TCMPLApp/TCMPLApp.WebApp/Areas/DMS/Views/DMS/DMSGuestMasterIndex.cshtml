@model TCMPLApp.WebApp.Models.DMSGuestMasterViewModel

@{
    ViewData["Title"] = "Guest master";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
    {
                <ol class="breadcrumb">
                    <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Guest master</li>
                </ol>
}

@section Styles {
                <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<div style="display:none">
    @Html.TextBoxFor(model => model.FilterDataModel.StartDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })
    @Html.TextBoxFor(model => model.FilterDataModel.EndDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })

    <input readonly type="hidden" asp-for="@Model.FilterDataModel.CostCode" />
</div>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Guest master</p>
    </div>
    <div class="d-flex flex-row">

            <a title="New guest master" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("DMSGuestMasterCreate", "DMS", new { Area = "DMS" })'
               data-statichtmlsourcedivid=""
               data-modaltitle="New guest master"
               data-modalheader="New guest master">
                <i class="fas fa-plus"></i> Create
            </a>

             <a name="CurrentStatus" id="CurrentStatus" class="btn btn-outline-primary btn-sm border-white  "
                 href='@Url.Action("DMSGuestMasterLogIndex", "DMS", new { Area = "DMS" })'>
                <i class="fas fa-list"></i>&nbsp;Goto Log - Guest master
         </a>

            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("DMSGuestMasterFilterGet", "DMS", new { Area = "DMS" })'
               data-modaltitle="Filters - DMS"
               data-modalheader="Filters - DMS">
                <i class="fas fa-filter"></i>&nbsp;Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-actionid="DMSGuestMasterIndex"
               data-url='@Url.Action("ResetFilter", "DMS", new { Area = "DMS" })'
               href="#"
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>

        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
             href="#"
             data-jqueryselector="binarydownload"
             data-url="@(Url.Action("DMSGuestMasterExcelDownload", "DMS", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                     <th>&nbsp;</th>
                     <th>@Html.DisplayNameFor(model => model.GuestEmpno)</th>
                      <th>@Html.DisplayNameFor(model => model.GuestName)</th>
                     <th>@Html.DisplayNameFor(model => model.Costcode)</th>
                     <th>@Html.DisplayNameFor(model => model.Projno7)</th>
                     <th>@Html.DisplayNameFor(model => model.ProjName)</th>
                     <th>@Html.DisplayNameFor(model => model.FromDate)</th>
                     <th>@Html.DisplayNameFor(model => model.ToDate)</th>
                     <th>@Html.DisplayNameFor(model => model.TargetDesk)</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>


                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            loadDataTable();
        });

        function localScript() {
            initSelect2();
            initDatePicker();
            initFilter();
        }

        function initDatePicker() {
                $('.datepicker').bootstrapMaterialDatePicker({
                    format: 'DD-MMM-YYYY',
                    time: false,
                    nowButton: true
                });

                $('#fromDate').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                time: false,
                }).on('change', function (e, date) {
                    $('#toDate').bootstrapMaterialDatePicker('setMinDate', date);
                        $("#FromDate").val(date.format('DD-MMM-YYYY'));
                });

                $('#toDate').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                time: false
                }).on('change', function (e, date) {
                        $("#ToDate").val(date.format('DD-MMM-YYYY'));
                });

            }

        function initFilter() {

            var currYear = moment().year();
            var curYearLastDate = new Date(currYear, 11, 31);
            var curYearMinDate = new Date((currYear - 1), 0, 1);
            var curYearMinDate = new Date((currYear - 1), 0, 1);

            $('#startDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                time: false
            }).on('change', function(e, date) {
                $('#endDateFilter').bootstrapMaterialDatePicker('setMinDate', date);
                $('#endDateFilter').bootstrapMaterialDatePicker('setMaxDate', curYearLastDate);

                $("#StartDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#endDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                time: false
            }).on('change', function(e, date) {
                $("#EndDate").val(date.format('DD-MMM-YYYY'));
            });

            if ($('#StartDate').val()) {
                $('#startDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#StartDate").val()));
            }
            if ($('#EndDate').val())
                $('#endDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#EndDate").val()));

        }

        function loadDataTable() {
            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                    responsive: true,
                autoWidth: false,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row, meta) {
                                    return '<button class="btn btn-outline-info btn-sm border-none  " ' +
                                    ' data-jqueryselector="openmodal" ' +
                                    ' data-modalcontainer="modalcontainer" ' +
                                    ' data-url="@Url.Action("DMSGuestMasterDetails", "DMS", new { Area = "DMS" })"' +
                                    ' data-modalpopupwidth="rightw50" ' +
                                    ' data-guestEmpno="' + data.guestEmpno + '"' +
                                    ' data-modaltitle="Guest master  detail " ' +
                                    ' data-modalheader="Guest master  detail" ' +
                                    ' > ' +
                                        ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                        ' </button>'
                                },
                                'className': "td-icon",
                            },
                            { 'data': "guestEmpno" },
                            { 'data': "guestName" },
                            { 'data': "costcode" },
                            { 'data': "projno7" },
                            { 'data': "projName" },
                            {
                                data: "fromDate",
                                width: '10.0rem',
                                render: function(data, type, row) {
                                return moment(data).format("DD-MMM-YYYY");
                            }
                            },
                                    {
                                        data: "toDate",
                                width: '10.0rem',
                                render: function(data, type, row) {
                                    return moment(data).format("DD-MMM-YYYY");
                                }
                            },

                        { 'data': "targetDesk" },
                         {
                            'data': null,
                            render: function (data, type, row) {

                                   return '<button title="Release desk" class="btn btn-outline-warning btn-sm border-none " ' +
                                        ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                        ' data-jqueryselector = "showconfirmationmodal" ' +
                                        ' data-url="@Url.Action("DMSGuestMasterReleaseDesk", "DMS", new { Area = "DMS" })"' +
                                        ' data-guestEmpno="' + data.guestEmpno + '"' +
                                        ' data-targetDesk="' + data.targetDesk + '"' +
                                        ' data-redirecturl="@Url.Action("DMSGuestMasterIndex", "DMS", new { Area = "DMS" })"' +
                                        ' data-modaltitle="Please Confirm!" ' +
                                        ' data-confirmationtext="Do you want to release desk (' + data.guestEmpno + ') ' + data.targetDesk + '  ?" ' +
                                        ' data-confirmationtype="warning" ' +
                                        ' title="Release desk" ' +
                                        ' data-confirmbuttontext="Release desk" > ' +
                                        ' <i class="fas fa-arrow-circle-left" aria-hidden="true"></i> ' +
                                        ' </button>';

                            },
                            'className': "td-icon text-center  align-middle",
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return '<button title="Edit" class="btn btn-outline-primary btn-sm border-none" ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" '+
                                ' data-url="@Url.Action("DMSGuestMasterEdit", "DMS", new { Area = "DMS" })"' +
                                ' data-modalpopupwidth="rightw35" ' +
                                ' data-guestEmpno="' + data.guestEmpno + '"' +
                                ' data-modaltitle="Guest master edit" ' +
                                ' data-modalheader="Guest master edit" >' +
                                ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                    ' </button>';
                            },
                            className: "td-icon",
                        },
                        {
                            'data': null,
                            render: function (data, type, row) {

                                    return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                        ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                        ' data-jqueryselector = "showconfirmationmodal" ' +
                                        ' data-url="@Url.Action("DMSGuestMasterDelete", "DMS", new { Area = "DMS" })"' +
                                        ' data-guestEmpno="' + data.guestEmpno + '"' +
                                        ' data-targetDesk="' + data.targetDesk + '"' +
                                        ' data-redirecturl="@Url.Action("DMSGuestMasterIndex", "DMS", new { Area = "DMS" })"' +
                                        ' data-modaltitle="Please Confirm!" ' +
                                        ' data-confirmationtext="Do you want to delete (' + data.guestEmpno + ') ' + data.targetDesk + '  ?" ' +
                                        ' data-confirmationtype="warning" ' +
                                        ' title="Delete Bay" ' +
                                        ' data-confirmbuttontext="Delete guest" > ' +
                                        ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                        ' </button>';

                            },
                            'className': "td-icon text-center  align-middle",
                        }
                    ]
        </text>
    }
                else
    {
        <text>
                    ordering: false,
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row) {
                                var item = '<div class="card">';
                                item += '<div class="card-mobiledatatable">';

                                    item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ]
                    </text>
                },
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsDMSGuestMaster", "DMS")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = $('#GenericSearch').val();
                        d.startDate = ($('#FilterDataModel_StartDate').val());
                        d.endDate = ($('#FilterDataModel_EndDate').val());
                        d.costCode = ($('#FilterDataModel_CostCode').val());
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        }

        $("#GenericSearch").keypress(function(event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
            });
        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadDataTable();
                notify('success', data.response, 'Success');
            }
        }

        function PostFilterReLoadDataTable(data) {
            console.log(data);
            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_EndDate").val(data.endDate);
            $("#FilterDataModel_CostCode").val(data.costCode);

            //console.log(data);
            //$("#FilterDataModel_StartDate").val();
            //$("#FilterDataModel_EndDate").val();

            loadDataTable();
            hideLoader();
        }

    </script>
}
