@model TCMPLApp.WebApp.Models.NewEmployeeViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer
@{
    ViewData["Title"] = "New Employee";
}

@Html.AntiForgeryToken()
@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
        <li class="breadcrumb-item active" aria-current="page">New Employee</li>
    </ol>
}
@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="~/lib/dropzone/dropzone.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/lib/dropzone/basic.css" rel="stylesheet" asp-append-version="true" />
}
@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.StartDate" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.EndDate" />
<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>New Employees</p>
    </div>
    <div class="d-flex flex-row">

        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("NewEmployeeFilterGet", "DMS", new { Area = "DMS" })'
           data-modaltitle="Filters - New Employee"
           data-modalheader="Filters - New Employee">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="NewEmployeesIndex"
           data-url='@Url.Action("ResetFilter", "DMS", new { Area = "DMS" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>

        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
           href="#"
           data-jqueryselector="binarydownload"
           data-url="@(Url.Action("NewEmployeesExcelDownload", "DMS", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>

    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbNewEmployee" class="table table-striped table-bordered table-responsive-lg table-hover ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Empno)</th>
                    <th>@Html.DisplayNameFor(model => model.EmpName)</th>
                    <th>@Html.DisplayNameFor(model => model.Dept)</th>
                    <th>@Html.DisplayNameFor(model => model.JoiningDate)</th>

                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/site-rap.js" asp-append-version="true"></script>
    <script>

        $(document).ready(function () {
            loadNewEmployeeDataTable();
        });

        function localScript() {
            initSelect2();

            initDatePicker();

        };

        let vVUloadNewEmployeeDetails = "@Url.Action("GetListsNewEmployees", "DMS")";

        function loadNewEmployeeDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbNewEmployee",
                pColumns: datatableColumns,
                pUrl: vVUloadNewEmployeeDetails,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    startDate: $('#FilterDataModel_StartDate').val() ? $('#FilterDataModel_StartDate').val() : null,
                    endDate: $('#FilterDataModel_EndDate').val() ? $('#FilterDataModel_EndDate').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                    { data: "empno" },
                    { data: "empName" },
                    { data: "dept" },
                    {
                        data: "joiningDate",
                        render: function (data, type, row) {
                            if (data)
                                return moment(data).format("DD-MMM-YYYY");
                            else
                                return '';
                        }
                    }

                ];
            </text>
        };

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadNewEmployeeDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadNewEmployeeDataTable();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadNewEmployeeDataTable();
                notify('success', data.response, 'Success');
            }
        };

        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadNewEmployeeDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        }
        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_EndDate").val(data.endDate);

            loadNewEmployeeDataTable();
            hideLoader();
        }
        function initDatePicker() {

            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                useCurrent: false,
                nowButton: true
            });

            $("#joiningDate").on("change", function (event, date) {
                $("#JoiningDate").val(date.format("DD-MMM-YYYY"));
            });

            if ($('#JoiningDate').val()) {
                $('#joiningDate').bootstrapMaterialDatePicker('setDate', new Date($("PoDate").val()));
            }

            if ($("#JoiningDate").val()) {
                $('#joiningDate').val(moment($("#JoiningDate").val(), "DD-MMM-YYYY").format('DD-MMM-YYYY'));
            }

            $('#startDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#StartDate").val(date.format('DD-MMM-YYYY'));

            });
            $('#endDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#EndDate").val(date.format('DD-MMM-YYYY'));
            });
        }

    </script>
}