@model TCMPLApp.WebApp.Models.InvAddOnContainerViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer
@{
    ViewData["Title"] = "AddOns - Container mapping";
}

@Html.AntiForgeryToken()
@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="INV" asp-area="DMS">Inventory</a></li>
        <li class="breadcrumb-item active" aria-current="page">AddOns - Container mapping</li>
    </ol>
}
@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="~/lib/dropzone/dropzone.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/lib/dropzone/basic.css" rel="stylesheet" asp-append-version="true" />
}

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>AddOns - Container mapping</p>
    </div>
    <div class="d-flex flex-row">

        <a title="New AddOns - Container" class="btn btn-outline-primary btn-sm border border-white" href="#"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("InvAddOnContainerCreate", "INV", new { Area = "DMS" })'
           data-statichtmlsourcedivid=""
           data-modaltitle="New AddOns - Container"
           data-modalheader="New AddOns - Container">
            <i class="fas fa-plus"></i> Create
        </a>


        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
           href="#"
           data-jqueryselector="binarydownload"
           data-url="@(Url.Action("InvAddOnContainerExcelDownload", "INV", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>



    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbAddOnContainer" class="table table-striped table-bordered table-responsive-lg table-hover ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.AddonItemDesc)</th>
                    <th>@Html.DisplayNameFor(model => model.ContainerItemDesc)</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/site-rap.js" asp-append-version="true"></script>
    <script>

        $(document).ready(function () {
            loadInvAddOnContainerDataTable();

        });

        function localScript() {
            initSelect2();
            
        };

        let vVUloadInvAddOnContainerDetails = "@Url.Action("GetListsInvAddOnContainer", "INV")";

        function loadInvAddOnContainerDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbAddOnContainer",
                pColumns: datatableColumns,
                pUrl: vVUloadInvAddOnContainerDetails,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,  
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                    { data: "addonItemDesc" },
                    { data: "containerItemDesc" },
                    {
                        'data': null,
                        render: function (data, type, row) {

                            return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                ' data-jqueryselector = "showconfirmationmodal" ' +
                                ' data-url="@Url.Action("InvAddOnContainerDelete", "INV", new { Area = "DMS" })"' +
                                ' data-id="' + data.keyId + '"' +
                                ' data-PostDeleteReLoadDataTables="OK" ' +
                                ' data-modaltitle="Please Confirm!" ' +
                                ' data-confirmationtext="Do you want to Delete AddOn-Container ' + data.addonItemId + ' " ' +
                                ' data-confirmationtype="warning" ' +
                                ' title="Delete Internal Transfer" ' +
                                ' data-confirmbuttontext="Delete AddOn-Container" > ' +
                                ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                ' </button>';

                        },
                        'className': "td-icon text-center  align-middle",
                    }
                    
                ];

            </text>
        };


        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadInvAddOnContainerDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadInvAddOnContainerDataTable();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadInvAddOnContainerDataTable();
                notify('success', data.response, 'Success');
            }
        };

        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadInvAddOnContainerDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        }

        

       
    </script>
}