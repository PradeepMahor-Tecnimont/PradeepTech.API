@model TCMPLApp.WebApp.Models.InvTransactionViewModel

@{
    ViewData["Title"] = "Transactions";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="INV" asp-area="DMS">Inventory</a></li>
        <li class="breadcrumb-item active" aria-current="page">Transactions - Issue to employee list</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Transactions - Issue to employee list</p>
    </div>
    <div class="d-flex flex-row">
        <a title="New transaction" class="btn btn-outline-primary btn-sm border border-white" href="InvTransactionDetailIndex"
            <i class="fas fa-plus"></i> Create reserve
        </a>
        @*<a title="New transaction" class="btn btn-outline-primary btn-sm border border-white"
                href="@Url.Action("InvTransactionDetailIndex", "INV", new { Area = "DMS" ,id="" })" >
                <i class="fas fa-plus"></i> Create reserve
            </a>*@
        <a title="New transaction" class="btn btn-outline-primary btn-sm border border-white" href="#"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("InvTransactionReturn", "INV", new { Area = "DMS" })'
           data-id=""
           data-modaltitle="New transaction"
           data-modalheader="New transaction">
            <i class="fas fa-plus"></i> Create return
        </a>
        @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.DMS.DMSHelper.ActionITAssetIssue))
        {
            <a title="New transaction" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("InvQkTransactionCreate", "INV", new { Area = "DMS" })'
               data-id="KEY06"
               data-modaltitle="New transaction"
               data-modalheader="New transaction">
                <i class="fas fa-mouse"></i> Mouse
            </a>

            <a title="New transaction" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("InvQkTransactionCreate", "INV", new { Area = "DMS" })'
               data-id="KEY07"
               data-modaltitle="New transaction"
               data-modalheader="New transaction">
                <i class="fa fa-keyboard"></i> KeyBoard
            </a>

            <a title="New transaction" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("InvQkTransactionCreate", "INV", new { Area = "DMS" })'
               data-id="KEY14"
               data-modaltitle="New transaction"
               data-modalheader="New transaction">
                <i class="fas fa-headphones"></i> Head Set
            </a>
        }
        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
           href="#"
           data-jqueryselector="binarydownload"
           data-url="@(Url.Action("InvTransactionExcelDownload", "INV", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>@Html.DisplayNameFor(model => model.TransDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Empno)</th>
                    <th>@Html.DisplayNameFor(model => model.EmpName)</th>
                    <th>@Html.DisplayNameFor(model => model.Parent)</th>
                    <th>@Html.DisplayNameFor(model => model.ParentName)</th>
                    <th>@Html.DisplayNameFor(model => model.Assign)</th>
                    <th>@Html.DisplayNameFor(model => model.AssignName)</th>
                    <th>@Html.DisplayNameFor(model => model.TransTypeDesc)</th>
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            loadDataTable();
        });

        function initDatePicker() {

            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                useCurrent: false,
                nowButton: true
            });

            $("#transDate").on("change", function (event, date) {
                $("#TransDate").val(date.format("DD-MMM-YYYY"));
            });

            if ($('#TransDate').val()) {
                $('#transDate').bootstrapMaterialDatePicker('setDate', new Date($("PoDate").val()));
            }

            if ($("#TransDate").val()) {
                $('#transDate').val(moment($("#TransDate").val(),"DD-MMM-YYYY").format('DD-MMM-YYYY'));
            }


            $('#formInvQkTransactionCreate input[id=TransDate]').val(moment(new Date(), "DD-MMM-YYYY").format('DD-MMM-YYYY'));
            $('#formInvQkTransactionCreate input[id=transDate]').val(moment(new Date(), "DD-MMM-YYYY").format('DD-MMM-YYYY'));

            $("#transDate").on("change", function (event, date) {
                $("#TransDate").val(date.format("DD-MMM-YYYY"));
            });
        }

        function localScript() {
            initSelect2();
            initDatePicker();
            ItemTypeCodeChange();
        }

        function loadDataTable() {
            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                 responsive: true,
                autoWidth: false,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                'data': null,
                                render: function (data, type, row) {
                                    return '<a class="btn btn-sm-icon"  href="InvTransactionDetailIndex/' + data.transId + '" title="Detail"><i class="far fa-eye"></i></a>';
                                },
                                'className': "td-icon",
                            },
                            {
                                data: "transDate",
                                width: '10.0rem',
                                render: function(data, type, row) {
                                    return moment(data).format("DD-MMM-YYYY");
                                }
                            },
                            { 'data': "empno" },
                            { 'data': "empName" },
                            { 'data': "parent" },
                            { 'data': "parentName" },
                            { 'data': "assign" },
                            { 'data': "assignName" },
                            { 'data': "transTypeDesc" }
                        ]
                    </text>
                }
                else
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var item = '<div class="card">';
                                    item += '<div class="card-mobiledatatable">';

                                    item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ]
                    </text>
                },
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsTransaction", "INV")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = $('#GenericSearch').val();
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        }

        $("#GenericSearch").keypress(function(event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
         });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostSave(data) {

            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadDataTable();
                notify('success', data.response, 'Success');
            }
        }

        function ItemTypeCodeChange() {
            $('#ItemTypeCode').on('change', function (e) {
            var itemTypeCode = $('#ItemTypeCode').val();
            var itemId = $('#ItemId').val();

            if (itemTypeCode != null && itemTypeCode != '') {
                $.ajax({
                    url: "@Url.Action("GetItem", "INV", new {Area = "DMS"})",
                    data: {
                        'id': itemTypeCode
                    },
                    type: 'GET',
                    beforeSend: function () {
                        showModalLoader();

                    },
                    success: function (data) {
                        let dropdown = $('#ItemId');
                        dropdown.empty();
                        var flag = false;
                        var options = '';

                        $(data).each(function () {
                            if (this.dataValueField == itemId) {
                                flag = true;
                                options += '<option selected="selected" value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            }
                            else {
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            }
                        });
                        dropdown.html(options);

                        if (flag == false) {
                            phase = null;
                        }

                        dropdown.val(phase);
                        hideModalLoader();
                    },
                    error: function (result) {
                        hideModalLoader();
                        notify($.i18n('Error'), result.responseText, 'danger');
                    }
                });
            }
        });
        }

    </script>
}
