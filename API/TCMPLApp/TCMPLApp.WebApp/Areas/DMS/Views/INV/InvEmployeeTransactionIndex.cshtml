@model TCMPLApp.WebApp.Models.InvEmployeeTransactionViewModel

@{
    ViewData["Title"] = "Transactions";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
            <li class="breadcrumb-item "><a asp-action="Index" asp-controller="INV" asp-area="DMS">Inventory</a></li>
        <li class="breadcrumb-item active" aria-current="page">Transactions - Employee wise list</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<form asp-controller="INV"
      asp-action="InvEmployeeTransactionDetailIndex"
      id="formInvEmployeeTransactionDetailIndex">

    <input type="hidden" id="Empno" name="Empno" />
</form>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Transactions - Employee wise list</p>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>@Html.DisplayNameFor(model => model.Empno)</th>
                    <th>@Html.DisplayNameFor(model => model.EmpName)</th>
                    <th>@Html.DisplayNameFor(model => model.Parent)</th>
                    <th>@Html.DisplayNameFor(model => model.ParentName)</th>
                    <th>@Html.DisplayNameFor(model => model.Assign)</th>
                    <th>@Html.DisplayNameFor(model => model.AssignName)</th>
                    <th>@Html.DisplayNameFor(model => model.Active)</th>
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            loadDataTable();
        });

        function localScript() {
            initSelect2();
            initDatePicker();
            ItemTypeCodeChange();
            EmpnoChange();
        }

        function loadDataTable() {
            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                 responsive: true,
                autoWidth: false,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
	                            data: null,
	                            render: function (data, type, row) {
		                            var tempEmp = "'" + data.empno + "'";
		                            return '<a class="btn btn-sm-icon" href="#" onclick="GotoDetails(' + tempEmp + ')" title="Detail"><i class="far fa-eye"></i></a>';
	                            },
	                            className: "td-icon",
                            },
                            //{
                            //    'data': null,
                            //    render: function (data, type, row) {
                            //        return '<a class="btn btn-sm-icon"  href="InvEmployeeTransactionDetailIndex/' + data.empno + '" title="Detail"><i class="far fa-eye"></i></a>';
                            //    },
                            //    'className': "td-icon",
                            //},
                            { 'data': "empno" },
                            { 'data': "empName" },
                            { 'data': "parent" },
                            { 'data': "parentName" },
                            { 'data': "assign" },
                            { 'data': "assignName" },
                            { 'data': "active" }
                        ]
                    </text>
                }
                else
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var item = '<div class="card">';
                                    item += '<div class="card-mobiledatatable">';

                                    item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ]
                    </text>
                },
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsEmployeeTransaction", "INV")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = $('#GenericSearch').val();
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        }

        $("#GenericSearch").keypress(function(event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
         });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadDataTable();
                notify('success', data.response, 'Success');
            }
        }

        //function ItemTypeCodeChange() {
        //    $('#ItemTypeCode').on('change', function (e) {
        //    var itemTypeCode = $('#ItemTypeCode').val();
        //    var itemId = $('#ItemId').val();

        //    if (itemTypeCode != null && itemTypeCode != '') {
        //        $.ajax({
        //            url: "@Url.Action("GetItem", "INV", new {Area = "DMS"})",
        //            data: {
        //                'id': itemTypeCode
        //            },
        //            type: 'GET',
        //            beforeSend: function () {
        //                showLoader();
        //            },
        //            success: function (data) {
        //                let dropdown = $('#ItemId');
        //                dropdown.empty();
        //                var flag = false;
        //                var options = '';

        //                $(data).each(function () {
        //                    if (this.dataValueField == itemId) {
        //                        flag = true;
        //                        options += '<option selected="selected" value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
        //                    }
        //                    else {
        //                        options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
        //                    }
        //                });
        //                dropdown.html(options);

        //                if (flag == false) {
        //                    phase = null;
        //                }

        //                dropdown.val(phase);
        //                hideLoader();
        //            },
        //            error: function (result) {
        //                hideLoader();
        //                notify($.i18n('Error'), result.responseText, 'danger');
        //            }
        //        });
        //    }
        //});
        //}

        //function EmpnoChange() {
        //    $('#Empno').on('change', function (e) {
        //    var empno = $('#Empno').val();
        //    var itemId = $('#ItemId').val();

        //    if (empno != null && empno != '') {
        //        $.ajax({
        //            url: "@Url.Action("GetReturnItem", "INV", new {Area = "DMS"})",
        //            data: {
        //                'id': empno
        //            },
        //            type: 'GET',
        //            beforeSend: function () {
        //                showLoader();
        //            },
        //            success: function (data) {
        //                let dropdown = $('#ItemId');
        //                dropdown.empty();
        //                var flag = false;
        //                var options = '';

        //                $(data).each(function () {
        //                    if (this.dataValueField == itemId) {
        //                        flag = true;
        //                        options += '<option selected="selected" value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
        //                    }
        //                    else {
        //                        options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
        //                    }
        //                });
        //                dropdown.html(options);

        //                if (flag == false) {
        //                    phase = null;
        //                }

        //                dropdown.val(phase);
        //                hideLoader();
        //            },
        //            error: function (result) {
        //                hideLoader();
        //                notify($.i18n('Error'), result.responseText, 'danger');
        //            }
        //        });
        //    }
        //});
        //}

        function GotoDetails(empno) {
	        $('#Empno').val(empno);
	        var frm = $('#formInvEmployeeTransactionDetailIndex');
	        frm.submit();
        }

    </script>
}
