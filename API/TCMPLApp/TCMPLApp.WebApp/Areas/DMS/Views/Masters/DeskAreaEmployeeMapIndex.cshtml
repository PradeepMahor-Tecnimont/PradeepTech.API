@model TCMPLApp.WebApp.Models.DeskAreaEmployeeMapViewModel

@{
    ViewData["Title"] = "Employee Desk Mapping";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Masters" asp-area="DMS">Masters</a></li>
        <li class="breadcrumb-item active" aria-current="page">Employee Desk Mapping</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}
@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.AreaId" />

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Employee Desk Mapping</p>
    </div>
    <div class="d-flex flex-row">
        @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.DMS.DMSHelper.ActionITAdm))
        {
            <a title="New Employee Desk Mapping" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("DeskAreaEmployeeMapCreate", "Masters", new { Area = "DMS" })'
               data-statichtmlsourcedivid=""
               data-modaltitle="New Employee Desk Mapping"
               data-modalheader="New Employee Desk Mapping">
                <i class="fas fa-plus"></i> Create
            </a>
        }
        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("DeskAreaEmployeeMapFilterGet", "Masters", new { Area = "DMS" })'
           data-modaltitle="Filters - Desk Area Employee Mapping"
           data-modalheader="Filters - Desk Area Employee Mapping">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="DeskAreaEmployeeMapIndex"
           data-url='@Url.Action("ResetFilter", "Masters", new { Area = "DMS" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>
        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
           href="#"
           data-jqueryselector="binarydownload"
           data-url="@(Url.Action("DeskAreaEmployeeMapExcelDownload", "Masters", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbDeskAreaEmployeeMap" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>@Html.DisplayNameFor(model => model.EmpName)</th>
                    <th>@Html.DisplayNameFor(model => model.Office)</th>
                    <th>@Html.DisplayNameFor(model => model.AreaId)</th>
                    <th>@Html.DisplayNameFor(model => model.DeskId)</th>
                    <th>@Html.DisplayNameFor(model => model.ModifiedBy)</th>
                    <th>@Html.DisplayNameFor(model => model.ModifiedOn)</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            loadDeskAreaEmployeeMapDataTable();
        });

        function localScript() {
            initSelect2();
            EmployeeChange();
            OfficeChange();
            AreaIdChange();
        }

        function EmployeeChange() {

            $('#Empno').change(function () {

                var employee = $(this).val();
                if (employee == null || employee === '') {
                    $('#OfficeCode').empty();
                    $('#AreaId').empty();
                    $('#DeskId').empty();
                    $('#BaseOfficeLocation').text('');
                    $('#bTags').text('');

                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetOfficeList", "Masters", new { Area = "DMS" })",
                        type: 'GET',
                        data: {
                            employee: employee,
                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {

                            let dropdown = $('#OfficeCode');
                            dropdown.empty();
                            $('#OfficeCode').empty();
                            $('#AreaId').empty();
                            $('#DeskId').empty();
                            var flag = false;
                            var phase = null;
                            var options = '';
                            var tagsList = '';
                            options += '<option> </option>';
                            $('#BaseOfficeLocation').text(data.baseOfficeLocation);
                            $(data.officeList).each(function () {
                                flag = true;
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            });

                            $(data.tagList).each(function () {
                                tagsList = this.dataTextField + ' ,' + tagsList;
                            });

                            if (tagsList != '') {
                                tagsList = tagsList.replace(/,*$/, '');

                                $('#bTags').text(tagsList);
                            } else {

                                $('#bTags').text('NA');
                            }

                            dropdown.html(options);

                            if (flag == false) {
                                phase = null;
                            }

                            dropdown.val(phase);
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            notify($.i18n('Error'), result.responseText, 'danger');
                        }
                    });
                }
            });
        }

        function OfficeChange() {

            $('#OfficeCode').change(function () {

                var office = $(this).val();
                var employee = $('#Employee').val();
                if (office == null || office === '') {
                    $('#AreaId').empty();
                    $('#DeskId').empty();

                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetAreaListForFixedPc", "Masters", new { Area = "DMS" })",
                        type: 'GET',
                        data: {
                            office: office,
                            employee: employee,

                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {

                            let dropdown = $('#AreaId');
                            dropdown.empty();
                            var flag = false;
                            var phase = null;
                            var options = '';
                            options += '<option> </option>';
                            $(data).each(function () {
                                flag = true;
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            });
                            dropdown.html(options);

                            if (flag == false) {
                                phase = null;
                            }

                            dropdown.val(phase);
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            notify($.i18n('Error'), result.responseText, 'danger');
                        }
                    });
                }
            });
        }

        function AreaIdChange() {

            $('#AreaId').change(function () {

                var area = $(this).val();
                var office = $('#OfficeCode').val();

                if (area == null || area === '') {
                    $('#DeskId').empty();

                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetDeskList", "Masters", new { Area = "DMS" })",
                        type: 'GET',
                        data: {
                            office: office,
                            areaId: area
                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {

                            let dropdown = $('#DeskId');
                            dropdown.empty();
                            var flag = false;
                            var phase = null;
                            var options = '';
                            options += '<option> </option>';
                            $(data).each(function () {
                                flag = true;
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            });
                            dropdown.html(options);

                            if (flag == false) {
                                phase = null;
                            }

                            dropdown.val(phase);
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            notify($.i18n('Error'), result.responseText, 'danger');
                        }
                    });
                }
            });
        }

        let vVUloadDeskAreaEmployeeMapList = "@Url.Action("GetListsDeskAreaEmployeeMap", "Masters")";

        function loadDeskAreaEmployeeMapDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbDeskAreaEmployeeMap",
                pColumns: datatableDeskAreaEmployeeMapColumns,
                pUrl: vVUloadDeskAreaEmployeeMapList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    areaId: $('#FilterDataModel_AreaId').val() ? $('#FilterDataModel_AreaId').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                let datatableDeskAreaEmployeeMapColumns = [
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<button class="btn btn-outline-info btn-sm border-none  " ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("DeskAreaEmployeeMapDetails", "Masters", new { Area = "DMS" })"' +
                                ' data-modalpopupwidth="rightw35" ' +
                                ' data-id="' + data.keyId + '"' +
                                ' data-modaltitle="Desk Area Employee Map Detail" ' +
                                ' data-modalheader="Desk Area Employee Map Detail" ' +
                                ' > ' +
                                ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                ' </button>'
                        },
                        'className': "td-icon",
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return data.empNo + " - " + data.empName
                        },
                    },
                    { data: "office" },
                    { data: "areaDesc" },
                    { data: "deskId" },
                    { data: "modifiedBy" },
                    {
                        data: "modifiedOn",
                        width: '10.0rem',
                        render: function (data, type, row) {
                            if (data)
                                return moment(data).format("DD-MMM-YYYY");
                            else
                                return '';
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {

                            return '<button title="Edit" class="btn btn-outline-primary btn-sm border-none" ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("DeskAreaEmployeeMapEdit", "Masters", new { Area = "DMS" })" ' +
                                ' data-modalpopupwidth="rightw35" ' +
                                ' data-id="' + row.keyId + '"' +
                                ' data-modaltitle="Edit Desk Area Employee Details" ' +
                                ' data-modalheader="Edit Desk Area Employee Details"> ' +
                                ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                ' </button>';
                        },
                        className: "td-icon",
                    },
                    {
                        'data': null,
                        render: function (data, type, row) {

                            return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                ' data-jqueryselector = "showconfirmationmodal" ' +
                                ' data-url="@Url.Action("DeskAreaEmployeeMapDelete", "Masters", new { Area = "DMS" })"' +
                                ' data-id="' + data.keyId + '"' +
                                ' data-PostDeleteReLoadDataTables="OK" ' +
                                ' data-modaltitle="Please Confirm!" ' +
                                ' data-confirmationtext="Do you want to Delete Desk Area Employee Map details :-' + data.areaId + ' - ' + data.empNo + ' " ' +
                                ' data-confirmationtype="warning" ' +
                                ' title="Delete Desk Area Employee Map" ' +
                                ' data-confirmbuttontext="Delete" > ' +
                                ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                ' </button>';

                        },
                        'className': "td-icon text-center  align-middle",
                    },
                ];

            </text>
        }
            function PostSave(data) {
                if (data.success) {
                    $("#modalcontainer").modal('hide');
                    hideLoader();
                    loadDeskAreaEmployeeMapDataTable();
                    notify('success', data.response, 'Success');
                }
            }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadDeskAreaEmployeeMapDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadDeskAreaEmployeeMapDataTable();
            }
        });
        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadDeskAreaEmployeeMapDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        }
        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');
            $("#FilterDataModel_AreaId").val(data.areaId);
            loadDeskAreaEmployeeMapDataTable();
            hideLoader();
        }
    </script>
}
