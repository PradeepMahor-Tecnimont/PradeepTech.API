@model TCMPLApp.WebApp.Models.DeskAreaViewModel

@{
    ViewData["Title"] = "Areas";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="DMS">Desk management</a></li>
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Masters" asp-area="DMS">Masters</a></li>
        <li class="breadcrumb-item active" aria-current="page">Areas</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<input readonly type="hidden" asp-for="@Model.FilterDataModel.IsRestricted" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.AreaCatgCode" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.AreaType" />
<form asp-controller="Masters"
      asp-action="DeskAreaDetails"
      id="formDeskAreaDetails">

    <input type="hidden" asp-for="AreaId" name="id" id="AreaId" />
</form>
<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Areas</p>
    </div>
    <div class="d-flex flex-row">
        @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.DMS.DMSHelper.ActionITAdm))
        {
            <a title="New area category" class="btn btn-outline-primary btn-sm border border-white" href="#"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("DeskAreaCreate", "Masters", new { Area = "DMS" })'
               data-statichtmlsourcedivid=""
               data-modaltitle="New area category"
               data-modalheader="New area category">
                <i class="fas fa-plus"></i> Create
            </a>
        }
        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("DeskAreaFilterGet", "Masters", new { Area = "DMS" })'
           data-modaltitle="Filters - Desk Area"
           data-modalheader="Filters - Desk Area">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="DmsDeskAreaIndex"
           data-url='@Url.Action("ResetFilter", "Masters", new { Area = "DMS" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>
        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
            href="#"
            data-jqueryselector="binarydownload"
            data-url="@(Url.Action("DeskAreaExcelDownload", "Masters", new { Area = "DMS" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>Area</th>
                    <th>Description</th>
                    <th>Area category</th>
                    <th>Area category description</th>
                    <th>Area information</th>
                    <th>Area type</th>
                    <th>Tag</th>
                    <th>Is Restricted</th>
                    <th>Is Active</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            loadDataTable();
        });

        function localScript() {
            initSelect2();

            $("#TagList").change(function (e) {
                $("#TagId").val($(this).val());
                console.log($(this).val());
            });
        }

        function loadDataTable() {
            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                responsive: true,
                autoWidth: false,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                        data: null,
                        render: function (data, type, row) {
                            var AreaId = "'" + data.areaId + "'";
                            return '<button class="btn btn-sm-icon" href="#" onclick="GotoDetails(' + AreaId + ')" title="Detail"><i class="far fa-eye"></i></button>';
                        },
                        className: "td-icon",
                    },
                            { 'data': "areaId" },
                            { 'data': "areaDesc" },
                            { 'data': "areaCatgCode" },
                            { 'data': "areaCatgDesc" },
                            { 'data': "areaInfo" },
                            { 'data': "deskAreaTypeText" },
                            {
                                data: null,
                                render: function (data, type, row) {
                                if (data.tagId) {
                                    return data.tagName
                                }
                                else{
                                    return '';
                                }
                            }
                            },

                            { 'data': "isRestrictedText" },
                            { 'data': "isActiveText" },
                            {
                                data: null,
                                render: function (data, type, row) {
                                    return '<button title="Edit" class="btn btn-outline-primary btn-sm border-none" ' +
                                        ' data-jqueryselector="openmodal" ' +
                                        ' data-modalcontainer="modalcontainer" '+
                                        ' data-url="@Url.Action("DeskAreaEdit", "Masters", new { Area = "DMS" })"' +
                                        ' data-modalpopupwidth="rightw35" ' +
                                        ' data-id="' + data.areaId + '"' +
                                        ' data-modaltitle="Area category edit" ' +
                                        ' data-modalheader="Area category edit" >' +
                                        ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                        ' </button>';
                                },
                                className: "td-icon",
                            },
                            {
                                'data': null,
                                render: function (data, type, row) {
                                    if (data.areaIdCount == 0) {
                                        return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                            ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                            ' data-jqueryselector = "showconfirmationmodal" ' +
                                            ' data-url="@Url.Action("DeskAreaDelete", "Masters", new { Area = "DMS" })"' +
                                            ' data-id="' + data.areaId + '"' +
                                            ' data-redirecturl="@Url.Action("DeskAreaIndex", "Masters", new { Area = "DMS" })"' +
                                            ' data-modaltitle="Please Confirm!" ' +
                                            ' data-confirmationtext=\'Do you want to delete Area category?\' ' +
                                            ' data-confirmationtype="warning" ' +
                                            ' title="Delete Area category" ' +
                                            ' data-confirmbuttontext="Delete Area category" > ' +
                                            ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                            ' </button>';
                                    } else
                                    {
                                        return '';
                                    }
                                },
                                'className': "td-icon text-center  align-middle",
                            }
                        ]
                    </text>
                }
                else
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var item = '<div class="card">';
                                    item += '<div class="card-mobiledatatable">';

                                    item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ]
                    </text>
                },
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsDeskArea", "Masters")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = $('#GenericSearch').val();
                        d.isRestricted = ($('#FilterDataModel_IsRestricted').val());
                        d.areaCatgCode = ($('#FilterDataModel_AreaCatgCode').val());
                        d.areaType = ($('#FilterDataModel_AreaType').val());

                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        }
        function GotoDetails(id) {

            $('#AreaId').val(id);
            var frm = $('#formDeskAreaDetails');
            frm.submit();
        }

        $("#GenericSearch").keypress(function(event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
         });
        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadDataTable();
                notify('success', data.response, 'Success');
            }
        }
        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_IsRestricted").val(data.isRestricted);
            $("#FilterDataModel_AreaCatgCode").val(data.areaCatgCode);
            $("#FilterDataModel_AreaType").val(data.areaType);

            loadDataTable();
            hideLoader();
        }
    </script>
}
