@model TCMPLApp.WebApp.Models.ModulesViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@{
    ViewData["Title"] = "Modules";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="CoreSettings">Core Settings</a></li>
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="UserAccess" asp-area="CoreSettings">User Access</a></li>
        <li class="breadcrumb-item active" aria-current="page">Modules</li>
    </ol>
}
@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}
<form asp-controller="UserAccess"
      asp-action="ModulesModuleDetail"
      id="formModuleDetails">

    <input type="hidden" asp-for="ModuleId" />
    <input type="hidden" asp-for="ModuleName" />
</form>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Modules</p>
    </div>
    <div class="d-flex flex-row">
         @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.CoreSettings.CoreSettingsHelper.ActionEditUserAccess))
        {
            <a title="New Module" class="btn btn-outline-primary btn-sm border border-white" href="#"
            data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("ModulesCreate", "UserAccess", new { Area = "CoreSettings" })'
           data-statichtmlsourcedivid=""
           data-modaltitle="New Module"
           data-modalheader="New Module">
            <i class="fas fa-plus"></i>@localizer[" Create"]
        </a>
        }
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.ModuleId)]</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.ModuleName)]</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.ModuleLongDesc)]</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.ModuleIsActive)]</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.ModuleSchemaName)]</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.FuncToCheckUserAccess)]</th>
                    <th>@localizer[Html.DisplayNameFor(model => model.ModuleShortDesc)]</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");


    }

    <script>
        $(document).ready(function () {
            loadModuleDataTable();
        });

        function localScript() {
            initSelect2();
        }

        let vUrlModulesList = "@Url.Action("GetListsModules", "UserAccess")";
        let canEdit = @(CurrentUserIdentity.ProfileActions.Any(pa => pa.ActionId == TCMPLApp.Domain.Models.CoreSettings.CoreSettingsHelper.ActionEditUserAccess) ? "true" : "false");

        function loadModuleDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbGrid",
                pColumns: datatableColumns,
                pUrl: vUrlModulesList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        }


        @if ((bool)@Context.Items["isMobile"] == false)
        {

            <text>

                let datatableColumns = [
                    {
                        data: null,
                        render: function (data, type, row) {
                            var tempId = "'" + data.moduleId + "'";
                            var tempName = "'" + data.moduleShortDesc + "'";
                            return '<a class="btn btn-sm-icon" href="#" onclick="GotoModuleDetails(' + tempId + ','+ tempName +')" title="Detail"><i class="far fa-eye"></i></a>';
                        },
                        className: "td-icon",
                    },
                    { data: "moduleId" },
                    { data: "moduleName" },
                    { data: "moduleLongDesc" },
                    { data: "moduleIsActive" },
                    { data: "moduleSchemaName" },
                    { data: "funcToCheckUserAccess" },
                    { data: "moduleShortDesc" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (canEdit == true) {
                            if (data.deleteAllowed == 0) {
                                return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                    ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                    ' data-jqueryselector = "showconfirmationmodal" ' +
                                    ' data-url="@Url.Action("ModulesDelete", "UserAccess", new { Area = "CoreSettings" })"' +
                                    ' data-id="' + data.moduleId + '"' +
                                    ' data-PostDeleteReLoadDataTables="OK" ' +
                                    ' data-modaltitle="Please Confirm!" ' +
                                    ' data-confirmationtype="warning" ' +
                                    ' data-confirmationtext="Do you want to delete Module (' + data.moduleName + ' - ' + data.moduleLongDesc + ') ?" ' +
                                    ' title="Delete Module" ' +
                                    ' data-confirmbuttontext="Delete Module" > ' +
                                    ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                    ' </button>';
                            } else {
                                return '';
                            }
                            } else {
                                return '';
                            }
                        },
                        'className': "td-icon text-center  align-middle",
                    }
                ];


            </text>
        }


            $("#GenericSearch").keypress(function (event) {
                if (event.keyCode === 13) {
                    if ($("#GenericSearch").length) {
                        loadModuleDataTable();
                    }
                }
            });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadModuleDataTable();
            }
        });

        function GotoModuleDetails(ModuleId,ModuleName) {
            $('#ModuleId').val(ModuleId);
            $('#ModuleName').val(ModuleName);

            let vModuleId = $("#formModuleDetails input[id=ModuleId]").val();
            let vModuleName = $("#formModuleDetails input[id=ModuleName]").val();

            if (vModuleId == null || vModuleId == '') {
                toastr.error('Invalid Request ');
                return;
            }
            if (vModuleName == null || vModuleName == '') {
                toastr.error('Invalid Request');
                return;
            }

            var frm = $('#formModuleDetails');
            frm.submit();
        }

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadModuleDataTable();
                notify('success', data.response, 'Success');
            }
        }

        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadModuleDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        }

    </script>
}