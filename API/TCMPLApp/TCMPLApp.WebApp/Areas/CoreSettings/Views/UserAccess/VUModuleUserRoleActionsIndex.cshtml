@model TCMPLApp.WebApp.Models.VUModuleUserRoleActionsViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@{
    ViewData["Title"] = "Module User Role Actions";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="CoreSettings">Core Settings</a></li>
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="UserAccess" asp-area="CoreSettings">User Access</a></li>
        <li class="breadcrumb-item active" aria-current="page">Module User Role Actions</li>
    </ol>
}
@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="~/lib/dropzone/dropzone.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/lib/dropzone/basic.css" rel="stylesheet" asp-append-version="true" />
}
@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.ModuleId" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.RoleId" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.ActionId" />

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-12 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Module User Role Actions</p>
    </div>
    <div class="d-flex flex-row">
        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("FilterGet", "UserAccess", new { Area = "CoreSettings" })'
           data-modaltitle="Filters"
           data-modalheader="Filters">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="UserAccesssModuleUserRoleActionsIndex"
           data-url='@Url.Action("ResetFilter", "UserAccess", new { Area = "CoreSettings" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>
    </div>

    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>Employee</th>
                    <th>Person Id</th>
                    <th>Module </th>
                    <th>Module Description</th>
                    <th>Role</th>
                    <th>Role Description</th>
                    <th>Action</th>
                    <th>Action Description</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script>

        $(document).ready(function () {
            loadModuleUserRoleActionDataTable();
        });

        function localScript() {
            initSelect2();
            GetActions();
            GetRolesList();
            GetEmployeesList();

        };

        let vVUModuleUserRoleActionsList = "@Url.Action("GetListsVUModuleUserRoleActions", "UserAccess")";

        function loadModuleUserRoleActionDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbGrid",
                pColumns: datatableColumns,
                pUrl: vVUModuleUserRoleActionsList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    moduleId: $('#FilterDataModel_ModuleId').val() ? $('#FilterDataModel_ModuleId').val() : null,
                    roleId: $('#FilterDataModel_RoleId').val() ? $('#FilterDataModel_RoleId').val() : null,
                    actionId: $('#FilterDataModel_ActionId').val() ? $('#FilterDataModel_ActionId').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                    { 'data': "employee" },
                    { 'data': "personId" },
                    { 'data': "module" },
                    { 'data': "moduleDesc" },
                    { 'data': "role" },
                    { 'data': "roleDesc" },
                    { 'data': "action" },
                    { 'data': "actionDesc" },

                ];


            </text>
        };


        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadModuleUserRoleActionDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadModuleUserRoleActionDataTable();
            }
        });

        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadModuleUserRoleActionDataTable();
                notify('success', data.response, 'Success');
            }
        };

        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadModuleUserRoleActionDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        };

        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');


            $("#FilterDataModel_ModuleId").val(data.moduleId);
            $("#FilterDataModel_RoleId").val(data.roleId);
            $("#FilterDataModel_ActionId").val(data.actionId);

            loadModuleUserRoleActionDataTable();
            hideLoader();
        };


        function GetActions() {

                 $('#ModuleId').on('change', function (e) {
                 var vModule = $('#ModuleId').val();
                 var vRole = $('#RoleId').val();

                    $.ajax({
                        url: "@Url.Action("GetActionsList", "UserAccess", new { Area = "CoreSettings" })",
                        type: 'GET',
                        data: {
                            module: vModule,
                            role: vRole
                        },
                        beforeSend: function () {
                            showModalLoader();
                            $("#ActionId").prop("disabled", true);
                        },
                        success: function (data) {
                            let dropdown = $('#ActionId');
                            dropdown.empty();
                            var options = '';
                            var flag = false;
                            var phase = null;
                            $(data).each(function () {

                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';

                            });
                            dropdown.html(options);
                            if (flag == false) {
                                phase = null;
                            }

                            dropdown.val(phase);
                            hideModalLoader()
                            $("#ActionId").prop("disabled", false);
                        },
                        error: function (result) {
                            hideModalLoader();
                            $("#ActionId").prop("disabled", false);
                            notify($.i18n('Error'), result.responseText, 'danger');
                        }
                    });

            });
    };

        function GetRolesList() {
            $('#ModuleId').on('change', function (e) {
            var vModule = $('#ModuleId').val();
            var vRole = $('#RoleId').val();

               $.ajax({
                   url: "@Url.Action("GetRolesList", "UserAccess", new { Area = "CoreSettings" })",
                   type: 'GET',
                   data: {
                       module: vModule,
                       role: vRole
                   },
                   beforeSend: function () {
                       showModalLoader();
                       $("#RoleId").prop("disabled", true);
                   },
                   success: function (data) {
                       let dropdown = $('#RoleId');
                       dropdown.empty();
                       var options = '';
                       var flag = false;
                       var phase = null;
                       $(data).each(function () {

                           options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';

                       });
                       dropdown.html(options);
                       if (flag == false) {
                           phase = null;
                       }

                       dropdown.val(phase);
                       hideModalLoader()
                       $("#RoleId").prop("disabled", false);
                   },
                   error: function (result) {
                       hideModalLoader();
                       $("#RoleId").prop("disabled", false);
                       notify($.i18n('Error'), result.responseText, 'danger');
                   }
               });

       });
    };

        function GetEmployeesList() {

            $('#ModuleId').on('change', function (e) {
            var vModule = $('#ModuleId').val();
            var vRole = $('#RoleId').val();

               $.ajax({
                   url: "@Url.Action("GetActionsList", "UserAccess", new { Area = "CoreSettings" })",
                   type: 'GET',
                   data: {
                       module: vModule,
                       role: vRole
                   },
                   beforeSend: function () {
                       showModalLoader();
                       $("#Empno").prop("disabled", true);
                   },
                   success: function (data) {
                       let dropdown = $('#Empno');
                       dropdown.empty();
                       var options = '';
                       var flag = false;
                       var phase = null;
                       $(data).each(function () {

                           options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';

                       });
                       dropdown.html(options);
                       if (flag == false) {
                           phase = null;
                       }

                       dropdown.val(phase);
                       hideModalLoader()
                       $("#Empno").prop("disabled", false);
                   },
                   error: function (result) {
                       hideModalLoader();
                       $("#Empno").prop("disabled", false);
                       notify($.i18n('Error'), result.responseText, 'danger');
                   }
               });

       });
};

</script>
}