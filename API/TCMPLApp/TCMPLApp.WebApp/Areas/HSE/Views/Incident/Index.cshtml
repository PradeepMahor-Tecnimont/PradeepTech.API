@model TCMPLApp.WebApp.Models.IncidentDataTableListViewModel

@{
    ViewData["Title"] = "Incident preliminary report summary";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="HSE">HSE</a></li> 
        <li class="breadcrumb-item"><a asp-action="IncidentIndex" asp-controller="Home" asp-area="HSE">Incident preliminary report</a></li> 
        <li class="breadcrumb-item active" aria-current="page">Incident preliminary report summary</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<div style="display:none">
    <input readonly asp-for="@Model.FilterDataModel.StatusString" />
</div>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Incident Summary</p>
    </div>
    <div class="d-flex flex-row">
        <a class="btn btn-outline-primary btn-sm border-white"
            asp-area="hse"    
            asp-controller="Incident"
            asp-action="Create"
            titie="Incident preliminary report">
             <i class="fas fa-plus"></i> Create
        </a>      
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>@Html.DisplayNameFor(model => model.Statusstring)</th>
                    <th>@Html.DisplayNameFor(model => model.Empno)</th>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Costcode)</th>
                    <th>@Html.DisplayNameFor(model => model.Office)</th>
                    <th>@Html.DisplayNameFor(model => model.Loc)</th>
                    <th>@Html.DisplayNameFor(model => model.Incdate)</th>
                    <th>@Html.DisplayNameFor(model => model.Inctime)</th>                    
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/lib/moment.js/moment.js" asp-append-version="true"></script>

    <script>
        var dataTable;
        $(document).ready(function () {            
            loadDataTable();
        });

        function localScript() {
            initSelect2();
        };

        function loadDataTable() {
            dataTable = $('#tbGrid').DataTable({
                 drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                order: [[1, "asc"]],
                responsive: true,
                autoWidth: false,
                pageLength: 25,
                lengthMenu: [25, 50, 100, 200],
                processing: true,
                serverSide: true,
                stateSave: false,
                info: false,
                filter: false,                
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                'columnDefs': [
                     { orderable: false, targets: 0 }
                ],
                @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                    columns: [
                        {
                            'data': null,
                            render: function (data, type, row) {
                                return '<button class="btn btn-sm-icon" ' +
                                    ' data-jqueryselector="openmodal" ' +
                                    ' data-modalcontainer="modalcontainer" '+
                                    ' data-url="@Url.Action("Detail", "Incident", new { Area = "HSE" })"' +
                                    ' data-modalpopupwidth="rightw35" ' +
                                    ' data-id="' + data.reportid + '"' +
                                    ' data-modaltitle="Incident preliminary report details" ' +
                                    ' data-modalheader="Incident preliminary report details" ' +
                                    ' > ' +
                                    ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                    ' </button>';                                                             
                            },
                            'className': "td-icon",
                        },
                        {   'data': "statusstring" },   
                        {   'data': "empno" },                   
                        {   'data': "name"  },
                        {   'data': "costcode" },
                        {   'data': "office" },
                        {   'data': "loc" },
                        {
                            'data': "incdate",
                            'render': function (data) {
                                return moment(data).format('DD-MMM-YYYY');
                                }
                        },
                        {   'data': "inctime" }   
                    ],
                    </text>
                }
                ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetLists", "Incident")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    //d.search = null;
                    d.genericSearch = $('#GenericSearch').val();
                    d.statusstring = ($('#FilterDataModel_StatusString').val());
                   },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
            });
        };

        $("#GenericSearch").keypress(function(event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

        $('#buttonSearch').on('click', function () {
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });
    </script>
}


