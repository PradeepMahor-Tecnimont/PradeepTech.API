@model TCMPLApp.WebApp.Models.GuestAttendanceViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    //const intGuestAttendanceCreateEditDeleteId = 175;

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section styles
{

    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />

    <!-- DataTable -->
    @*<link rel="stylesheet" href="~/assets/plugins/data-tables/css/datatables.min.css" asp-append-version="true">*@
    <!-- Material Datepicker css -->
    @*<link rel="stylesheet" href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" asp-append-version="true" />*@
}

@{
    ViewData["Title"] = "Guest Attendance";

}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SelfService">SelfService</a></li>
        <li class="breadcrumb-item active">Guest attendance</li>
    </ol>
}

@*<input type="hidden" asp-for="@Model.FilterDataModel.BusinessEntityId" />
    <input type="hidden" id="FilterDataModel_StartDateTime" name="FilterDataModel_StartDateTime" value="@Model.FilterDataModel.StartDateTimeString" />
    <input type="hidden" id="FilterDataModel_EndDateTime" name="FilterDataModel_EndDateTime" value="@Model.FilterDataModel.EndDateTimeString" />
    <input type="hidden" asp-for="@Model.FilterDataModel.StatusTypeId" />*@

<div style="display:none">
    <input readonly type="datetime" asp-for="@Model.FilterDataModel.StartDate" />
    <input readonly type="datetime" asp-for="@Model.FilterDataModel.EndDate" />
    <input readonly type="hidden" asp-for="@Model.FilterDataModel.Empno" />
</div>

<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Guest attendance</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            <a class="btn btn-outline-primary btn-sm border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("GuestAttendanceCreate", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Guest attendance"
               data-modalheader="Guest attendance">
                <i class="fas fa-plus"></i>&nbsp;@localizer["Guest attendance"]
            </a>
            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("GuestAttendanceFilterGet", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Filters - Guest attendance"
               data-modalheader="Filters - Guest attendance">
                <i class="fas fa-filter"></i>
                Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-action="ResetFilterSession"
               href=""
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>
        </div>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        @*<div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>*@
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">

                    <th>@Html.DisplayNameFor(model => model.AppliedOn)</th>
                    <th>@Html.DisplayNameFor(model => model.MeetingDate)</th>
                    <th>@Html.DisplayNameFor(model => model.MeetingTime)</th>
                    <th>@Html.DisplayNameFor(model => model.HostName)</th>
                    <th>@Html.DisplayNameFor(model => model.GuestName)</th>
                    <th>@Html.DisplayNameFor(model => model.GuestCompany)</th>
                    <th>@Html.DisplayNameFor(model => model.MeetingPlace)</th>
                    <th>@Html.DisplayNameFor(model => model.Remarks)</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        function localScript() {

            initSelect2();
            initFilter();
            initDatePicker();
        }

        function initDatePicker() {

            var currentDate = moment(new Date);
            var PastMonth = moment(currentDate).add(-1, 'M');
            var futureMonth = moment(currentDate).add(1, 'M');
            var futureMonthEnd = moment(futureMonth).endOf('month');

            if (currentDate.date() != futureMonth.date() && futureMonth.isSame(futureMonthEnd.format('YYYY-MM-DD'))) {
                futureMonth = futureMonth.add(1, 'd');
            }

            var currYear = moment().year();

            $('#fromHRS').bootstrapMaterialDatePicker({
                date: false,
                format: 'HH:mm',
                shortTime: true,
                pickSeconds: false,
            }).on('change', function (e, date) {
                $("#FromHRS").val(date.format('HH:mm'));

                var fromTime = $("#FromHRS").val();
                var ToTime = $("#EndTime").val();

                if (ToTime != null || ToTime != '') {
                    var beginningTime = moment(fromTime, 'HH:mm');
                    var endTime = moment(ToTime, 'HH:mm');

                    if (endTime.isBefore(beginningTime)) {
                        $("#FromHRS").val("");
                        notify('error', 'Invalid Time', 'danger');
                    }
                }
                $("#Remarks").focus();
            });

            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                useCurrent: false,
                nowButton: true
            });

            $("#startDate").on("change", function (event, date) {
                $("#StartDate").val(date.format("DD-MMM-YYYY"));
            });

        }

        function initFilter() {

            var currYear = moment().year();
            var curYearLastDate = new Date(currYear, 11, 31);
            var curYearMinDate = new Date((currYear - 1), 0, 1);

            $('.datepickerFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                useCurrent: false
            });

            $('#startDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $('#endDateFilter').bootstrapMaterialDatePicker('setMinDate', date);
                $('#endDateFilter').bootstrapMaterialDatePicker('setMaxDate', curYearLastDate);

                $("#StartDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#endDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#EndDate").val(date.format('DD-MMM-YYYY'));
            });

        }

        $(document).ready(function () {
            localLoadDataTable();
        });
        function localLoadDataTable() {

            var table = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                lengthMenu: [25,50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
              @if ((bool)@Context.Items["isMobile"] == false)
                {
                    <text>
                        ordering: false,
                        //order: [1, "asc"],
                        columns: [
                            { data: "appliedOn" },
                            { data: "meetingDate" },
                            { data: "meetingTime" },
                            { data: "hostName" },
                            { data: "guestName" },
                            { data: "guestCompany" },
                            { data: "meetingPlace" },
                            { data: "remarks" },
                            {
                                data: null,
                                render: function (data, type, row) {
                                    if (data.deleteAllowed)
                                        return ' <button class="btn btn-outline-danger btn-sm border-none"  ' +
                                            ' onclick="showDeleteConfirmationPopup(event,this);" ' +
                                            ' data-url="@Url.Action("GuestAttendanceDelete", "Attendance", new { Area = "SelfService" })" ' +
                                            ' data-redirecturl="" ' +
                                            ' data-postsavereloaddatatable="OK" ' +
                                            ' data-applicationid="' + data.appNo + '" ' +
                                            ' data-modaltitle="Please Confirm!" ' +
                                            ' data-confirmationtext="Delete onduty application ' + data.appNo + ' ?" ' +
                                            ' data-confirmationtype="warning" data-confirmbuttontext="Delete application"> ' +
                                            ' <i class="fa fa-trash" aria-hidden="true"></i> ' +
                                            ' </button> ';
                                    else
                                        return '';
                                },
                                'className': "td-icon",
                            }
                        ],
                    </text>
                }
                else
                {
                    <text>
                        ordering: false,
                        columns: [
                            {
                                data: null,
                                render: function (data, type, row) {
                                    var item = '<div class="card">';
                                    item += '<div class="card-mobiledatatable">';

                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.AppliedOn)' + '</dt><dd class="col-lg-8">' + moment(data.appliedOn).format('L') + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.MeetingDate)' + '</dt><dd class="col-lg-8">' + moment(data.meetingDate).format('L')+ '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.MeetingTime)' + '</dt><dd class="col-lg-8">' + data.meetingTime  + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HostName)' + '</dt><dd class="col-lg-8">' + data.hostName + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.GuestName)' + '</dt><dd class="col-lg-8">' + data.guestName + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.GuestCompany)' + '</dt><dd class="col-lg-8">' + data.guestCompany + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.MeetingPlace)' + '</dt><dd class="col-lg-8">' + data.meetingPlace + '</dd></dl>';
                                    item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.Remarks)' + '</dt><dd class="col-lg-8">' + data.remarks + '</dd></dl>';

                                    item += '</div></div>';
                                    return item
                                },
                                sortable: false,
                                searchable: false,
                                className: "datatable-td-mobile"
                            }
                        ],
                    </text>
                }
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsGuestAttendance", "Attendance")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = null; // $('#FilterDataModel_GenericSearch').val();
                        d.businessEntityId = null; // $('#FilterDataModel_BusinessEntityId').val();
                        d.startDateTime = null; // $('#FilterDataModel_StartDateTime').val();
                        d.endDateTime = null; // $('#FilterDataModel_EndDateTime').val();
                        d.statusTypeId = null; // $('#FilterDataModel_StatusTypeId').val();
                        d.startDate = $('#FilterDataModel_StartDate').val();
                        d.endDate = $('#FilterDataModel_EndDate').val();
                        },
                        error: function (request, status, error) {
                            notify('error', request.responseText, 'danger');
                        }
                    }
            });

            //dataTableSearch();
        }

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_EndDate").val(data.endDate);

            localLoadDataTable();

            hideLoader();
        }

        function PostSaveReLoadDataTable(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                localLoadDataTable();
                hideLoader();
                notify('success', data.response, 'Success');
            }
        }
    </script>
}  