@model TCMPLApp.WebApp.Models.ExtraHoursClaimsViewModel

@Html.AntiForgeryToken()

@{

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SelfService">SelfService</a></li>
        <li class="breadcrumb-item active">Extra hours claims</li>
    </ol>
}

@section styles
{

    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />

    <!-- DataTable -->
    @*<link rel="stylesheet" href="~/assets/plugins/data-tables/css/datatables.min.css" asp-append-version="true">*@
    <!-- Material Datepicker css -->
    @*<link rel="stylesheet" href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" asp-append-version="true" />*@
}

@{
    ViewData["Title"] = "Leave applications";

}

@Html.TextBoxFor(model => model.FilterDataModel.StartDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })
@Html.HiddenFor(m => m.FilterDataModel.Empno)


<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Extra hours claims</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            <a type="button" class="btn btn-outline-primary btn-sm border-white"
               href="@Url.Action("ExtraHoursClaimCreateMain", "Attendance", new { Area = "SelfService" })">
                <i class="fas fa-plus"></i>&nbsp;Create claim
            </a>
            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("ExtraHoursClaimsFilterGet", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Filters - Extra hours claims"
               data-modalheader="Filters - Extra hours claims">
                <i class="fas fa-filter"></i>
                Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-actionid="ExtraHoursClaimsIndex"
               data-url='@Url.Action("ResetFilter", "Attendance", new { Area = "SelfService" })'
               href="#"
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>
        </div>
    </div>
     
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        @*<div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>*@
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th></th>
                    <th width="100" style="width:100px;">@Html.DisplayNameFor(model => model.ClaimDate)</th>
                    <th>@Html.DisplayNameFor(model => model.ClaimNo)</th>
                    <th>@Html.DisplayNameFor(model => model.ClaimPeriod)</th>
                    <th>@Html.DisplayNameFor(model => model.ClaimedOt)</th>
                    <th>@Html.DisplayNameFor(model => model.ClaimedHhot)</th>
                    <th>@Html.DisplayNameFor(model => model.ClaimedCo)</th>
                    <th>@Html.DisplayNameFor(model => model.LeadName)</th>
                    <th>@Html.DisplayNameFor(model => model.LeadApprovalDesc)</th>
                    <th>@Html.DisplayNameFor(model => model.HodApprovalDesc)</th>
                    <th>@Html.DisplayNameFor(model => model.HrdApprovalDesc)</th>
                    <th>@Html.DisplayNameFor(model => model.HrdApprovedOt)</th>
                    <th>@Html.DisplayNameFor(model => model.HrdApprovedHhot)</th>
                    <th>@Html.DisplayNameFor(model => model.HrdApprovedCo)</th>
                    <th>Delete</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        function localScript() {
            initSelect2();
            initFilter();
        }

        function initFilter() {
            var curdate = new Date();

            var minDate = "01/" + (curdate.getFullYear() - 1);
            var maxDate = "12/" + (curdate.getFullYear());

            $('.datepickerFilter').datepicker({
                format: "MM-yyyy",
                startView: "months",
                minViewMode: "months",
                changeMonth: true,
                changeYear: true,
                startDate: minDate,
                endDate: maxDate,
                clearBtn: true,
        autoclose: true
            });

            $('#startDateFilter').datepicker({
                format: 'MM-yyyy',
                changeYear: true,
                autoclose: true
            }).on('change', function () {
                var fvDate = $(this).val();
                if (fvDate)
                    $("#StartDate").val(moment(fvDate, "MMMM-YYYY").format('DD-MMM-YYYY'));
                else
                    $("#StartDate").val('');
                $(this).datepicker('hide');
            });
            if ($("#StartDate").val()) {
                $('#startDateFilter').datepicker('setDate', new Date($("#StartDate").val()));
            }
        }

        $(document).ready(function () {
            localLoadDataTable();
            loadHeader();
        });

        function localLoadDataTable() {
            $('#tbGrid').DataTable().destroy();

            $('#tbGrid tbody').empty();

            let bIs

            var table = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                //aaSorting: [[1, 'asc']],
                ordering: false,
                responsive: true,
                autoWidth: false,
                pageLength: 25,
                lengthMenu: [25, 50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                  @if ((bool)@Context.Items["isMobile"] == false)
                    {
                        <text>
                ordering: false,
                //order: [1, "asc"],
                columns: [
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<button class="btn btn-outline-info btn-sm border-none" ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("ExtraHoursClaimDetail", "Attendance", new { Area = "SelfService" })"' +
                                ' data-modalpopupwidth="rightw75" ' +
                                ' data-claimno="' + data.claimNo + '"' +
                                ' data-modaltitle="Extra hours claim details" ' +
                                ' data-modalheader="Extra hours claim details" ' +
                                ' > ' +
                                ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                ' </button>'
                        },
                        'className': "td-icon"
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return moment(data.claimDate).format("DD-MMM-YYYY");
                        }
                    },
                    { data: "claimNo" },
                    { data: "claimPeriod" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return minutesToHours(data.claimedOt);
                        }
                            //"claimedOt"
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return minutesToHours(data.claimedHhot);
                        }
                            //"claimedHhot"
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return minutesToHours(data.claimedCo);
                        }
                        //"claimedCo"
                    },
                    { data: "leadName" },
                    { data: "leadApprovalDesc" },
                    { data: "hodApprovalDesc" },
                    { data: "hrdApprovalDesc" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return minutesToHours(data.hrdApprovedOt);
                        }
                        //"hrdApprovedOt"
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return minutesToHours(data.hrdApprovedHhot);
                        }
                        //"hrdApprovedHhot"
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return minutesToHours(data.hrdApprovedCo);
                        }
                        //"hrdApprovedCo"
                    },

                    {
                        data: null,
                        render: function (data, type, row) {
                            if (data.canDeleteClaim || "@(CurrentUserIdentity.ProfileActions.Any(p => p.RoleId == TCMPLApp.Domain.Models.SelfService.SelfServiceHelper.RoleAttendanceAdmin))" == "True" )
                              return ' <button class="btn btn-outline-danger btn-sm border-none"  ' +
                                  ' onclick="showDeleteConfirmationPopup(event,this);" ' +
                                  ' data-url="@Url.Action("ExtraHoursClaimDelete", "Attendance", new { Area = "SelfService" })" ' +
                                  ' data-postsavereloaddatatable="OK" ' +
                                  ' data-claimno="' + data.claimNo + '" ' +
                                  ' data-modaltitle="Please Confirm!" ' +
                                  ' data-confirmationtext="Delete extra hours claim ' + data.claimNo + ' ?" ' +
                                  ' data-confirmationtype="warning" data-confirmbuttontext="Delete extra hours claim"> ' +
                                  ' <i class="fa fa-trash" aria-hidden="true"></i> ' +
                                  ' </button> ';
                              else
                                  return '';
                        },
                        'className': "td-icon",
                    }
                ],
                        </text>
                    }
                    else
                    {
                        <text>
                ordering: false,
                columns: [
                    {
                        data: null,
                        render: function (data, type, row) {
                            var item = '<div class="card">';
                            item += '<div class="card-mobiledatatable">';

                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ClaimDate)' + '</dt><dd class="col-lg-8">' + moment(data.claimDate).format('L') + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ClaimNo)' + '</dt><dd class="col-lg-8">' + data.claimNo + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ClaimPeriod)' + '</dt><dd class="col-lg-8">' + data.claimPeriod + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ClaimedOt)' + '</dt><dd class="col-lg-8">' + data.claimedOt + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ClaimedHhot)' + '</dt><dd class="col-lg-8">' + data.claimedHhot + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ClaimedCo)' + '</dt><dd class="col-lg-8">' + data.claimedCo + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.LeadName)' + '</dt><dd class="col-lg-8">' + data.leadName + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.LeadApprovalDesc)' + '</dt><dd class="col-lg-8">' + data.leadApprovalDesc + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HodApprovalDesc)' + '</dt><dd class="col-lg-8">' + data.hodApprovalDesc + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HrdApprovalDesc)' + '</dt><dd class="col-lg-8">' + data.hrdApprovalDesc + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HrdApprovedOt)' + '</dt><dd class="col-lg-8">' + data.hrdApprovedOt + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HrdApprovedHhot)' + '</dt><dd class="col-lg-8">' + data.hrdApprovedHhot + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HrdApprovedHhot)' + '</dt><dd class="col-lg-8">' + data.hrdApprovedHhot + '</dd></dl>';

                            item += '</div></div>';
                            return item
                        },
                        sortable: false,
                        searchable: false,
                        className: "datatable-td-mobile"
                    }
                ],
                        </text>
                    }
                ajax: {
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsExtraHoursClaims", "Attendance")',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    data: function (d) {
                        d.columns = null;
                        d.order = null;
                        d.search = null;
                        d.genericSearch = null; // $('#FilterDataModel_GenericSearch').val();
                        d.startDate = $('#FilterDataModel_StartDate').val();//$('#FilterDataModel_StartDateTime').val();
                        d.empno = $('#FilterDataModel_Empno').val();//$('#FilterDataModel_StartDateTime').val();
                    },
                    error: function (request, status, error) {
                        showError(request);
                        // notify('error', request.responseText, 'danger');
                    }
                }
            });

            //dataTableSearch();

        }

        function loadHeader() {
            $.ajax({
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    url: '@Url.Action("GetListsExtraHoursClaimsHeader", "Attendance",new { Area = "SelfService" })',
                    type: 'GET',
                    cache: true,
                    dataType: "json",
                    beforeSend: function () {
                        showLoader();
                    },
                    data: {

                        startDate: ($('#FilterDataModel_StartDate').val()),
                        empno: ($('#FilterDataModel_Empno').val())
                    },
                    success: function (data) {
                        if (data.error) {
                         }
                        else {
                            let period = data.period == null ? ' - ' : data.period;
                            var headerDetailsDiv = '';

                            headerDetailsDiv += '<div class="p-1 font-weight-bold ">';
                            headerDetailsDiv += '<span class="text-black-50">Employee name: </span><span id="empName" class="text-primary">' + data.empno + ' - ' + data.employeeName + '</span><br />';
                            headerDetailsDiv += '<span class="text-black-50">Claims details period : </span><span id="period" class="text-primary">' + period + '</span>';
                            headerDetailsDiv += '</div>';
                            $("div.headerDetails").html(headerDetailsDiv);

                             //$("div.openbal").text(data.openingBalance);
                            //$("div.closebal").text(data.closingBalance);
                        }
                        hideLoader();
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                        hideLoader();
                    }
                });
    }

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');
            $("#FilterDataModel_StartDate").val('');
            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_Empno").val('');
            $("#FilterDataModel_Empno").val(data.empno);

            localLoadDataTable();
            loadHeader();
            hideLoader();
        }

        function PostSaveReLoadDataTable(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                localLoadDataTable();
                loadHeader();
                hideLoader();
                notify('success', data.response, 'Success');
            }
        }
    </script>
}  