@model TCMPLApp.WebApp.Models.HolidayAttendanceViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    //const intHolidayAttendanceCreateEditDeleteId = 175;

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section styles
{

    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />

    <!-- DataTable -->
    @*<link rel="stylesheet" href="~/assets/plugins/data-tables/css/datatables.min.css" asp-append-version="true">*@
    <!-- Material Datepicker css -->
    <link rel="stylesheet" href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Holiday Attendance";

}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SelfService">SelfService</a></li>
        <li class="breadcrumb-item active">Holiday attendance</li>
    </ol>
}

@*<input type="hidden" asp-for="@Model.FilterDataModel.BusinessEntityId" />
    <input type="hidden" id="FilterDataModel_StartDateTime" name="FilterDataModel_StartDateTime" value="@Model.FilterDataModel.StartDateTimeString" />
    <input type="hidden" id="FilterDataModel_EndDateTime" name="FilterDataModel_EndDateTime" value="@Model.FilterDataModel.EndDateTimeString" />
    <input type="hidden" asp-for="@Model.FilterDataModel.StatusTypeId" />*@

<div style="display:none">
    <input readonly type="datetime" asp-for="@Model.FilterDataModel.StartDate" />
    <input readonly type="datetime" asp-for="@Model.FilterDataModel.EndDate" />
    <input readonly type="hidden" asp-for="@Model.FilterDataModel.Empno" />
    <input readonly type="hidden" asp-for="@Model.FilterDataModel.OndutyType" />
</div>

<div class="container-fluid bg-white border rounded card shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Holiday attendance</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            <a class="btn btn-outline-primary btn-sm border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw30"
               data-url='@Url.Action("HolidayAttendanceCreate", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Holiday attendance"
               data-modalheader="Holiday attendance">
                <i class="fas fa-plus"></i>&nbsp;@localizer["Holiday attendance"]
            </a>
            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("HolidayAttendanceFilterGet", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Filters - Holiday attendance"
               data-modalheader="Filters - Holiday attendance">
                <i class="fas fa-filter"></i>
                Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-action="ResetFilterSession"
               href=""
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>
        </div>
    </div>

    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        @*<div class="input-group pt-1 pl-1 pr-1 ">
        <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
        <div class="input-group-append">
        <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
        </div>
        </div>*@
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th></th>
                    <th>@Html.DisplayNameFor(model => model.AppliedOn)</th>
                    <th>@Html.DisplayNameFor(model => model.AppNo)</th>
                    <th>@Html.DisplayNameFor(model => model.HolidayAttendanceDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.LeadName)</th>
                    <th>@Html.DisplayNameFor(model => model.LeadApproval)</th>
                    <th>@Html.DisplayNameFor(model => model.HodApproval)</th>
                    <th>@Html.DisplayNameFor(model => model.LeadRemarks)</th>
                    <th>@Html.DisplayNameFor(model => model.HoDRemarks)</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/lib/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js" asp-append-version="true"></script>

    <script type="text/javascript">
        function localScript() {
            initSelect2();
            SetUpDateTime();
            initFilter();

        }

        function initFilter() {

            var currYear = moment().year();
            var curYearLastDate = new Date(currYear, 11, 31);
            var curYearMinDate = new Date((currYear - 1), 0, 1);

            $('.datepickerFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                useCurrent: false
            });

            $('#startDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $('#endDateFilter').bootstrapMaterialDatePicker('setMinDate', date);
                $('#endDateFilter').bootstrapMaterialDatePicker('setMaxDate', curYearLastDate);

                $("#StartDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#endDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#EndDate").val(date.format('DD-MMM-YYYY'));
            });
        }

        $(document).ready(function () {
            localLoadDataTable();

        });

        function SetUpDateTime() {
            //This is for create / Edit model
            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                minDate: new Date(),
                useCurrent: false
            });

            $('#startTime').bootstrapMaterialDatePicker({
                date: false,
                format: 'HH:mm',
                shortTime: true,
                pickSeconds: false,
            }).on('change', function (e, date) {
                $("#StartTime").val(date.format('HH:mm'));

                var fromTime = $("#StartTime").val();
                var ToTime = $("#EndTime").val();

                if (ToTime != null || ToTime != '') {
                    var beginningTime = moment(fromTime, 'HH:mm');
                    var endTime = moment(ToTime, 'HH:mm');

                    if (endTime.isBefore(beginningTime)) {
                        $("#StartTime").val("");
                        notify('error', 'Invalid Time', 'danger');
                    }
                }
                $("#Remarks").focus();
            });

            $('#endTime').bootstrapMaterialDatePicker({
                date: false,
                format: 'HH:mm',
                shortTime: true,
                pickSeconds: false,
            }).on('change', function (e, date) {
                $("#EndTime").val(date.format('HH:mm'));

                var fromTime = $("#StartTime").val();
                var ToTime = $("#EndTime").val();

                var beginningTime = moment(fromTime, 'HH:mm');
                var endTime = moment(ToTime, 'HH:mm');

                if (endTime.isBefore(beginningTime)) {
                    $("#EndTime").val("");
                    notify('error', 'Invalid Time', 'danger');
                }
                $("#Remarks").focus();
            });

            $('#holidayAttendanceDate').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                minDate: new Date(),
                useCurrent: false
            }).on('change', function (e, date) {
                $("#HolidayAttendanceDate").val(date.format('DD-MMM-YYYY'));
            });

        }

        function localLoadDataTable() {

            var table = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                pageLength: 25,
                lengthMenu: [25, 50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: { topStart: null, bottomStart: 'pageLength', bottomEnd: 'paging' },
        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                    ordering: false,
                    //order: [1, "asc"],
                    columns: [
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<button class="btn btn-outline-info btn-sm border-none" ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("HolidayAttendanceDetails", "Attendance", new { Area = "SelfService" })"' +
                                ' data-modalpopupwidth="rightw35" ' +
                                ' data-applicationid="' + data.appNo + '"' +
                                ' data-modaltitle="Holiday attendance details" ' +
                                ' data-modalheader="Holiday attendance details" ' +
                                ' > ' +
                                ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                ' </button>'
                        },
                        'className': "td-icon",
                    },
                    { data: "appliedOn" },
                    { data: "appNo" },
                    { data: "holidayAttendanceDate" },
                    { data: "description" },
                    { data: "leadName" },
                    { data: "leadApproval" },
                    { data: "hodApproval" },
                    { data: "leadRemarks" },
                    { data: "hoDRemarks" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (data.deleteAllowed == 0)
                                return ' <button class="btn btn-outline-danger btn-sm border-none"  ' +
                                    ' onclick="showDeleteConfirmationPopup(event,this);" ' +
                                    ' data-url="@Url.Action("HolidayAttendanceDelete", "Attendance", new { Area = "SelfService" })" ' +
                                    ' data-redirecturl="" ' +
                                    ' data-postsavereloaddatatable="OK" ' +
                                    ' data-applicationid="' + data.appNo + '" ' +
                                    ' data-modaltitle="Please Confirm!" ' +
                                    ' data-confirmationtext="Delete onduty application ' + data.appNo + ' ?" ' +
                                    ' data-confirmationtype="warning" data-confirmbuttontext="Delete application"> ' +
                                    ' <i class="fa fa-trash" aria-hidden="true"></i> ' +
                                    ' </button> ';
                            else
                                return '';
                        },
                        'className': "td-icon",
                    }
                ],
            </text>
        }
        else
        {
            <text>
                    ordering: false,
                    columns: [
                    {
                        data: null,
                        render: function (data, type, row) {
                            var item = '<div class="card">';
                            item += '<div class="card-mobiledatatable">';

                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.AppliedOn)' + '</dt><dd class="col-lg-8">' + moment(data.appliedOn).format('L') + '</dd></dl>';

                            item += '</div></div>';
                            return item
                        },
                        sortable: false,
                        searchable: false,
                        className: "datatable-td-mobile"
                    }
                ],
            </text>
        }
                ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetListsHolidayAttendance", "Attendance")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    d.search = null;
                    d.genericSearch = null; // $('#FilterDataModel_GenericSearch').val();
                    d.businessEntityId = null; // $('#FilterDataModel_BusinessEntityId').val();
                    d.startDateTime = null; // $('#FilterDataModel_StartDateTime').val();
                    d.startDate = $('#FilterDataModel_StartDate').val();
                    d.endDate = $('#FilterDataModel_EndDate').val();
                    d.endDateTime = null; // $('#FilterDataModel_EndDateTime').val();
                    d.statusTypeId = null; // $('#FilterDataModel_StatusTypeId').val();
                },
                error: function (request, status, error) {
                    notify('error', request.responseText, 'danger');
                }
            }
                });

                //dataTableSearch();
            }

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_EndDate").val(data.endDate);

            localLoadDataTable();

            hideLoader();
        }

        function PostSaveReLoadDataTable(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                localLoadDataTable();
                hideLoader();
                notify('success', data.response, 'Success');
            }
        }
    </script>
}  