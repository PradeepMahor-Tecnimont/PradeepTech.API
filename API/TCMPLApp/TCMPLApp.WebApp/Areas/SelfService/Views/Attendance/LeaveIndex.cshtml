@model TCMPLApp.WebApp.Models.LeaveApplicationsViewModel

@Html.AntiForgeryToken()

@{
    //const int CoreLeaveCreateEditDeleteId = 173;

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="SelfService">SelfService</a></li>
        <li class="breadcrumb-item active">Leave</li>
    </ol>
}

@section styles
    {

    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="~/lib/dropzone/dropzone.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/lib/dropzone/basic.css" rel="stylesheet" asp-append-version="true" />
    <style>
        @@media (-webkit-min-device-pixel-ratio: 1.25) {
            .openbal .col-xl-1, .closebal .col-xl-1 {
                flex: 0 0 12% !important;
                max-width: 12% !important;
            }
        }
    </style>
}

@{
    ViewData["Title"] = "Leave applications";

}
<div style="display:none">
    @Html.TextBoxFor(model => model.FilterDataModel.StartDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })
    @Html.TextBoxFor(model => model.FilterDataModel.EndDate, "{0:dd-MMM-yyyy}", htmlAttributes: new { @type = "hidden" })

    <input readonly type="hidden" asp-for="@Model.FilterDataModel.Empno" />
    <input readonly type="hidden" asp-for="@Model.FilterDataModel.LeaveType" />
</div>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-12 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Leave applications</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            <a class="btn btn-outline-primary btn-sm border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("LeaveCreate", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Leave application"
               data-modalheader="Leave application">
                <i class="fas fa-plus"></i>&nbsp;Leave application
            </a>
            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("LeaveFilterGet", "Attendance", new { Area = "SelfService" })'
               data-modaltitle="Filters - Leave"
               data-modalheader="Filters - Leave">
                <i class="fas fa-filter"></i>&nbsp;Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-actionid="LeaveIndex"
               data-url='@Url.Action("ResetFilter", "Attendance", new { Area = "SelfService" })'
               href="#"
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>
        </div>
    </div>

    <div class="bg-gray-active rounded ">
        @*<div class="input-group pt-1 pl-1 pr-1 ">
        <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
        <div class="input-group-append">
        <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
        </div>
        </div>*@
        <div class="headerDetails"></div>
        <div class="closebal"></div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th></th>
                    <th>@Html.DisplayNameFor(model => model.AppNo)</th>
                    <th>@Html.DisplayNameFor(model => model.LeaveType)</th>
                    <th>@Html.DisplayNameFor(model => model.StartDate)</th>
                    <th>@Html.DisplayNameFor(model => model.EndDate)</th>
                    <th>@Html.DisplayNameFor(model => model.DbCr)</th>
                    <th>@Html.DisplayNameFor(model => model.LeavePeriod)</th>
                    <th>@Html.DisplayNameFor(model => model.MedCertFileName)</th>
                    <th>@Html.DisplayNameFor(model => model.Lead)</th>
                    <th>@Html.DisplayNameFor(model => model.LeadApprovalDesc)</th>
                    <th>@Html.DisplayNameFor(model => model.HodApprovalDesc)</th>
                    <th>@Html.DisplayNameFor(model => model.HrdApprovalDesc)</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/lib/dropzone/dropzone.js" asp-append-version="true"></script>

    <script type="text/javascript">
        function localScript() {
            initCreateLeaveControls();
            initReviewLeaveControls();
            initReviewLeaveRevisionControls();
            initSelect2();
            initDropZone();

            initFilter();
            initDatePicker();
            //console.log("localScrit");
        }

        function initDatePicker() {
            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                useCurrent: false,
                nowButton: true,
                clearButton: true
            });

            $("#endDate").on("change", function (event, date) {
                $("#EndDate").val($(this).val());
            });

            $("#startDate").on("change", function (event, date) {
                if (!date) {
                    $("#StartDate").val('');
                    $("#endDate").val('');
                    $("#endDate").trigger('change');
                    return;
                }
                else
                    $("#StartDate").val(date.format("DD-MMM-YYYY"));
                if ($("#endDate").val()) {
                    //let startDate = moment($(this).val(), "DD-MMM-YYYY");
                    let endDate = moment($("#endDate").val(), "DD-MMM-YYYY");
                    if (endDate < date) {
                        $("#endDate").val('');
                        //$('#endDate').val(moment(startDate).format("DD-MMM-YYYY"));
                        $("#endDate").trigger('change');
                    }
                }
                else {
                    $("#endDate").val($(this).val());
                }

                $("#endDate").bootstrapMaterialDatePicker('setDate', $(this).val());
                $("#endDate").trigger('change');
            });

            $("#revisedEndDate").on("change", function (event, date) {
                $("#LeavePLReviseViewModel_RevisedEndDate").val($(this).val());
            });

            $("#revisedStartDate").on("change", function (event, date) {
                if (!date) {
                    $("#LeavePLReviseViewModel_RevisedStartDate").val('');
                    $("#revisedEndDate").val('');
                    $("#revisedEndDate").trigger('change');
                    return;
                }
                else
                    $("#LeavePLReviseViewModel_RevisedStartDate").val(date.format("DD-MMM-YYYY"));
                if ($("#revisedEndDate").val()) {
                    //let startDate = moment($(this).val(), "DD-MMM-YYYY");
                    let endDate = moment($("#revisedEndDate").val(), "DD-MMM-YYYY");
                    if (endDate < date) {
                        $("#revisedEndDate").val('');
                        //$('#endDate').val(moment(startDate).format("DD-MMM-YYYY"));
                        $("#revisedEndDate").trigger('change');
                    }
                }
                else {
                    $("#revisedEndDate").val($(this).val());
                }

                $("#revisedEndDate").bootstrapMaterialDatePicker('setDate', $(this).val());
                $("#revisedEndDate").trigger('change');
            });

            $('#startDate').val($('#StartDate').val());
            $('#endDate').val($('#EndDate').val());

            $('#revisedStartDate').val($('#LeavePLReviseViewModel_RevisedStartDate').val());
            $('#revisedEndDate').val($('#LeavePLReviseViewModel_RevisedEndDate').val());

        }

        function initFilter() {

            var currYear = moment().year();
            var curYearLastDate = new Date(currYear, 11, 31);
            var curYearMinDate = new Date((currYear - 1), 0, 1);
            /*
            $('.datepickerFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                time: false,
                useCurrent: false
            });
            */
            $('#startDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                time: false
            }).on('change', function (e, date) {
                $('#endDateFilter').bootstrapMaterialDatePicker('setMinDate', date);
                $('#endDateFilter').bootstrapMaterialDatePicker('setMaxDate', curYearLastDate);

                $("#StartDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#endDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                minDate: curYearMinDate,
                maxDate: curYearLastDate,
                time: false
            }).on('change', function (e, date) {
                $("#EndDate").val(date.format('DD-MMM-YYYY'));
            });

            if ($('#StartDate').val()) {
                $('#startDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#StartDate").val()));
            }
            if ($('#EndDate').val())
                $('#endDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#EndDate").val()));

        }

        function initReviewLeaveControls() {
            if ($("#formNewLeaveReview").length == 0)
                return;

            btnEnable($("#btneditleave"));

            $('#btneditleave').off('click').on('click', function () {
                $("#formNewLeaveReview").attr('action', '@Url.Action("LeaveCreateModify", "Attendance", new { Area = "SelfService" })').submit();
                btnDisable($("#btneditleave"));
                showModalLoader();
            });
            $('#btnreviewsubmit').off('click').on('click', function () {
                event.preventDefault();
                event.stopPropagation();
                submitReviewLeaveForm();
            });

        }

        function initReviewLeaveRevisionControls() {
            if ($("#formLeavePLReviseReview").length == 0)
                return;

            btnEnable($("#btneditleaverevision"));

            $('#btneditrevision').off('click').on('click', function () {
                event.preventDefault();
                event.stopPropagation();
                $("#formLeavePLReviseReview").attr('action', '@Url.Action("LeavePLReviseReviewModify", "Attendance", new { Area = "SelfService" })').submit();
                btnDisable($("#btneditleaverevision"));
                showModalLoader();
            });
            $('#btnreviewrevisionsubmit').off('click').on('click', function () {
                event.preventDefault();
                event.stopPropagation();
                $("#formLeavePLReviseReview").submit();
            });

        }

        function initCreateLeaveControls() {

            if ($("#formNewLeaveCreate").length == 0 && $("#formLeavePLRevise").length == 0)
                return;

            showHideHalfDayDiv();

            let idLeavePeriod = $("#formNewLeaveCreate").length == 1 ? "#LeavePeriod" : "#LeavePLReviseViewModel_RevisedLeavePeriod";
            let idDummyHalfDayDay = $("#formNewLeaveCreate").length == 1 ? "#halfDayDay" : "#revisedHalfDayDay";
            let idModelHalfDayDay = $("#formNewLeaveCreate").length == 1 ? "#HalfDayDay" : "#LeavePLReviseViewModel_RevisedHalfDayDay";

            $(idLeavePeriod).on('change', function () {
                showHideHalfDayDiv();
            });
            $(idDummyHalfDayDay).on('change', function () {
                $(idModelHalfDayDay).val($(this).val());
            });

        }

        function showHideHalfDayDiv() {
            if ($("#formLeavePLReviseReview").length == 1)
                return;

            let leavePeriod = 1;
            let idLeavePeriod = $("#formNewLeaveCreate").length == 1 ? "#LeavePeriod" : "#LeavePLReviseViewModel_RevisedLeavePeriod";
            let idModelHalfDayDay = $("#formNewLeaveCreate").length == 1 ? "#HalfDayDay" : "#LeavePLReviseViewModel_RevisedHalfDayDay";
            let idDummyHalfDayDay = $("#formNewLeaveCreate").length == 1 ? "#halfDayDay" : "#revisedHalfDayDay";

            if ($(idLeavePeriod).val())
                leavePeriod = $(idLeavePeriod).val() * 1;

            let remainder = leavePeriod % 1;

            if (remainder > 0) {
                $('#divHalfDay').show();
                if ($(idDummyHalfDayDay).val() != null && $(idDummyHalfDayDay).val() != '')
                    $(idModelHalfDayDay).val($(idDummyHalfDayDay).val());
                else {
                    $(idDummyHalfDayDay).val(null);
                }
            }
            else {
                $('#divHalfDay').hide();
                $(idDummyHalfDayDay).val("");
                $(idModelHalfDayDay).val('0');
            }
            /*
                    if (remainder > 0) {
                        $('#divHalfDay').show();
                        if ($('#revisedHalfDayDay').val() != null && $('#revisedHalfDayDay').val() != '')
                            $('#LeavePLReviseViewModel_RevisedHalfDayDay').val($('#revisedHalfDayDay').val());
                        else {
                            $('#LeavePLReviseViewModel_RevisedHalfDayDay').val(null);
                        }
                    }
                    else {
                        $('#divHalfDay').hide();
                        $("#revisedHalfDayDay").val("");
                        $('#LeavePLReviseViewModel_RevisedHalfDayDay').val('0');
                    }
        */
        }

        $(document).ready(function () {
            localLoadDataTable();
            loadHeader();
            loadOpenCloseBalances();
        });

        function localLoadDataTable() {
            $('#tbGrid').DataTable().destroy();

            $('#tbGrid tbody').empty();

            let isHRAdmin = "@(CurrentUserIdentity.ProfileActions.Any(p => p.RoleId == TCMPLApp.Domain.Models.SelfService.SelfServiceHelper.RoleAttendanceAdmin))";

            var table = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                //aaSorting: [[2, 'desc']],
                ordering: true,
                order: [[4, "desc"]],
                responsive: true,
                autoWidth: false,
                pageLength: 25,
                lengthMenu: [25, 50],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                //dom: '<"headerDetails"><"closebal">rt<"row"<"col-1"l><"col"p>><"clear">',
                layout: { topStart: null, bottomStart: 'pageLength', bottomEnd: 'paging' },
        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                    columnDefs: [
                    { orderable: false, targets: "_all" }
                ],
                    columns: [
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<button class="btn btn-outline-info btn-sm border-none" ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("LeaveDetails", "Attendance", new { Area = "SelfService" })"' +
                                ' data-modalpopupwidth="rightw35" ' +
                                ' data-applicationid="' + data.appNo + '"' +
                                ' data-modaltitle="Leave details" ' +
                                ' data-modalheader="Leave details" ' +
                                ' > ' +
                                ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                ' </button>'
                        },
                        'className': "td-icon",
                    },
                    {
                        data: "appNo",
                        width: '8.0rem',
                    },
                    {
                        data: "leaveType",
                        width: '5.0rem',
                    },
                    {
                        data: "startDate",
                        width: '10.0rem',
                        render: function (data, type, row) {
                            return moment(data).format("DD-MMM-YYYY");
                        }
                    },
                    {
                        data: "endDate",
                        width: '10.0rem',
                        render: function (data, type, row) {
                            if (data == null)
                                return '';
                            else
                                return moment(data).format("DD-MMM-YYYY");
                        }
                    },
                    { data: "dbCr" },
                    {
                        data: "leavePeriod",
                        width: '2.0rem'
                    },
                    {
                        'data': null,
                        render: function (data, type, row) {

                            if (data.medCertFileName != null) {
                                return '<a href="#" onclick="ofbfileDownload(event, this);"' +
                                    'data-url="@Url.Action("DownloadMedicalCertificateFile", "Attendance", new { Area = "SelfService" })"' +
                                    'data-keyid="' + data.appNo + '"' +
                                    'data-clientfilename="' + data.appNo + '_MedCert.pdf"' +
                                    '>MedCert ' +
                                    //'<i class="fas fa-file-download" ></i >' +
                                    '</a > ';
                            }
                            else return '';
                        },
                        'className': "td-icon",
                    },
                    {
                        data: "lead",
                        width: '15.0rem'
                    },
                    { data: "leadApprovalDesc" },
                    { data: "hodApprovalDesc" },
                    { data: "hrdApprovalDesc" },
                    {
                        'data': null,
                        render: function (data, type, row) {
                            if (data.canEditPlApp) {
                                return '<button class="btn btn-outline-primary btn-sm border-none" ' +
                                    ' data-jqueryselector="openmodal" ' +
                                    ' data-modalcontainer="modalcontainer" ' +
                                    ' data-url="@Url.Action("LeavePLRevise", "Attendance", new { Area = "SelfService" })"' +
                                    ' data-modalpopupwidth="rightw35" ' +
                                    ' data-applicationid="' + data.appNo + '"' +
                                    ' data-modaltitle="Edit Leave" ' +
                                    ' data-modalheader="Edit Leave" ' +
                                    ' > ' +
                                    ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                    ' </button>'
                            }
                            else return '';
                        },
                        'className': "td-icon",
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (isHRAdmin == "True") {
                                return ' <button class="btn btn-outline-danger btn-sm border-none "  ' +
                                    ' onclick="showDeleteConfirmationPopup(event,this);" ' +
                                    ' data-url="@Url.Action("LeaveDeletionForce", "Attendance", new { Area = "SelfService" })" ' +
                                    ' data-postsavereloaddatatable="OK" ' +
                                    ' data-applicationid="' + data.appNo + '" ' +
                                    ' data-modaltitle="Please Confirm!" ' +
                                    ' data-confirmationtext="Delete leave application ' + data.appNo + ' ?" ' +
                                    ' data-confirmationtype="warning" data-confirmbuttontext="Delete application"> ' +
                                    ' <i class="fa fa-trash" aria-hidden="true"></i> ' +
                                    ' </button> ';
                            }
                            else if (data.canDeleteApp)
                                return ' <button class="btn btn-outline-danger btn-sm border-none"  ' +
                                    ' onclick="showDeleteConfirmationPopup(event,this);" ' +
                                    ' data-url="@Url.Action("LeaveDelete", "Attendance", new { Area = "SelfService" })" ' +
                                    ' data-postsavereloaddatatable="OK" ' +
                                    ' data-applicationid="' + data.appNo + '" ' +
                                    ' data-modaltitle="Please Confirm!" ' +
                                    ' data-confirmationtext="Delete leave application ' + data.appNo + ' ?" ' +
                                    ' data-confirmationtype="warning" data-confirmbuttontext="Delete application"> ' +
                                    ' <i class="fa fa-trash" aria-hidden="true"></i> ' +
                                    ' </button> ';
                            else
                                return '';
                        },
                        'className': "td-icon",
                    }
                ],
            </text>
        }
        else
        {
            <text>
                    ordering: false,
                    columns: [
                    {
                        data: null,
                        render: function (data, type, row) {
                            var item = '<div class="card">';
                            item += '<div class="card-mobiledatatable">';

                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.ApplicationDate)' + '</dt><dd class="col-lg-8">' + moment(data.applicationDate).format('L') + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.AppNo)' + '</dt><dd class="col-lg-8">' + data.appNo + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.LeaveType)' + '</dt><dd class="col-lg-8">' + data.leaveType + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.StartDate)' + '</dt><dd class="col-lg-8">' + moment(data.startDate).format('L') + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.EndDate)' + '</dt><dd class="col-lg-8">' + moment(data.endDate).format('L') + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.LeavePeriod)' + '</dt><dd class="col-lg-8">' + data.leavePeriod + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.Lead)' + '</dt><dd class="col-lg-8">' + data.lead + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.LeadApprovalDesc)' + '</dt><dd class="col-lg-8">' + data.leadApprovalDesc + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HodApprovalDesc)' + '</dt><dd class="col-lg-8">' + data.hodApprovalDesc + '</dd></dl>';
                            item += '<dl class="row margin-bottom-0"><dt class="col-lg-4">' + '@Html.DisplayNameFor(model => model.HrdApprovalDesc)' + '</dt><dd class="col-lg-8">' + data.hrdApprovalDesc + '</dd></dl>';

                            item += '</div></div>';
                            return item
                        },
                        sortable: false,
                        searchable: false,
                        className: "datatable-td-mobile"
                    }
                ],
            </text>
        }
                ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetListsLeaveApplications", "Attendance")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    d.search = null;
                    d.genericSearch = null; // $('#FilterDataModel_GenericSearch').val();
                    d.startDate = ($('#FilterDataModel_StartDate').val());
                    d.endDate = ($('#FilterDataModel_EndDate').val());
                    d.leaveType = ($('#FilterDataModel_LeaveType').val());
                    d.empno = ($('#FilterDataModel_Empno').val());
                },
                error: function (request, status, error) {
                    notify('error', request.responseText, 'danger');
                }
            },
                success: function (data) {
                    console.log(data);
                }
                                  });

                            //dataTableSearch();

                        }

        function loadHeader() {
            $.ajax({
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetListsLeaveApplicationsHeader", "Attendance", new { Area = "SelfService" })',
                type: 'GET',
                cache: true,
                dataType: "json",
                beforeSend: function () {
                    showLoader();
                },
                data: {
                    empno: ($('#FilterDataModel_Empno').val())
                },
                success: function (data) {
                    if (data.error) {
                    }
                    else {
                        let period = data.period == null ? ' - ' : data.period;
                        var headerDetailsDiv = '';

                        headerDetailsDiv += '<div class="p-1 font-weight-bold ">';
                        headerDetailsDiv += '<span class="text-black-50">Employee name: </span><span id="empName" class="text-primary">' + data.empno + ' - ' + data.employeeName + '</span><br />';
                        headerDetailsDiv += '</div>';
                        $("div.headerDetails").html(headerDetailsDiv);

                        //$("div.openbal").text(data.openingBalance);
                        //$("div.closebal").text(data.closingBalance);
                    }
                    hideLoader();
                },
                error: function (request, status, error) {
                    notify('error', request.responseText, 'danger');
                    hideLoader();
                }
            });
        }

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');

            $("#FilterDataModel_StartDate").val(data.startDate);
            $("#FilterDataModel_EndDate").val(data.endDate);
            $("#FilterDataModel_LeaveType").val(data.leaveType);
            $("#FilterDataModel_Empno").val(data.empno);

            //console.log(data);
            $("#FilterDataModel_StartDate").val();
            $("#FilterDataModel_EndDate").val();

            localLoadDataTable();
            loadOpenCloseBalances();
            loadHeader();

            hideLoader();
        }

        function PostSaveReLoadDataTable(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                localLoadDataTable();
                loadHeader();
                loadOpenCloseBalances();
                hideLoader();
                notify('success', data.response, 'Success');
            }
        }

        Dropzone.autoDiscover = false;

        function initDropZone() {
            let formId = "#" + $("div#iddropzone2").closest("form").attr("id");
            console.log(formId);

            $("div#iddropzone2").dropzone({
                url: '@Url.Action("TrainingFileUpload", "EmployeeTraining", new { Area = "SWPVaccine" })',
                autoProcessQueue: false,
                uploadMultiple: false,
                parallelUploads: 1,
                maxFiles: 1,
                maxFilesize: 1,
                addRemoveLinks: true,
                createImageThumbnails: false,
                acceptedFiles: ".pdf",
                init: function () {
                    var myDropzone = this;

                    // First change the button to actually tell Dropzone to process the queue.
                    //this.element.querySelector("button[type=submit]").addEventListener("click", function (e) {
                    //    // Make sure that the form isn't actually being sent.
                    //    e.preventDefault();
                    //    e.stopPropagation();
                    //    myDropzone.processQueue();
                    //});

                    // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
                    // of the sending event because uploadMultiple is set to true.
                    this.on("processing", function (file) {
                        console.log($(formId).attr("action"));
                        this.options.url = $(formId).attr("action");
                    });
                    this.on("sending", function (file, xhr, formData) {

                        formData.append("file", file);
                        var data = $(formId).serializeArray();

                        $.each(data, function (key, el) {
                            formData.append(el.name, el.value);
                        });
                        showModalLoader();

                    });
                    this.on("sendingmultiple", function () {
                        // Gets triggered when the form is actually being sent.
                        // Hide the success button or the complete form.
                    });
                    this.on("successmultiple", function (files, data) {
                        console.log(data);
                        if (data.success) {
                            PostSaveReLoadDataTable(data)
                        }
                        else
                            notify("error", data.response, "File upload failed.");

                        hideModalLoader();

                        this.removeAllFiles(true);
                    });
                    this.on("success", function (files, data) {
                        console.log(data);
                        if (data.success) {
                            PostSaveReLoadDataTable(data)
                        }
                        else
                            notify("error", data.response, "File upload failed.");

                        hideModalLoader();

                        this.removeAllFiles(true);
                    });
                    this.on("errormultiple", function (files, data) {
                        notify("error", "File not uploaded + " + data.response, "Error");
                        this.removeAllFiles(true);
                        hideModalLoader();

                        // Gets triggered when there was an error sending the files.
                        // Maybe show form again, and notify user of error
                    });
                }

            });
        }

        function submitReviewLeaveForm() {
            if ($("#formNewLeaveReview").length == 0) {
                console.log("Form not found");
                return;
            }
            if ($("div#iddropzone2").length == 1) {
                oDropZone2 = Dropzone.forElement("div#iddropzone2");
                if (oDropZone2.files.length == 0) {
                    notify("error", "No files selected.", "Error")
                    return;
                }
                console.log("process queue");
                oDropZone2.processQueue();
                return;
            }
            $("#formNewLeaveReview").submit();
        }

        function loadOpenCloseBalances() {

            $.ajax({
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("LeaveGetClosingBalance", "Attendance", new { Area = "SelfService" })',
                type: 'GET',
                cache: true,
                dataType: "json",
                beforeSend: function () {
                    showLoader();
                },
                data: {
                    empno: ($('#FilterDataModel_Empno').val())
                },
                success: function (data) {
                    if (data.error) {
                    }
                    else {

                        var vCPTable = "";
                        vCPTable += '<div class="col-sm-12 p-0 m-0">';
                        vCPTable += '<div class="card"> ';

                        vCPTable += '<div class="card-body"> <div class="row"> ';

                        vCPTable += '<div class="col-6 col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2 mt-2"> <div class="card card-tile m-0"> <div class="card-block border  rounded-sm  theme-light-cyan" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300"> Casual </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.ccl + ' </h4> </div> </div> </div> </div>    ';

                        vCPTable += ' <div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2"><div class="card card-tile m-0">';

                        vCPTable += '<div class="card-block  border  rounded-sm  theme-light-orange" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300"> Sick </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.csl + ' </h4> </div> </div> </div> </div> ';
                        vCPTable += '<div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2"> <div class="card card-tile m-0"> <div class="card-block border  rounded-sm  theme-light-green" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300">  Privilege </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.cpl + ' </h4> </div> </div> </div> </div>    ';
                        vCPTable += '<div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2"> <div class="card card-tile m-0"> <div class="card-block border  rounded-sm  theme-light-yellow" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300">  Excess </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.cex + ' </h4> </div> </div> </div> </div>    ';
                        vCPTable += '<div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2"> <div class="card card-tile m-0"> <div class="card-block border  rounded-sm  theme-light-blue" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300"> Comp. Off   </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.cco + ' </h4> </div> </div> </div> </div>    ';
                        vCPTable += '<div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2"> <div class="card card-tile m-0"> <div class="card-block border  rounded-sm  theme-light-grey" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300"> Optional </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.cho + ' </h4> </div> </div> </div> </div> ';
                        vCPTable += '<div class=" col-6 col-md-3 col-sm-4 col-lg-2 col-xl-1 mt-2"> <div class="card card-tile m-0"> <div class="card-block border  rounded-sm  theme-light-purple" style=" padding: 5px 10px 5px 10px;"> ';
                        vCPTable += '<div class="col m-0 p-0"> <h6 class="mb-2 f-w-300"> Leave </h6> <h4 class="text-muted mb-0 text-right font-weight-bold" style=" margin-top: 20px;">' + data.clv + ' </h4> </div> </div> </div> </div>   ';

                        vCPTable += '</div>';
                        // $("div.openbal").append(vOPTable);
                        $("div.closebal").html(vCPTable);

                    }
                    hideLoader();
                },
                error: function (request, status, error) {
                    notify('error', request.responseText, 'danger');
                    hideLoader();
                }
            });
        }
    </script>
}