@model TCMPLApp.WebApp.Models.JobmasterViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@{
    ViewData["Title"] = "Job Approval CMD";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="JOB">Job form</a></li>
        <li class="breadcrumb-item active" aria-current="page">Jobs Approval CMD</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link href="~/lib/dropzone/dropzone.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/lib/dropzone/basic.css" rel="stylesheet" asp-append-version="true" />
}

@Html.HiddenFor(m => m.FilterDataModel.IsActive)

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Jobs Approval CMD List</p>
    </div>
    @*<div class="card-toolbar">
    <div role="toolbar">
    <button id="filterGet" type="button" class="btn btn-secondary btn-sm border-white"
    data-jqueryselector="openmodal"
    data-modalcontainer="modalcontainer"
    data-modalpopupwidth="rightw35"
    data-url='@Url.Action("FilterGet", "JOB", new { Area = "JOB" })'
    data-modaltitle="Filters - Jobs"
    data-modalheader="Filters - Jobs">
    <i class="fas fa-filter"></i>&nbsp;Filters
    @Html.Raw(localizer["Active : "]) @Html.Raw(Model.FilterDataModel.IsActive?.ToString() == "0" ? "No" : "Yes")
    </button>
    <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
    data-actionid="Index"
    data-url='@Url.Action("ResetFilter", "JOB", new { Area = "JOB" })'
    href="#"
    onclick="resetFilter(event, this);"
    style="display: none;">
    <i class="fas fa-filter"></i> Reset
    </a>
    </div>
    </div>*@
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th rowspan="2">&nbsp;</th>
                    <th rowspan="2" class="text-center">@Html.DisplayNameFor(model => model.Projno)</th>
                    <th rowspan="2" class="text-center">@Html.DisplayNameFor(model => model.ShortDesc)</th>
                    <th rowspan="2" class="text-center">@Html.DisplayNameFor(model => model.Pmempno)</th>
                    <th rowspan="2" class="text-center">@Html.DisplayNameFor(model => model.Revision)</th>
                    <th colspan="2" class="text-center">Closing date</th>
                </tr>
                <tr>
                    <th class="text-center">Revised</th>
                    <th class="text-center">Actual</th>
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>
@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/lib/moment.js/moment.js" asp-append-version="true"></script>

    <script>
        function localScript() {
            initSelect2();
        };

        $(document).ready(function () {
            //if ($('#IsActive').val() ==  '') {
            //    $("#filterGet").click();
            //}
            loadJobsDataTable();
        });

        function loadJobsDataTable() {
            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                order: [[1, "asc"]],
                sort: false,
                responsive: true,
                autoWidth: false,
                pageLength: 25,
                lengthMenu: [25, 50, 100, 200],
                processing: true,
                serverSide: true,
                stateSave: true,
                info: false,
                filter: false,
                layout: {topStart: null,bottomStart: 'pageLength',bottomEnd: 'paging'},
                'columnDefs': [
                    { orderable: false, targets: 0 }
                ],
        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                    columns:
                    [
                        {
                            'data': null,
                            render: function (data, type, row) {
                                return '<a class="btn btn-sm-icon" href="@Url.Action("ApprovalCMDDetail", "JOB", new { Area = "JOB"})/' + data.projno + '" title="ApprovalCMDDetail"><i class="far fa-eye"></i></a>';
                            },
                            'className': "td-icon",
                        },
                        { 'data': "projno", 'className': "text-center" },
                        {
                            'data': "shortDesc",
                            'render': function (data, type, row) {
                                if (row.isActive == 0) {
                                    return "<span class='text-c-brown'>" + data + "</span>";
                                } else {
                                    return data;
                                }
                            }
                        },
                        { 'data': "pmempno" },
                        { 'data': "revision", 'className': "text-center" },
                        {
                            'data': "revclosedate",
                            'render': function (data) {
                                if (data != null) {
                                    return moment(data).format('DD-MMM-YYYY');
                                }
                                return null;
                            },
                            'className': "text-center"
                        },
                        {
                            'data': "actualclosedate",
                            'render': function (data) {
                                if (data != null) {
                                    return moment(data).format('DD-MMM-YYYY');
                                }
                                return null;
                            },
                            'className': "text-center"
                        }
                    ],
            </text>
        }
                ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetPendApprovalCMDList", "JOB")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    d.search = null;
                    d.genericSearch = $('#GenericSearch').val();
                    d.isActive = ($('#FilterDataModel_IsActive').val());
                },
                error: function (request, status, error) {
                    notify('error', request.responseText, 'danger');
                }
            }
                                            });
                                        };

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

        $('#buttonSearch').on('click', function () {
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');
            console.log(data);
            $("#FilterDataModel_IsActive").val(data.isActive);
            loadJobsDataTable();
            hideLoader();
        }

    </script>
}