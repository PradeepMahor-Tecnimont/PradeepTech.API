@model TCMPLApp.WebApp.Models.EmployeeTimesheetViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    ViewData["Title"] = "Employee Timesheet Report";
}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="Timesheet">Timesheet</a></li>
        <li class="breadcrumb-item active" aria-current="page">Employee Timesheet Report</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <style>

        table {
            border-collapse: collapse;
            width: 100%;
        }

        table, th, td {
            border: 1px solid black;
            
        }

        th, td {
            padding: 6px;
        }

        .weekend {
            background-color: lightgray;
        }

        #timesheetTable {
            overflow-y: auto;
            overflow-x: auto;
        }

    </style>
}

<div style="display:none">
    <input id="Yyyymm" name="Yyyymm" type="hidden" value="@Model.FilterDataModel.Yyyymm" />
    <input id="Yyyy" name="Yyyy" type="hidden" value="@Model.FilterDataModel.Yyyy" />
    <input id="Costcode" name="Costcode" type="hidden" value="@ViewBag.DefaultCostcode" />
</div>

<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2">
    <div class="card">
        <div class="card-header">
            <h5>@localizer["Employee Reports"]</h5>
        </div>

        <div class="card-toolbar">
            <button id="filterGet" type="button" class="btn btn-secondary btn-sm border-white"
                    data-jqueryselector="openmodal"
                    data-modalcontainer="modalcontainer"
                    data-modalpopupwidth="rightw35"
                    data-url='@Url.Action("FilterGet", "Home", new { Area = "Timesheet" })'
                    data-actionName="EmployeeReportIndex"
                    data-controllerName="Reports"
                    data-modaltitle="Filter"
                    data-modalheader="Filter">
                <i class="fas fa-filter"></i>&nbsp;Filter ::

                @if (!string.IsNullOrEmpty(Model.FilterDataModel.Yyyy))
                {
                    @Html.Raw(localizer["Year : "] + Model.FilterDataModel.Yyyy)
                    ;
                }
                @if (!string.IsNullOrEmpty(Model.FilterDataModel.Yyyymm))
                {
                    @Html.Raw(localizer[", Year month : "] + (Model.FilterDataModel.Yyyymm.Substring(4, 2) == "01" ? "Jan " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "02" ? "Feb " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "03" ? "Mar " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "04" ? "Apr " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "05" ? "May " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "06" ? "Jun " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "07" ? "Jul " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "08" ? "Aug " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "09" ? "Sep " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "10" ? "Oct " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "11" ? "Nov " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
                             : "Dec " + Model.FilterDataModel.Yyyymm.Substring(0, 4)))
                    ;
                }
            </button>
        </div>

        <div class="m-2"></div>

        <div class="d-flex">
            <div class="col-xl-4 col-md-4 col-sm-6">
                <div class="form-group">
                    <label for="selCostcode" class="control-label f-w-700">Costcode</label>
                    <select id="selCostcode" class="form-control chosen-select" data-placeholder=" Please select costcode..." asp-items="ViewBag.Costcodes" required>
                    </select>
                </div>
            </div>

        </div>

        <div class="input-group pt-1 pl-1 pr-1 ">
            <div class="input-group pt-1 pl-1 pr-1 ">
                <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
                <div class="input-group-append">
                    <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
                </div>
            </div>
        </div>

        <div class="vertical-space-10"></div>

        <table id="tbEmployeeTimesheetGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.EmployeeName)</th>
                    <th>@Html.DisplayNameFor(model => model.AssignName)</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/site-timesheet.js" asp-append-version="true"></script>
    <script src="~/js/TimesheetDetails.js" asp-append-version="true"></script>
    <script src="~/js/EmpTimesheet.js" asp-append-version="true"></script>
    <script>

        $(document).ready(function () {
            if ($('#Yyyy').val() == null || $('#Yyyy').val() == '' ||
                $('#Yyyymm').val() == null || $('#Yyyymm').val() == '') {
                $("#filterGet").click();
            }
            else {
                localScript();
                loadEmployeeDataTable();
            }
        });

        function localScript() {
            initSelect2();

            var cancelButtonRedirectUrl = "@Url.Action("RedirectPage", "Home", new
            {
                Area = "Timesheet",
                actionName = "EmployeeReportIndex",
                controllerName = "Reports"
            })";

            callCancelButtonListeners(cancelButtonRedirectUrl);

            var timesheetUrl = '@Url.Action("GetTimesheetData", "Reports", new { Area = "Timesheet" })';

            const selectedmonth = $('#Yyyymm').val().slice(-2);
            const selectedyear = $('#Yyyymm').val().slice(0, 4);

            const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            const monthName = monthNames[parseInt(selectedmonth, 10) - 1];

            let monthyear = monthName + "-" + selectedyear;

            $('#monthYear').text(monthyear);

            var empno = $('#Empno').val();

            var selectedValueOnLoad = $('#Assign').val();

            if (selectedValueOnLoad) {
                $('#timesheetdetails').removeClass("hidden");
                $('#timesheetTable').removeClass("hidden");
                loadDataBasedOnDepartment(selectedValueOnLoad, monthyear, timesheetUrl, empno);
            }

            $('#AssignCostcode').change(function () {
                var selectedValueOnChange = $('#AssignCostcode').val();

                if (selectedValueOnChange != "") {
                    $('#timesheetdetails').removeClass("hidden");
                    $('#timesheetTable').removeClass("hidden");
                    loadDataBasedOnDepartment(selectedValueOnChange, monthyear, timesheetUrl, empno);
                }
                else {
                    notify('error', "Please select Assigned cost code", 'danger');
                    $('#timesheetdetails').addClass("hidden");
                    $('#timesheetTable').addClass("hidden");
                }

            });
            
        }

        let vVUloadEmployeeList = "@Url.Action("GetListsEmployees", "Reports")";

        function loadEmployeeDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbEmployeeTimesheetGrid",
                pColumns: datatableColumns,
                pUrl: vVUloadEmployeeList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    costcode: $('#Costcode').val()
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };
        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                    {
                        data: null,
                        render: function (data, type, row) {
                            return data.empno + " - " + data.employeeName
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return data.assign + " - " + data.assignName
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return '<button class="btn btn-outline-primary btn-sm border-none  " ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("EmployeeTimesheet", "Reports", new { Area = "Timesheet" })"' +
                                ' data-modalpopupwidth="rightw75" ' +
                                ' data-id="' + data.empno + '"' +
                                ' data-assign="' + data.assign + '"' +
                                ' data-modaltitle="Employee Timesheet" ' +
                                ' data-modalheader="Employee Timesheet" ' +
                                ' > ' +
                                ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                ' </button>'
                        },
                        'className': "td-icon",
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            var tempEmp = "'" + data.empno + "'";
                            var yymm = '@Model.FilterDataModel.Yyyymm';
                            var tempUrl = '';

                            tempUrl = tempUrl + '<button class="btn btn-outline-primary btn-sm border-none" title="Download"' +
                                'data-inprogress="0" data-jqueryselector="generatereport" href="#" ' +
                                'onclick="downloadTimesheet(' + tempEmp + ',' + yymm + ')" title="Download Timesheet"><i class="fas fa-download" aria-hidden="true"></i></button>';
                            return tempUrl;

                        },
                        'className': "td-icon"
                    }

                ];

            </text>
        }

            $("#selCostcode").change(function (e) {
                var cc = $('#selCostcode').val();
                if(cc)
                {
                    $('#Costcode').val(cc);   
                }
                else
                {
                    $('#Costcode').val("NA");
                }
                loadEmployeeDataTable();
            });

        function PostSaveReLoad(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                window.location.reload();
            }
        }

        function downloadTimesheet(pEmpno, pyymm) {
            $.ajax({
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("DownloadTimesheetReport", "Reports", new { Area = "Timesheet" })',
                type: 'GET',
                beforeSend: function () {
                    showLoader();
                },
                data: {
                    empno: pEmpno,
                    yymm: pyymm
                },
                success: function (data) {
                    if (data.success != false) {
                        notify('success', "File downloaded successfully.", 'success');
                        window.location.href = "@Url.Action("DownloadTimesheetReport", "Reports")?Area=Timesheet&empno=" + pEmpno + "&yymm=" + pyymm;
                    } else {
                        notify('error', data.response, 'danger');
                    }
                    hideLoader();
                },
                error: function (result) {
                    hideLoader();
                    showError(result);
                }
            });
        }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadEmployeeDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadEmployeeDataTable();
            }
        });
    </script>
}
