@model TCMPLApp.WebApp.Models.BGMasterDataTableListViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()



@section styles
{
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" asp-append-version="true" />
}

    @{
    ViewData["Title"] = "Bank guarantee";
}

@section BreadCrumbs
    {
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="BG">BG</a></li>
        <li class="breadcrumb-item active" aria-current="page">Bank guarantees</li>
    </ol>
}

    <div style="display:none">
        <input type="hidden" asp-for="@Model.FilterDataModel.Projno" />
        <input type="hidden" asp-for="@Model.FilterDataModel.BgType" />
        <input readonly type="datetime" asp-for="@Model.FilterDataModel.BgFromDate" />
        <input readonly type="datetime" asp-for="@Model.FilterDataModel.BgToDate" />
        <input readonly type="datetime" asp-for="@Model.FilterDataModel.BgValFromDate" />
        <input readonly type="datetime" asp-for="@Model.FilterDataModel.BgValToDate" />
        <input readonly type="datetime" asp-for="@Model.FilterDataModel.BgClaimFromDate" />
        <input readonly type="datetime" asp-for="@Model.FilterDataModel.BgClaimToDate" />
    </div>

    <div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2">
        <div class="app-h4 app-card-header mb-2">
            <p>Bank guarantee</p>
        </div>
        <div class="card-toolbar">
            <div role="toolbar">
                <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
                    data-jqueryselector="openmodal"
                    data-modalcontainer="modalcontainer"
                    data-modalpopupwidth="rightw35"
                    data-url='@Url.Action("FilterGet", "BGAction", new { Area = "BG" })'
                    data-modaltitle="Filters - Bank guarantee"
                    data-modalheader="Filters - Bank guarantee">
                    <i class="fas fa-filter"></i>&nbsp;Filters
                </a>
                <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
                    data-actionid="BankGuaranteeActionIndex"
                    data-url='@Url.Action("ResetFilter", "BGAction", new { Area = "BG" })'
                    href="#"
                    onclick="resetFilter(event, this);"
                    style="display: none;">
                    <i class="fas fa-filter"></i> Reset
                </a>
            @*
                <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
                    href="LetterOfCredit/ExcelDownload">
                    <i class="fas fa-file-excel green-color"></i>&nbsp;Export
                </a>
            *@
            </div>
        </div>
        <div class="m-1"></div>
        <div class="bg-gray-active rounded ">
            <div class="input-group pt-1 pl-1 pr-1 ">
                <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
                <div class="input-group-append">
                    <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
                </div>
            </div>
            <table id="tbGrid" class="table table-striped table-bordered table-responsive ">
                <thead class="bg-info text-white">
                    <tr role="row">
                        <th></th>
                        <th>@Html.DisplayNameFor(model => model.Bgnum)</th>
                        <th>@Html.DisplayNameFor(model => model.Bgdate)</th>
                        <th>@Html.DisplayNameFor(model => model.Companyname)</th>
                        <th>@Html.DisplayNameFor(model => model.Bgtype)</th>
                        <th>@Html.DisplayNameFor(model => model.Projnum)</th>
                        <th>@Html.DisplayNameFor(model => model.Projname)</th>
                        <th>@Html.DisplayNameFor(model => model.Ponum)</th>
                        <th>@Html.DisplayNameFor(model => model.Issuebyname)</th>
                        <th>@Html.DisplayNameFor(model => model.Issuetoname)</th>
                        <th>@Html.DisplayNameFor(model => model.Bgvaldt)</th>
                        <th>@Html.DisplayNameFor(model => model.Bgclmdt)</th>
                        <th>@Html.DisplayNameFor(model => model.Bankname)</th>
                        <th>@Html.DisplayNameFor(model => model.Status)</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

    @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        var dataTable;

        $(document).ready(function () {
            localLoadDataTable();
        });

        function localScript() {
            initFilter();
        }

        function initFilter() {
            //BG dates
            $('#bgFromDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $('#bgToDateFilter').bootstrapMaterialDatePicker('setMinDate', date);

                $("#BgFromDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#bgToDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#BgToDate").val(date.format('DD-MMM-YYYY'));
            });

            if ($('#BgFromDate').val()) {
                $('#bgFromDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#BgFromDate").val()));
            }
            if ($('#BgToDate').val())
                $('#bgToDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#BgToDate").val()));

            //BG validity dates
            $('#bgValFromDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $('#bgValToDateFilter').bootstrapMaterialDatePicker('setMinDate', date);

                $("#BgValFromDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#bgValToDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#BgValToDate").val(date.format('DD-MMM-YYYY'));
            });

            if ($('#BgValFromDate').val()) {
                $('#bgValFromDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#BgValFromDate").val()));
            }
            if ($('#BgValToDate').val())
                $('#bgValToDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#BgValToDate").val()));

            //BG claim dates
            $('#bgClaimFromDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $('#bgClaimToDateFilter').bootstrapMaterialDatePicker('setMinDate', date);

                $("#BgClaimFromDate").val(date.format('DD-MMM-YYYY'));

            });

            $('#bgClaimToDateFilter').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false
            }).on('change', function (e, date) {
                $("#BgClaimToDate").val(date.format('DD-MMM-YYYY'));
            });

            if ($('#BgClaimFromDate').val()) {
                $('#bgClaimFromDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#BgClaimFromDate").val()));
            }
            if ($('#BgClaimToDate').val())
                $('#bgClaimToDateFilter').bootstrapMaterialDatePicker('setDate', new Date($("#BgClaimToDate").val()));

        }

        function localLoadDataTable() {

            dataTable = $('#tbGrid').DataTable({
                drawCallback: function (settings) {
                    loadScript();
                },
                destroy: true,
                order: [[1, "asc"]],
                responsive: true,
                autoWidth: false,
                pageLength: 25,
                lengthMenu: [25, 50, 100, 200],
                processing: true,
                serverSide: true,
                stateSave: false,
                info: false,
                filter: false,
                dom: '<"headerDetails">rt<"row"<"col-1"l><"col"p>><"clear">',
                'columnDefs': [
                    { sortable: false, targets: [0, 10] }
                ],
            @if ((bool)@Context.Items["isMobile"] == false)
            {
                <text>
                        ordering: false,
                        columns: [
                        {
                            data: null,
                            render: function (data, type, row) {

                            return '<a class="btn btn-outline-info btn-sm border-none" href="@Url.Action("Detail", "BGAction", new { Area = "BG"})/?id=' + data.refnum + '" title="Detail"><i class="far fa-eye"></i></a>';
                            },
                            className: "td-icon",
                        },
                        { data: "bgnum" },
                        {
                            'data': "bgdate",
                            'render': function (data) {
                                return moment(data).format('DD-MMM-YYYY');
                            }
                        },
                        { data: "companyname" },
                        { data: "bgtype" },
                        { data: "projnum" },
                        { data: "projname" },
                        { data: "ponum" },
                        { data: "issuebyname" },
                        { data: "issuetoname" },
                        {
                            'data': "bgvaldt",
                            'render': function (data) {
                                return moment(data).format('DD-MMM-YYYY');
                            }
                        },
                        {
                            'data': "bgclmdt",
                            'render': function (data) {
                                return moment(data).format('DD-MMM-YYYY');
                            }
                        },
                        { data: "bankname" },
                        { data: "status" }
                    ],
                </text>
            }
            else
            {
                <text>
                        ordering: false,
                        columns: [
                        {
                            data: null,
                            render: function (data, type, row) {
                                var item = '<div class="card">';
                                item += '<div class="card-mobiledatatable">';

                                item += '</div></div>';
                                return item
                            },
                            sortable: false,
                            searchable: false,
                            className: "datatable-td-mobile"
                        }
                    ],
                </text>
            }
            ajax: {
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
            url: '@Url.Action("GetListsBGMaster", "BGAction")',
            type: 'GET',
            cache: true,
            dataType: "json",
            data: function (d) {
                d.columns = null;
                d.order = null;
                d.search = null;
                d.genericSearch = $('#GenericSearch').val();
                d.projno = $('#FilterDataModel_Projno').val();
                d.bgType = $('#FilterDataModel_BgType').val();
                d.bgFromDate = $('#FilterDataModel_BgFromDate').val();
                d.bgToDate = $('#FilterDataModel_BgToDate').val();
                d.bgValFromDate = $('#FilterDataModel_BgValFromDate').val();
                d.bgValToDate = $('#FilterDataModel_BgValToDate').val();
                d.bgClaimFromDate = $('#FilterDataModel_BgClaimFromDate').val();
                d.bgClaimToDate = $('#FilterDataModel_BgClaimToDate').val();
            },
            error: function (request, status, error) {
                notify('error', request.responseText, 'danger');
            }
        }
            });
        }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

        $('#buttonSearch').on('click', function () {
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

        function PostFilterReLoadDataTable(data) {
            $("#modalcontainer").modal('hide');

            $('#FilterDataModel_Projno').val(data.projno);
            $('#FilterDataModel_BgType').val(data.bgType);
            $('#FilterDataModel_BgFromDate').val(data.bgFromDate);
            $('#FilterDataModel_BgToDate').val(data.bgToDate);
            $('#FilterDataModel_BgValFromDate').val(data.bgValFromDate);
            $('#FilterDataModel_BgValToDate').val(data.bgValToDate);
            $('#FilterDataModel_BgClaimFromDate').val(data.bgClaimFromDate);
            $('#FilterDataModel_BgClaimToDate').val(data.bgClaimToDate);

            localLoadDataTable();

            hideLoader();
        }

        function PostSaveReLoadDataTable(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                localLoadDataTable();
                hideLoader();
                notify('success', data.response, 'Success');
            }
        }
    </script>
}