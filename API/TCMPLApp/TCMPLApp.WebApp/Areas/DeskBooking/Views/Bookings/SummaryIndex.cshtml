@model TCMPLApp.WebApp.Models.SummaryViewModel

@{
    ViewData["Title"] = "Summary";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="DeskBooking">Desk Booking</a></li>
        <li class="breadcrumb-item active">Summary</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}
@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.Office" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.AreaId" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.OfficeLocationCode" />

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Summary</p>
    </div>
    <div class="d-flex flex-row">

        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("SummaryFilterGet", "Bookings", new { Area = "DeskBooking" })'
           data-modaltitle="Filters -  Summary"
           data-modalheader="Filters - Summary">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="SummaryIndex"
           data-url='@Url.Action("ResetFilter", "Bookings", new { Area = "DeskBooking" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbSummary" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.BaseOfficeLocation)</th>
                    <th>@Html.DisplayNameFor(model => model.OfficeCode)</th>
                    <th>@Html.DisplayNameFor(model => model.AreaId)</th>
                    <th>@Html.DisplayNameFor(model => model.Department)</th>
                    <th>@Html.DisplayNameFor(model => model.EmpCount)</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>
@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            loadSummaryDataTable();
        });

        function localScript() {
            initSelect2();
        }

        let vVUloadSummaryList = "@Url.Action("GetListsSummary", "Bookings")";

        function loadSummaryDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbSummary",
                pColumns: datatableSummaryColumns,
                pUrl: vVUloadSummaryList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    areaId: $('#FilterDataModel_AreaId').val() ? $('#FilterDataModel_AreaId').val() : null,
                    office: $('#FilterDataModel_Office').val() ? $('#FilterDataModel_Office').val() : null,
                    officeLocationCode: $('#FilterDataModel_OfficeLocationCode').val() ? $('#FilterDataModel_OfficeLocationCode').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                let datatableSummaryColumns = [
                    { data: "baseOfficeLocation" },
                    { data: "officeCode" },
                    { data: "areaDesc" },
                    {
                        data: null,
                        render: function (data, type, row) {
                                return data.costcode + " - " + data.department

                        },
                    },
                    { data: "empCount" },

                ];
            </text>
        }
            function PostSave(data) {
                if (data.success) {
                    $("#modalcontainer").modal('hide');
                    hideLoader();
                    loadSummaryDataTable();
                    notify('success', data.response, 'Success');
                }
            }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadSummaryDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadSummaryDataTable();
            }
        });

        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');
            $("#FilterDataModel_AreaId").val(data.areaId);
            $("#FilterDataModel_Office").val(data.office);
            $("#FilterDataModel_OfficeLocationCode").val(data.officeLocationCode);
            loadSummaryDataTable();
            hideLoader();
        }
    </script>
}