@model TCMPLApp.WebApp.Models.DeskAreaUserMapHodViewModel
@{
    ViewData["Title"] = "Hod : Employee - Desk area mapping";
}

@Html.AntiForgeryToken()

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home" asp-area="DeskBooking">Desk Booking</a></li>
        <li class="breadcrumb-item active" aria-current="page">Hod : Employee - Desk area mapping</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}
@Html.HiddenFor(m => m.FilterDataModel.IsActive)
<input readonly type="hidden" asp-for="@Model.FilterDataModel.AreaId" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.CostCode" />
<input readonly type="hidden" asp-for="@Model.FilterDataModel.OfficeLocationCode" />

<form class="form-filter-datetime"
      id="formDeskAreaUserMapFilterSet"
      asp-area="DeskBooking"
      asp-controller="Bookings"
      asp-action="DeskAreaUserMapHodFilterSet"
      data-ajax="true"
      data-ajax-method="post"
      data-ajax-update="#modal-content"
      data-ajax-begin="onBegin(null)"
      data-ajax-complete="onComplete(null);"
      data-ajax-success="PostFilterReLoadDataTable(data);"
      data-ajax-failure="onError"
      accept-charset="UTF-8">

    <input type="hidden" id="OfficeLocationCode" name="OfficeLocationCode" />
</form>

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Hod : Employee - Desk area mapping</p>
    </div>
    @if (!string.IsNullOrEmpty(Model.FilterDataModel.CostCode)
  || !string.IsNullOrEmpty(Model.FilterDataModel.BookingDate)
  || !string.IsNullOrEmpty(Model.FilterDataModel.AreaId)
  || !string.IsNullOrEmpty(Model.FilterDataModel.OfficeLocationCode)
  )
    {
        <div class="d-flex flex-row p-1">
            <span id="filterGet ">
                <i class="fas fa-filter"></i>&nbsp;Filter applied  ::

                @if (!string.IsNullOrEmpty(Model.FilterDataModel.OfficeLocationCode))
                {
                    if (Model.FilterDataModel.OfficeLocationCode == "01")
                    {
                        @Html.Raw("Office Location : ") <b>Malad</b>
                        ;
                    }
                    else if (Model.FilterDataModel.OfficeLocationCode == "02")
                    {
                        @Html.Raw("Office Location : ") <b>Airoli</b>
                        ;
                    }
                    else if (Model.FilterDataModel.OfficeLocationCode == "03")
                    {
                        @Html.Raw("Office Location : ") <b>Delhi</b>
                        ;
                    }
                    else
                    {
                        @Html.Raw("Office Location : ") <b>Other</b>
                        ;
                    }
                }
                @if (!string.IsNullOrEmpty(Model.FilterDataModel.CostCode))
                {
                    @Html.Raw(", Department : " + (Model.FilterDataModel.CostCode))
                    ;
                }
                @if (!string.IsNullOrEmpty(Model.FilterDataModel.AreaId))
                {
                    @Html.Raw(", AreaId : " + (Model.FilterDataModel.AreaId))
                    ;
                }
            </span>
        </div>
        <hr />
    }
    <div class="d-flex flex-row">
        @* @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.DMS.DMSHelper.ActionITAdm))
            { *@

        @* <a title="New Hod : Employee - Desk area mapping" class="btn btn-outline-primary btn-sm border border-white" href="#"
            data-jqueryselector="openmodal"
            data-modalcontainer="modalcontainer"
            data-modalpopupwidth="rightw35"
            data-url='@Url.Action("DeskAreaUserMapHodCreate", "Bookings", new { Area = "DeskBooking" })'
            data-statichtmlsourcedivid=""
            data-modaltitle="New Desk Area User Map"
            data-modalheader="New Desk Area User Map">
            <i class="fas fa-plus"></i> Create
            </a> *@
        @* } *@
        <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
           data-jqueryselector="openmodal"
           data-modalcontainer="modalcontainer"
           data-modalpopupwidth="rightw35"
           data-url='@Url.Action("DeskAreaUserMapHodFilterGet", "Bookings", new { Area = "DeskBooking" })'
           data-modaltitle="Filters - Desk Area User Mapping"
           data-modalheader="Filters - Desk Area User Mapping">
            <i class="fas fa-filter"></i>&nbsp;Filters
        </a>
        <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
           data-actionid="DeskAreaUserMapHodIndex"
           data-url='@Url.Action("ResetFilter", "Bookings", new { Area = "DeskBooking" })'
           href="#"
           onclick="resetFilter(event, this);"
           style="display: none;">
            <i class="fas fa-filter"></i> Reset
        </a>
        <button class="btn btn-outline-primary btn-sm  border-white" id="t" onclick="OfficeSetofficeFilter('02')">Airoli Office</button>
        <button class="btn btn-outline-primary btn-sm border-white " id="t" onclick="OfficeSetofficeFilter('01')">Malad Office</button>
        <button class="btn btn-outline-primary btn-sm border-white " id="t" onclick="OfficeSetofficeFilter('03')">Delhi Office</button>
        <a style="float:right" class="btn btn-outline-success btn-sm border border-white mx-2 ml-auto"
           href="#"
           data-jqueryselector="binarydownload"
           data-url="@(Url.Action("DeskAreaUserMapHodExcelDownload", "Bookings", new { Area = "DeskBooking" }))">
            <i class="fas fa-file-excel green-color"></i>&nbsp;Export
        </a>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>

        <table id="tbDeskAreaUserMapHod" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>&nbsp;</th>
                    <th>@Html.DisplayNameFor(model => model.EmpName)</th>
                    <th>@Html.DisplayNameFor(model => model.DeptName)</th>
                    <th>@Html.DisplayNameFor(model => model.OfficeLocation)</th>
                    <th>@Html.DisplayNameFor(model => model.AreaId)</th>
                    <th>&nbsp;</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
        </table>

        <div id="result"></div>
    </div>
</div>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {

            loadDeskAreaUserMapHodDataTable();

        });

        function localScript() {
            initSelect2();
            initDatePicker();
            DepartmentChange();
            EmployeeChange();
            OfficeChange();
            var vEmployee = $("#formDeskAreaUserMapHodEdit input[id=Employee]").val();
            var vOfficeCode = $("#formDeskAreaUserMapHodEdit input[id=OfficeCode]").val();

            if (vEmployee) {
                var employee = vEmployee;
                if (employee == null || employee === '') {
                    $('#OfficeCode').empty();
                    $('#AreaId').empty();
                    $('#BaseOfficeLocation').text('');
                    $('#bTags').text('');
                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetOfficeListForHod", "Bookings", new { Area = "DeskBooking" })",
                        type: 'GET',
                        data: {
                            employee: employee,
                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {

                            $("#BaseOffice").val(data.baseOfficeLocation);

                            let dropdown = $('#OfficeCode');
                            dropdown.empty();
                            $('#OfficeCode').empty();
                            $('#AreaId').empty();
                            var flag = false;
                            var office = null;
                            var options = '';
                            var tagsList = '';
                            var count = 0;
                            options += '<option> </option>';
                            $('#BaseOfficeLocation').text(data.baseOfficeLocation);

                            $(data.officeList).each(function () {
                                if (count === 0) {
                                    if (vOfficeCode == '') {
                                        office = this.dataValueField;
                                        $("#formDeskAreaUserMapHodEdit input[id=OfficeCode]").val(office);
                                    } else {

                                        office = vOfficeCode;
                                    }

                                    count = 1
                                    flag = true;
                                    options += '<option  selected="selected" value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                                }

                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';

                            });
                            dropdown.html(options);

                            if (flag == false) {
                                office = null;
                            }
                            $(data.tagList).each(function () {
                                tagsList = this.dataTextField + ' ,' + tagsList;
                            });

                            if (tagsList != '') {
                                tagsList = tagsList.replace(/,*$/, '');

                                $('#bTags').text(tagsList);
                            } else {

                                $('#bTags').text('NA');
                            }

                            dropdown.val(office);
                            dropdown.trigger("change");
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            showError(result);
                        }
                    });
                }
            }
        }

        function DepartmentChange() {

            $('#Department').change(function () {

                var department = $(this).val();
                if (department == null || department === '') {
                    $('#Employee').empty();
                    $('#OfficeCode').empty();
                    $('#AreaId').empty();
                    $('#BaseOfficeLocation').text('');

                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetEmployeeList", "Bookings", new { Area = "DeskBooking" })",
                        type: 'GET',
                        data: {
                            costcode: department,
                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {
                            let dropdown = $('#Employee');
                            dropdown.empty();
                            $('#Employee').empty();
                            $('#OfficeCode').empty();
                            $('#AreaId').empty();
                            var flag = false;
                            var phase = null;
                            var options = '';
                            options += '<option> </option>';
                            $(data).each(function () {
                                flag = true;
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            });
                            dropdown.html(options);

                            if (flag == false) {
                                phase = null;
                            }

                            dropdown.val(phase);
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            showError(result);
                        }
                    });
                }
            });
        }

        function EmployeeChange() {

            $('#Employee').change(function () {

                var employee = $(this).val();
                if (employee == null || employee === '') {
                    $('#OfficeCode').empty();
                    $('#AreaId').empty();
                    $('#BaseOfficeLocation').text('');
                    $('#bTags').text('');
                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetOfficeListForHod", "Bookings", new { Area = "DeskBooking" })",
                        type: 'GET',
                        data: {
                            employee: employee,
                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {

                            $("#BaseOffice").val(data.baseOfficeLocation);

                            let dropdown = $('#OfficeCode');
                            dropdown.empty();
                            $('#OfficeCode').empty();
                            $('#AreaId').empty();
                            var flag = false;
                            var office = null;
                            var options = '';
                            var tagsList = '';
                            var count = 0;
                            options += '<option> </option>';
                            $('#BaseOfficeLocation').text(data.baseOfficeLocation);

                            $(data.officeList).each(function () {
                                if (count === 0) {
                                    office = this.dataValueField;
                                    count = 1
                                    flag = true;
                                }

                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';

                            });
                            dropdown.html(options);

                            if (flag == false) {
                                office = null;
                            }
                            $(data.tagList).each(function () {
                                tagsList = this.dataTextField + ' ,' + tagsList;
                            });

                            if (tagsList != '') {
                                tagsList = tagsList.replace(/,*$/, '');

                                $('#bTags').text(tagsList);
                            } else {

                                $('#bTags').text('NA');
                            }
                            dropdown.val(office);
                            dropdown.trigger("change");
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            showError(result);
                        }
                    });
                }
            });
        }

        function OfficeChange() {

            $('#OfficeCode').change(function () {
                var employee = $('#Employee').val();
                var office = $(this).val();
                if (office == null || office === '') {
                    $('#AreaId').empty();

                }
                else {
                    $.ajax({
                        url: "@Url.Action("GetDeskAreaListForHod", "Bookings", new { Area = "DeskBooking" })",
                        type: 'GET',
                        data: {
                            office: office,
                            employee: employee,
                        },
                        beforeSend: function () {
                            showModalLoader();
                        },
                        success: function (data) {

                            let dropdown = $('#AreaId');
                            dropdown.empty();
                            var flag = false;
                            var phase = null;
                            var options = '';
                            options += '<option> </option>';
                            $(data).each(function () {
                                flag = true;
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                            });
                            dropdown.html(options);

                            if (flag == false) {
                                phase = null;
                            }

                            dropdown.val(phase);
                            hideModalLoader();
                        },
                        error: function (result) {
                            hideModalLoader();
                            showError(result);
                        }
                    });
                }
            });
        }

        function initDatePicker() {
            var date = new Date();
            var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());
            var end = new Date(date.getFullYear(), date.getMonth(), date.getDate());

            $('.datepicker').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                nowButton: true,
                minDate: new Date(),
                maxDate: new Date()

            });

            $('#fromDate').bootstrapMaterialDatePicker({
                format: 'DD-MMM-YYYY',
                weekStart: 0,
                time: false,
                startDate: today,
                endDate: end,
            }).on('change', function (e, date) {
                $("#FromDate").val(date.format('DD-MMM-YYYY'));

            });

            if ($('#FromDate').val()) {
                $('#fromDate').bootstrapMaterialDatePicker('setDate', new Date($("#FromDate").val()));
            }

        }

        let vVUloadDeskAreaUserMapHodList = "@Url.Action("GetListsDeskAreaUserMapHod", "Bookings")";

        function loadDeskAreaUserMapHodDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbDeskAreaUserMapHod",
                pColumns: datatableDeskAreaUserMapHodColumns,
                pUrl: vVUloadDeskAreaUserMapHodList,
                PStateSave: false,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,
                    areaId: $('#FilterDataModel_AreaId').val() ? $('#FilterDataModel_AreaId').val() : null,
                    costCode: $('#FilterDataModel_CostCode').val() ? $('#FilterDataModel_CostCode').val() : null,
                    officeLocationCode: $('#FilterDataModel_OfficeLocationCode').val() ? $('#FilterDataModel_OfficeLocationCode').val() : null,
                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>
                let datatableDeskAreaUserMapHodColumns = [
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (data.keyId == null || data.keyId == '') {
                                return '';
                            } else {
                                return '<button class="btn btn-outline-info btn-sm border-none  " ' +
                                    ' data-jqueryselector="openmodal" ' +
                                    ' data-modalcontainer="modalcontainer" ' +
                                    ' data-url="@Url.Action("DeskAreaUserMapHodDetails", "Bookings", new { Area = "DeskBooking" })"' +
                                    ' data-modalpopupwidth="rightw35" ' +
                                    ' data-id="' + data.keyId + '"' +
                                    ' data-modaltitle="Desk Area User Map Detail" ' +
                                    ' data-modalheader="Desk Area User Map Detail" ' +
                                    ' > ' +
                                    ' <i class="far fa-eye" aria-hidden="true"></i> ' +
                                    ' </button>'
                            }

                        },
                        'className': "td-icon",
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return data.empno + " - " + data.empName
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return data.deptCode + " - " + data.deptName
                        }
                    },
                    { data: "officeLocation" },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (data.office == null || data.office == '' || data.areaDesc == null || data.areaDesc == '') {
                                return '';
                            } else {
                                return data.office + " : " + data.areaDesc
                            }
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {

                            return '<button class="btn btn-outline-primary btn-sm border-none" ' +
                                ' data-jqueryselector="openmodal" ' +
                                ' data-modalcontainer="modalcontainer" ' +
                                ' data-url="@Url.Action("DeskAreaUserMapHodEdit", "Bookings", new { Area = "DeskBooking" })"' +
                                ' data-modalpopupwidth="rightw35" ' +
                                ' data-id="' + data.keyId + '"' +
                                ' data-empno="' + data.empno + '"' +
                                ' data-modaltitle="Desk Area User Map Edit" ' +
                                ' data-modalheader="Desk Area User Map Edit" ' +
                                ' > ' +
                                ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                ' </button>'

                        },
                        'className': "td-icon",
                    },
                    {
                        'data': null,
                        render: function (data, type, row) {
                            if (data.keyId == null || data.keyId == '') {
                                return '';
                            } else {
                                return '<button title="Delete" class="btn btn-outline-danger btn-sm border-none " ' +
                                    ' onclick = "showDeleteConfirmationPopup(event,this);" ' +
                                    ' data-jqueryselector = "showconfirmationmodal" ' +
                                    ' data-url="@Url.Action("DeskAreaUserMapHodDelete", "Bookings", new { Area = "DeskBooking" })"' +
                                    ' data-id="' + data.keyId + '"' +
                                    ' data-PostDeleteReLoadDataTables="OK" ' +
                                    ' data-modaltitle="Please Confirm!" ' +
                                    ' data-confirmationtext="Do you want to Delete Desk Area User Map details :-' + data.areaId + ' - ' + data.empName + ' " ' +
                                    ' data-confirmationtype="warning" ' +
                                    ' title="Delete Desk Area User Map" ' +
                                    ' data-confirmbuttontext="Delete" > ' +
                                    ' <i class="fas fa-trash" aria-hidden="true"></i> ' +
                                    ' </button>';
                            }

                        },
                        'className': "td-icon text-center  align-middle",
                    },
                ];
            </text>
        }
            function PostSave(data) {
                if (data.success) {
                    $("#modalcontainer").modal('hide');
                    hideLoader();
                    loadDeskAreaUserMapHodDataTable();
                    notify('success', data.response, 'Success');
                }
            }

        $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                if ($("#GenericSearch").length) {
                    loadDeskAreaUserMapHodDataTable();
                }
            }
        });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadDeskAreaUserMapHodDataTable();
            }
        });
        function PostDeleteReLoadDataTables(data) {
            if (data.success) {
                loadDeskAreaUserMapHodDataTable();
                hideLoader();
                notify('success', data.message, 'Success');
            }
        }

        function PostFilterReLoadDataTable(data) {

            $("#modalcontainer").modal('hide');
            $("#FilterDataModel_AreaId").val(data.areaId);
            $("#FilterDataModel_CostCode").val(data.costCode);
            $("#FilterDataModel_OfficeLocationCode").val(data.officeLocationCode);
            location.reload();
            //loadDeskAreaUserMapHodDataTable();
            hideLoader();

        }
        function OfficeSetofficeFilter(office) {
            $("#OfficeLocationCode").val(office);
            var frm = $("#formDeskAreaUserMapFilterSet");
            frm.submit();
            location.reload();
        }
    </script>
}