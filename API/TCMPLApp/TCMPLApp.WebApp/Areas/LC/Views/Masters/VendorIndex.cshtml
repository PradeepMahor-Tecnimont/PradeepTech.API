@model TCMPLApp.WebApp.Models.VendorViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    //const intVendorCreateEditDeleteId = 175;

    UserIdentity currentUserIdentity = CurrentUserIdentity;
}

@section styles
{

<link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Vendor";

}

@section BreadCrumbs
{
<ol class="breadcrumb">
    <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="LC">Letter of credit</a></li>
    <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Masters" asp-area="LC">Masters</a></li>
    <li class="breadcrumb-item active">Vendor</li>
</ol>
}

<div style="display:none">
    <input type="hidden" asp-for="@Model.FilterDataModel.IsActive" />
</div>

<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Vendor</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            @if (CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.LC.LCHelper.ActionCreateMasters))
            {
                <a class="btn btn-outline-primary btn-sm border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("VendorCreate", "Masters", new { Area = "LC" })'
               data-modaltitle="Vendor"
               data-modalheader="Vendor">
                    <i class="fas fa-plus"></i>&nbsp;@localizer["Vendor"]
                </a>
            }

            <a class="btn btn-outline-primary btn-sm filteredmarker-border border-white"
               data-jqueryselector="openmodal"
               data-modalcontainer="modalcontainer"
               data-modalpopupwidth="rightw35"
               data-url='@Url.Action("VendorFilterGet", "Masters", new { Area = "LC" })'
               data-modaltitle="Filters - Vendor"
               data-modalheader="Filters - Vendor">
                <i class="fas fa-filter"></i>&nbsp;Filters
            </a>
            <a class="btn btn-outline-danger btn-sm border-white filteredmarker-visibility m-l-5"
               data-actionid="VendorIndex"
               data-url='@Url.Action("ResetFilter", "Masters", new { Area = "LC" })'
               href="#"
               onclick="resetFilter(event, this);"
               style="display: none;">
                <i class="fas fa-filter"></i> Reset
            </a>

        </div>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th>@Html.DisplayNameFor(model => model.VendorName)</th>
                    <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script type="text/javascript">
    function localScript() {

        initSelect2();

    }


    $(document).ready(function () {
        localLoadDataTable();
    });
    function localLoadDataTable() {

        let isActionCreateMasters = "@(CurrentUserIdentity.ProfileActions.Any(p => p.RoleId == TCMPLApp.Domain.Models.LC.LCHelper.ActionCreateMasters))";

        var table = $('#tbGrid').DataTable({
            drawCallback: function (settings) {
                loadScript();
            },
            destroy: true,
            pageLength: 25,
            lengthMenu: [25,50],
            processing: true,
            serverSide: true,
            stateSave: true,
            info: false,
            filter: false,
            dom: 'rt<"row"<"col-1"l><"col"p>><"clear">',
          @if ((bool)@Context.Items["isMobile"] == false)
            {
                <text>
                    ordering: false,
                    columns: [
                        { data: "vendorName" },
                        {
                            data: null,
                            render: function (data, type, row) {
                                if(data.isActive == 1 || data.isActive == "1")
                                {
                                    return 'Yes';
                                }
                                else
                                {
                                    return 'No';
                                }
                            }
                        },
                         {
                            data: null,
                            render: function (data, type, row) {

                                if ( isActionCreateMasters == "True")
                                {
                                        return '<button class="btn btn-outline-primary btn-sm border-none" ' +
                                    ' data-jqueryselector="openmodal" ' +
                                    ' data-modalcontainer="modalcontainer" ' +
                                    ' data-url="@Url.Action("VendorUpdate", "Masters", new { Area = "LC" })"' +
                                    ' data-modalpopupwidth="rightw35" ' +
                                    ' data-applicationid="' + data.applicationId + '"' +
                                    ' data-modaltitle="Edit details" ' +
                                    ' data-modalheader="Edit details" ' +
                                    ' > ' +
                                    ' <i class="fas fa-edit" aria-hidden="true"></i> ' +
                                    ' </button>'
                                }
                                else{
                                    return '';
                                }

                            },
                            'className': "td-icon",
                        }

                    ],
                </text>
            }
            else
            {
                <text>
                    ordering: false,
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row) {
                                var item = '<div class="card">';
                                item += '<div class="card-mobiledatatable">';

                                item += '</div></div>';
                                return item
                            },
                            sortable: false,
                            searchable: false,
                            className: "datatable-td-mobile"
                        }
                    ],
                </text>
            }
            ajax: {
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                url: '@Url.Action("GetListsVendor", "Masters")',
                type: 'GET',
                cache: true,
                dataType: "json",
                data: function (d) {
                    d.columns = null;
                    d.order = null;
                    d.search = null;
                    d.genericSearch = null; // $('#FilterDataModel_GenericSearch').val();
                    d.businessEntityId = null; // $('#FilterDataModel_BusinessEntityId').val();
                    d.startDateTime = null; // $('#FilterDataModel_StartDateTime').val();
                    d.endDateTime = null; // $('#FilterDataModel_EndDateTime').val();
                    d.statusTypeId = null; // $('#FilterDataModel_StatusTypeId').val();
                    d.isActive = $('#FilterDataModel_IsActive').val();
                    //d.endDate = $('#FilterDataModel_EndDate').val();
                    },
                    error: function (request, status, error) {
                        notify('error', request.responseText, 'danger');
                    }
                }
        });

        //dataTableSearch();
    }

    function PostFilterReLoadDataTable(data) {
        $("#modalcontainer").modal('hide');

        $("#FilterDataModel_IsActive").val(data.isActive);

        localLoadDataTable();

        hideLoader();
    }

    function PostSaveReLoadDataTable(data) {
        if (data.success) {
            $("#modalcontainer").modal('hide');
            localLoadDataTable();
            hideLoader();
            notify('success', data.response, 'Success');
        }
    }
</script>
}  