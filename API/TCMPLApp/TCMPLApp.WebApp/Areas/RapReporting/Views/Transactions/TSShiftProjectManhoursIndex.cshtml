@model TCMPLApp.WebApp.Models.ShiftingManhoursViewModel;
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@Html.AntiForgeryToken()

@{
    UserIdentity currentUserIdentity = CurrentUserIdentity;
    const string actionName = "TSShiftProjectManhoursIndex";
    const string controllerName = "Transactions";
}

@section BreadCrumbs
{
<ol class="breadcrumb">
    <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="RapReporting">Rap Reporting</a></li>
    <li class="breadcrumb-item "><a asp-action="ManageIndex" asp-controller="Transactions" asp-area="RapReporting">Manage</a></li>
    <li class="breadcrumb-item active" aria-current="page">Shift project manhours</li>
</ol>
}

@section styles
{
<link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />

<!-- DataTable -->
    @*<link rel="stylesheet" href="~/assets/plugins/data-tables/css/datatables.min.css" asp-append-version="true">*@
<!-- Material Datepicker css -->
<link rel="stylesheet" href="~/lib/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Shift project manhours";
}

<input id="Yyyy" readonly type="hidden" asp-for="@Model.FilterDataModel.Yyyy" />
<input id="YearMode" readonly type="hidden" asp-for="@Model.FilterDataModel.YearMode" />
<input id="Yyyymm" readonly type="hidden" asp-for="@Model.FilterDataModel.Yyyymm" />
<input id="CostCode" readonly type="hidden" asp-for="@Model.FilterDataModel.CostCode" />
<input id="Projno" readonly type="hidden" asp-for="@Model.FilterDataModel.Projno" />

<div class="card-toolbar p-l-15">
    <div role="toolbar">
        <button id="filterGet" type="button" class="btn btn-secondary btn-sm border-white"
                data-jqueryselector="openmodal"
                data-modalcontainer="modalcontainer"
                data-modalpopupwidth="rightw35"
                data-url='@Url.Action("FilterGet", "Home", new { Area = "RapReporting" })'
                data-actionName=@actionName
                data-controllerName=@controllerName
                data-modaltitle="Filter"
                data-modalheader="Filter">
            <i class="fas fa-filter"></i>&nbsp;Filter ::

            @if (!string.IsNullOrEmpty(Model.FilterDataModel.Yyyy))
            {
                @Html.Raw(localizer["Year : "] + Model.FilterDataModel.Yyyy)
                ;
            }
            @if (!string.IsNullOrEmpty(Model.FilterDataModel.YearMode))
            {
                @Html.Raw(localizer[", Year mode : "] + (Model.FilterDataModel.YearMode == "A" ? "April - March" : "January - December"))
                ;
            }
            @if (!string.IsNullOrEmpty(Model.FilterDataModel.Yyyymm))
            {
                @Html.Raw(localizer[", Year month : "] + (Model.FilterDataModel.Yyyymm.Substring(4, 2) == "01" ? "Jan " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "02" ? "Feb " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "03" ? "Mar " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "04" ? "Apr " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "05" ? "May " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "06" ? "Jun " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "07" ? "Jul " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "08" ? "Aug " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "09" ? "Sep " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "10" ? "Oct " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : Model.FilterDataModel.Yyyymm.Substring(4, 2) == "11" ? "Nov " + Model.FilterDataModel.Yyyymm.Substring(0, 4)
            : "Dec " + Model.FilterDataModel.Yyyymm.Substring(0, 4)))
                ;
            }
            @if (!string.IsNullOrEmpty(Model.FilterDataModel.CostCode))
            {
                @Html.Raw(localizer[", Cost code : "] + Model.FilterDataModel.CostCode)
                ;
            }

        </button>

    </div>
</div>
<div class="m-2"></div>

<div class="container-fluid bg-white border card rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Shift project manhours</p>
    </div>
    <div class="card-toolbar">
        <div role="toolbar">
            @if (@Model.FilterDataModel.YearMode == "A" && @Model.FilterDataModel.Yyyymm.Substring(4, 2) != "04" && ViewBag.ProcMonth == @Model.FilterDataModel.Yyyymm )
            {
                <a title="" class="btn btn-outline-primary btn-sm border-none" href="#"
                   data-jqueryselector="openmodal"
                   data-modalcontainer="modalcontainer"
                   data-modalpopupwidth="rightw35"
                   data-url='@Url.Action("TSShiftProjectManhours", "Transactions", new
                        { Area = "RapReporting",                      
                          yyyy = @Model.FilterDataModel.Yyyy,
                          YearMode = @Model.FilterDataModel.YearMode                      
                        })'
                   data-modaltitle="Shift project manhours"
                   data-modalheader="Shift project manhours">
                    <i class="fas fa-plus"></i> Shift project manhours
                </a>
            }
        </div>
    </div>

    <div class="m-1"></div>

    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch"
                   placeholder=" ">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <br/>
        <table id="tbTSShiftProjectManhoursLogs" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr role="row">
                    <th>Period</th>
                    <th>From project</th>
                    <th>To project</th>
                    <th>Status</th>
                    <th>Remarks</th>
                    <th></th>
                </tr>
            </thead>
        </table>
        <div id="result"></div>
    </div>
</div>

@section Scripts {
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");        
    await Html.RenderPartialAsync("_RapReportingDataTableColumnsPartial");
}
<script src="~/js/site-rap.js" asp-append-version="true"></script>
<script type="text/javascript">

    function localScript() {
        initSelect2();

        $('#ToProject').empty();
        var yearMonthListUrl = "@Url.Action("GetYearMonthList", "Home", new { Area = "RapReporting" })";
        callRapReportingFilterListeners(yearMonthListUrl);

        if ($('#Yyyy').val() == null || $('#Yyyy').val() == '' ||
            $('#YearMode').val() == null || $('#YearMode').val() == '' ||
            $('#Yyyymm').val() == null || $('#Yyyymm').val() == '') {
            hideFilterCancelButton('HIDE');
        }
        else {
            hideFilterCancelButton('SHOW');
        }

        var cancelButtonRedirectUrl = "@Url.Action("RedirectPage", "Home", new
        {
            Area = "RapReporting",
            actionName = @actionName,
            controllerName = @controllerName
        })";
        callCancelButtonListeners(cancelButtonRedirectUrl);

        callFilterDefaultsListeners();


        $('#FromProject').change(function () {
                var fromProjectId = $(this).val();

                $.ajax({
                    url: "@Url.Action("GetProjectList", "Transactions", new { Area = "RapReporting" })",
                    type: 'GET',
                    data: {
                        fromProject: fromProjectId
                    },
                    beforeSend: function () {
                        showModalLoader();
                    },
                    success: function (data) {
                        let dropdown = $('#ToProject');
                        dropdown.empty();

                        var options = '';
                        options += '<option> </option>';

                        $(data).each(function () {
                            if (this.dataValueField != fromProjectId)
                                options += '<option value="' + this.dataValueField + '">' + this.dataTextField + '</option>';
                        });

                        dropdown.html(options);
                        hideModalLoader();
                    },
                    error: function () {
                        // Handle error
                        alert('Error fetching projects.');
                    }
                });
            });
    }

    $(document).ready(function () {
        if ($('#Yyyy').val() == null || $('#Yyyy').val() == '' ||
            $('#YearMode').val() == null || $('#YearMode').val() == '' ||
            $('#Yyyymm').val() == null || $('#Yyyymm').val() == '' ) {
            $("#filterGet").click();
        }
        else {
            loadTSShiftProjectManhoursDataTable();
        }
    });

    $("#GenericSearch").keypress(function (event) {
            if (event.keyCode === 13) {
                var dataTable = $('#tbGrid').DataTable();
                if ($("#GenericSearch").length) {
                    dataTable
                        .search($('#GenericSearch').val())
                        .draw();
                } else {
                    dataTable
                        .search($('#genericSearch').val())
                        .draw();
                }
            }
        });

    $('#buttonSearch').on('click', function () {
            var dataTable = $('#tbGrid').DataTable();
            if ($("#GenericSearch").length) {
                dataTable
                    .search($('#GenericSearch').val())
                    .draw();
            } else {
                dataTable
                    .search($('#genericSearch').val())
                    .draw();
            }
        });

    function PostSaveReLoadDataTable(data) {        
        loadTSShiftProjectManhoursDataTable();
        $("#modalcontainer").modal('hide');
        hideLoader();
        notify('success', data.response, 'Success');        
    };         

</script>
}
