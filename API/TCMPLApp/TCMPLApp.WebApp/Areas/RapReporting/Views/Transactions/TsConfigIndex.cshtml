@model TCMPLApp.WebApp.Models.TsConfigViewModel
@inject TCMPLApp.WebApp.Services.SharedViewLocalizer localizer

@{
    ViewData["Title"] = "Ts Config";
    var isRAPAdmin = CurrentUserIdentity.ProfileActions.Any(p => p.ActionId == TCMPLApp.Domain.Models.RapReporting.RapReportingHelper.ActionRAPAdmin);
}

@Html.AntiForgeryToken()


@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="RapReporting">Rap Reporting</a></li>
        <li class="breadcrumb-item "><a asp-action="TransactionsIndex" asp-controller="Transactions" asp-area="RapReporting">Transactions</a></li>
        <li class="breadcrumb-item "><a asp-action="MasterIndex" asp-controller="Transactions" asp-area="RapReporting">Masters</a></li>
        <li class="breadcrumb-item active" aria-current="page">Ts Config</li>
    </ol>
}

@section Styles {
    <link href="@Url.Content("~/css/drome-style.css")" rel="stylesheet" type="text/css" asp-append-version="true" />
}

<div class="container-fluid bg-white border rounded shadow m-auto col-xl-11 p-2 ">
    <div class="app-h4 app-card-header mb-2">
        <p>Ts Config</p>
    </div>
    <div class="m-1"></div>
    <div class="bg-gray-active rounded ">
        <div class="input-group pt-1 pl-1 pr-1 ">
            <input type="text" class="form-control form-control-sm border" id="GenericSearch" name="GenericSearch" placeholder="Search...">
            <div class="input-group-append">
                <button class="btn btn-sm btn-outline-info" type="button" id="buttonSearch"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <table id="tbGrid" class="table table-striped table-bordered table-responsive-lg ">
            <thead class="bg-info text-white">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Schemaname)</th>
                    <th>@Html.DisplayNameFor(model => model.Username)</th>
                    <th>@Html.DisplayNameFor(model => model.Password)</th>
                    <th>@Html.DisplayNameFor(model => model.ProsMonth)</th>
                    <th>@Html.DisplayNameFor(model => model.Yearstart01)</th>
                    <th>@Html.DisplayNameFor(model => model.Yearstart04)</th>
                    <th>@Html.DisplayNameFor(model => model.Lockedmnth)</th>
                    <th>@Html.DisplayNameFor(model => model.Yrstdate01)</th>
                    <th>@Html.DisplayNameFor(model => model.Yrstdate04)</th>
                    <th>@Html.DisplayNameFor(model => model.Invoicemonth)</th>
                    <th>@Html.DisplayNameFor(model => model.Yearend01)</th>
                    <th>@Html.DisplayNameFor(model => model.Yearend04)</th>
                </tr>
            </thead>
        </table>

        <div id="result">
        </div>
    </div>

</div>
@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        var dataTable;
        $(document).ready(function () {
            localScript();
            loadTsConfigDataTable();
        });

        function localScript() {
            initSelect2();
        };

        let vVUloadTsConfigList = "@Url.Action("GetTsConfigLists", "Transactions")";

        function loadTsConfigDataTable() {
            genericLoadDataTable({
                pDataTableId: "#tbGrid",
                pColumns: datatableColumns,
                pUrl: vVUloadTsConfigList,
                pUrlParams: {
                    genericSearch: $('#GenericSearch').val() ? $('#GenericSearch').val() : null,

                },
                pRequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()

            });
        };

        @if ((bool)@Context.Items["isMobile"] == false)
        {
            <text>

                let datatableColumns = [
                    { data: "schemaname" },
                    { data: "username" },
                    { data: "password" },
                    { data: "prosMonth" },
                    { data: "yearstart01" },
                    { data: "yearstart04" },
                    { data: "lockedmnth" },
                    {
                        'data': "yrstdate01",
                        'render': function (data) {
                            return moment(data).format('DD-MMM-YYYY');
                        }
                    },
                    {
                        'data': "yrstdate04",
                        'render': function (data) {
                            return moment(data).format('DD-MMM-YYYY');
                        }
                    },
                    { data: "invoicemonth" },
                    { data: "yearend01" },
                    { data: "yearend04" },
                ];


            </text>
        }


            $("#GenericSearch").keypress(function (event) {
                if (event.keyCode === 13) {
                    if ($("#GenericSearch").length) {
                        loadTsConfigDataTable();
                    }
                }
            });

        $('#buttonSearch').on('click', function () {

            if ($("#GenericSearch").length) {
                loadTsConfigDataTable();
            }
        });
        function PostSave(data) {
            if (data.success) {
                $("#modalcontainer").modal('hide');
                hideLoader();
                loadTsConfigDataTable();
                notify('success', data.response, 'Success');
            }
        };

    </script>
}