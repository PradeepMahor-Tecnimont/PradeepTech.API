@model TCMPLApp.WebApp.Models.OffBoardingExitsApproveViewModel

@{
    ViewData["Title"] = "HR Manager Approval";
}

@section BreadCrumbs
{
    <ol class="breadcrumb">
        <li class="breadcrumb-item "><a asp-action="Index" asp-controller="Home" asp-area="OffBoarding">Off-Boarding</a></li>
        <li class="breadcrumb-item "><a asp-action="HRManagerExitsPending" asp-controller="Exits" asp-area="OffBoarding">Exits List</a></li>
        <li class="breadcrumb-item active" aria-current="page">HR Manager Approval</li>
    </ol>
}


@Html.AntiForgeryToken()
<form asp-action="HRManagerExitsApprove"
      asp-controller="Exits"
      asp-area="OffBoarding"
      method="post"
      id="hrmngr-approval"
      accept-charset="UTF-8">

    <div class="container-fluid bg-gray-active border rounded shadow m-auto py-2 col-xl-9">
        <div class="app-h4 app-card-header mb-2">
            <p>Off-Boarding - Exits approval by @ViewBag.ActionAttributes.ActionDesc</p>
        </div>
        <div class="  bg-gray-active border rounded ">
            <div class="childcontent-div" id="div-exitdetails">
                <div id="pv-exitdetails">

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-6">
                <div class="form-group">
                    @Html.HiddenFor(m => m.Empno)
                    @Html.HiddenFor(m => m.ApprovalType)
                    @Html.DisplayNameFor(m => m.Remarks)
                    @if (@ViewBag.HRManagerCanApprove != "OK")
                    {
                        @Html.TextBoxFor(m => m.Remarks, new { @readonly = "readonly", @class = "form-control readonly" })
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control" })
                    }
                    <span asp-validation-for="Remarks" class="text-danger"></span>

                </div>
            </div>
            <div class="col-xl-6 align-items-center d-flex">
            </div>
        </div>
        <div class="row">
            <div class="col-xl-6">
                @if (@ViewBag.HRManagerCanApprove != "OK")
                {
                    <label class="text-danger">Descendants approvals pending.</label>
                }
                else
                {

                    <button type="button" onclick="SubmitHold();" class="btn btn-warning mx-3">
                        <i class="fas fa-save fa-1x"></i>
                        Hold
                    </button>
                    <button type="button" onclick="SubmitApproval();" class="btn btn-primary mx-3">
                        <i class="fas fa-save fa-1x"></i>
                        Approve
                    </button>
                }
            </div>
        </div>
    </div>
</form>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            loadEmployeeDetails();
        });

        function loadEmployeeDetails() {
            var divid = $("#pv-exitdetails");

            var empno = $("#Empno").val();


            if (empno == '') {
                divid.empty();
                $("#div-exitdetails").removeClass("active");
                return;
            }
            else
                $("#div-exitdetails").addClass("active");

            $.ajax({
                url: '@Url.Action("GetEmpExitDetails", "Exits",new {Area = "OffBoarding"})',
                data: {
                        'empno': empno
                },
                type: 'GET',
                beforeSend: function () {
                        showLoader();
                    },
                success: function (data) {
                        divid.html(data);
                        hideLoader();
                    },
                error: function (result) {
                        hideLoader();
                        errorText = result.responseText.indexOf("divErrorMessage") == -1 ? result.responseText : ($(result.responseText).find("div[id*=divErrorMessage]").text()).replace("text-danger", "text-white");
                        notify("error", errorText, 'Error');
                    }
                });
        }
        function SubmitHold() {

            $("#ApprovalType").val("HOLD");
            $("#hrmngr-approval").submit();
        }

        function SubmitApproval() {

            $("#ApprovalType").val("APPROVE");
            $("#hrmngr-approval").submit();
        }

    </script>
}